package lexico;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

terminal IDENTIFICADOR, OPERADOR, PALABRA_RESERVADA, TRANSAC, UNIDAD, LITERAL, 
  ERROR_IDENTIFICADOR, ERROR_COMENTARIO, ERROR_STRING, ERROR_CARACTERES_NO_VALIDOS, ERROR_HEXADECIMAL, 
  ERROR_CEROS_A_LA_IZQUIERDA, ERROR_NOTACION_CIENTIFICA,
  
  NUMERO, STRING,TIPO,IF, WHILE, FOR, DO, ELSE, RETURN, COMA, VISIBILDAD, MODIFICADOR, 
  CONTRACT, ENUM, PRAGMA, SOLIDITY, IGUAL, STRUCT, FUNCTION, OP_ARITMETICO, OP_BOOLEANO, PUNTOCOMA,
  PARENTESIS_ABRE, PARENTESIS_CIERRE, LLAVE_ABRE, LLAVE_CIERRE;

nom terminal INICIO, random;


start with INICIO;

INICIO ::= PRAGMA SOLIDITY NUMERO NUMERO PUNTOCOMA CONTRACT IDENTIFICADOR LLAVE_ABRE LLAVE_CIERRE ;

random ::= IDENTIFICADOR OPERADOR PALABRA_RESERVADA TRANSAC UNIDAD LITERAL 
  ERROR_IDENTIFICADOR ERROR_COMENTARIO ERROR_STRING ERROR_CARACTERES_NO_VALIDOS ERROR_HEXADECIMAL
  ERROR_CEROS_A_LA_IZQUIERDA ERROR_NOTACION_CIENTIFICA
  
  NUMERO STRING TIPO IF WHILE FOR DO ELSE RETURN COMA VISIBILDAD MODIFICADOR
  CONTRACT ENUM PRAGMA SOLIDITY IGUAL STRUCT FUNCTION OP_ARITMETICO OP_BOOLEANO PUNTOCOMA
  PARENTESIS_ABRE PARENTESIS_CIERRE LLAVE_ABRE LLAVE_CIERRE;





