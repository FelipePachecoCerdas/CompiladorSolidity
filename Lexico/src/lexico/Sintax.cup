package lexico;

import java_cup.runtime.Symbol;
import java.util.Stack;
import java.util.ArrayList;
import java.util.Iterator;

parser code
{:
  public ArrayList<Symbol> errores = new ArrayList<>();
  public ArrayList<String> erroresStr = new ArrayList<>();
  
  public void syntax_error(Symbol s) {
    System.out.println("ERROR CON: " + s.value);
    String cadena = "";

    for (int i = 0; i < this.stack.size(); i++) {
      Symbol sp = this.stack.get(i);
      //System.out.println(sp.value+" "+Integer.toString(sp.sym));      
    }
    for (int i = this.stack.size() - 1; i > 0; i--) {
      Symbol sp = this.stack.get(i);
      System.out.println(sp.value+" "+Integer.toString(sp.sym));
      cadena = sp.value + " " + cadena;
      if ("enum".equals(sp.value)) {
        System.out.println("Soy un error de enum xd");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(sp.sym, sp.left, sp.right, cadena);
        errores.add(sp2);
        erroresStr.add("Enum");
        break;
      }
        }
  }

  @Override
  public int error_sync_size() {
    return 2;
  }

:};

terminal Linea, Comillas, T_dato, Cadena, If, Else, Do, While, For, Dos_Puntos,
    Igual, Op_logico, Op_relacional, Op_atribucion, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Identificador,
    Numero,   Contract, Enum, Pragma, Solidity, Struct,Function,Modificador, Coma, Caret, Punto, This, Break, Continue, 
    String, Return, Returns,  Op_Aritmetico, Visibilidad, Pregunta, PALABRA_RESERVADA, UNIDAD, TRANSAC,ERROR_CEROS_A_LA_IZQUIERDA, ERROR_CARACTERES_NO_VALIDOS, ERROR_IDENTIFICADOR
    , ERROR_NOTACION_CIENTIFICA, STRING, ERROR_STRING, OPERADOR, ERROR_COMENTARIO,ERROR_HEXADECIMAL,  ERROR;

non terminal INICIO, CONTRATO, OP_TERNARIO, DECLARACION_FOR, IF, IF_ELSE, LISTA, PARAMETROS,
    WHILE, DO_WHILE, FOR, EXPRESION_BOOLEANA, SENTENCIA, SENTENCIA_FOR, ENUMERADOR, VARIABLES, ASIGNACION, ESTRUCTURA, 
    FUNCION, MODIFICADORES, RETURNS, CUERPO, FUNCION_HEADER, ASIGNACION_BASICA, ASIGNACION_COMPLEJA, LLAMADA_FUNCION, ARGUMENTOS,
    EXPRESION, ESTRUCTURA_CONTROL, IDENTIFICADOR_CUERPO, CUERPO_EC ;

start with INICIO;

INICIO ::= 
    Pragma Solidity Numero Numero P_coma CONTRATO |
    Pragma Solidity Caret Numero Numero P_coma CONTRATO
;
CONTRATO ::=
    Contract Identificador Llave_a Llave_c CONTRATO |

    Contract Identificador Llave_a ENUMERADOR Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO |
    Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO |

    Contract Identificador Llave_a VARIABLES Llave_c CONTRATO |
    Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO |
    Contract Identificador Llave_a VARIABLES FUNCION Llave_c CONTRATO |
    Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO |

    Contract Identificador Llave_a ESTRUCTURA Llave_c CONTRATO |
    Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO |

    Contract Identificador Llave_a FUNCION Llave_c CONTRATO |

    Contract Identificador Llave_a Llave_c |

    Contract Identificador Llave_a ENUMERADOR Llave_c |
    Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c |
    Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c |
    Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c |
    Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c |
    Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c |
    Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c |
    Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c |

    Contract Identificador Llave_a VARIABLES Llave_c |
    Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c |
    Contract Identificador Llave_a VARIABLES FUNCION Llave_c |
    Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c |

    Contract Identificador Llave_a ESTRUCTURA Llave_c |
    Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c |

    Contract Identificador Llave_a FUNCION Llave_c 
;
ENUMERADOR ::= 
    Enum Identificador Llave_a LISTA Llave_c ENUMERADOR |
    Enum Identificador Llave_a Llave_c ENUMERADOR |
    Enum Identificador Llave_a LISTA Llave_c |
    Enum Identificador Llave_a Llave_c |

    Enum error Llave_a LISTA Llave_c ENUMERADOR |
    Enum error Llave_a Llave_c ENUMERADOR |

    Enum Identificador error LISTA Llave_c ENUMERADOR |
    Enum Identificador error Llave_c ENUMERADOR |

    Enum error Llave_a LISTA Llave_c | 
    Enum error Llave_a Llave_c |

    Enum Identificador error LISTA Llave_c |
    Enum Identificador error Llave_c 
;
LISTA ::= 
    Identificador Coma LISTA |
    Identificador
;
VARIABLES ::=
    T_dato Visibilidad Identificador P_coma VARIABLES |
    T_dato Identificador P_coma VARIABLES |
    T_dato Corchete_a Corchete_c Visibilidad Identificador P_coma VARIABLES |
    T_dato Corchete_a Corchete_c Identificador P_coma VARIABLES |

    T_dato Visibilidad Identificador ASIGNACION P_coma VARIABLES |
    T_dato Identificador ASIGNACION P_coma VARIABLES |
    T_dato Corchete_a Corchete_c Visibilidad Identificador ASIGNACION P_coma VARIABLES |
    T_dato Corchete_a Corchete_c Identificador ASIGNACION P_coma VARIABLES |

    T_dato Visibilidad Identificador P_coma |
    T_dato Identificador P_coma |
    T_dato Corchete_a Corchete_c Visibilidad Identificador P_coma |
    T_dato Corchete_a Corchete_c Identificador P_coma |

    T_dato Visibilidad Identificador ASIGNACION P_coma |
    T_dato Identificador ASIGNACION P_coma |
    T_dato Corchete_a Corchete_c Visibilidad Identificador ASIGNACION P_coma |
    T_dato Corchete_a Corchete_c Identificador ASIGNACION P_coma 
;
ASIGNACION ::= 
    Igual EXPRESION
;
ESTRUCTURA ::=
    Struct Identificador Llave_a VARIABLES Llave_c ESTRUCTURA |
    Struct Identificador Llave_a VARIABLES Llave_c
;
FUNCION_HEADER ::=
    Function Identificador Parentesis_a PARAMETROS Parentesis_c |
    Function Identificador Parentesis_a PARAMETROS Parentesis_c MODIFICADORES |
    Function Identificador Parentesis_a PARAMETROS Parentesis_c RETURNS |
    Function Identificador Parentesis_a PARAMETROS Parentesis_c MODIFICADORES RETURNS 
;
FUNCION ::=
    FUNCION_HEADER Llave_a VARIABLES Return EXPRESION P_coma Llave_c FUNCION |
    FUNCION_HEADER Llave_a VARIABLES CUERPO Return EXPRESION P_coma Llave_c FUNCION |
    FUNCION_HEADER Llave_a CUERPO Return EXPRESION P_coma Llave_c FUNCION |
    FUNCION_HEADER Llave_a Return EXPRESION P_coma Llave_c FUNCION |
    FUNCION_HEADER Llave_a VARIABLES Return EXPRESION P_coma Llave_c |
    FUNCION_HEADER Llave_a VARIABLES CUERPO Return EXPRESION P_coma Llave_c |
    FUNCION_HEADER Llave_a CUERPO Return EXPRESION P_coma Llave_c 
    FUNCION_HEADER Llave_a Return EXPRESION P_coma Llave_c 
;
RETURNS ::= 
    Returns Parentesis_a T_dato Identificador  Parentesis_c
;
PARAMETROS ::=
    T_dato Identificador Coma PARAMETROS |
    T_dato Identificador
;
MODIFICADORES ::=
    Modificador MODIFICADORES |
    Visibilidad MODIFICADORES |
    Modificador |
    Visibilidad 
;
CUERPO ::=
    ASIGNACION_BASICA CUERPO |
    EXPRESION P_coma CUERPO |
    ESTRUCTURA_CONTROL CUERPO |

    ASIGNACION_BASICA |
    EXPRESION P_coma |
    ESTRUCTURA_CONTROL 
;
IDENTIFICADOR_CUERPO ::=
    This Punto Identificador Parentesis_a Parentesis_c |
    This Punto Identificador Parentesis_a ARGUMENTOS Parentesis_c |
    This Punto Identificador |
    Identificador Punto Identificador Parentesis_a ARGUMENTOS Parentesis_c |
    Identificador Punto Identificador Parentesis_a Parentesis_c |
    Identificador Punto Identificador 
;
ASIGNACION_BASICA ::= 
    IDENTIFICADOR_CUERPO Igual EXPRESION P_coma |
    Identificador Igual EXPRESION P_coma 
;
ASIGNACION_COMPLEJA ::= 
    IDENTIFICADOR_CUERPO Igual EXPRESION P_coma |
    T_dato Identificador Igual EXPRESION P_coma | 
    Identificador Igual EXPRESION P_coma 
;
LLAMADA_FUNCION ::= 
    Identificador Parentesis_a ARGUMENTOS Parentesis_c |
    Identificador Parentesis_a Parentesis_c
;
ARGUMENTOS ::=
    EXPRESION Coma ARGUMENTOS |
    EXPRESION
;
EXPRESION ::= 
    Numero |
    Cadena |
    Op_booleano |
    Identificador |
    LLAMADA_FUNCION | 
    IDENTIFICADOR_CUERPO 
;
ESTRUCTURA_CONTROL ::= 
    IF_ELSE |
    IF | 
    WHILE |
    DO_WHILE |
    FOR 
;
SENTENCIA ::=
    IF_ELSE |
    IF | 
    WHILE |
    DO_WHILE |
    FOR |
    Break P_coma |
    Continue P_coma |
    Return EXPRESION P_coma
;
CUERPO_EC ::=
    ASIGNACION_BASICA CUERPO_EC |
    EXPRESION P_coma CUERPO_EC |
    SENTENCIA CUERPO_EC |

    ASIGNACION_BASICA |
    EXPRESION P_coma |
    SENTENCIA 
;
OP_TERNARIO ::= 
    Parentesis_a EXPRESION_BOOLEANA Parentesis_c Pregunta EXPRESION Dos_Puntos EXPRESION
;
IF ::= 
    If Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a CUERPO_EC Llave_c
    If Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a Llave_c
;
EXPRESION_BOOLEANA ::= 
    Op_booleano | 
    EXPRESION Op_relacional EXPRESION
;
IF_ELSE ::= 
    If Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c
    If Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c
    If Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c
    If Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a Llave_c Else Llave_a Llave_c
;
WHILE ::= 
    While Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a CUERPO_EC Llave_c
    While Parentesis_a EXPRESION_BOOLEANA Parentesis_c Llave_a Llave_c
;
DO_WHILE ::= 
    Do Llave_a CUERPO_EC Llave_c While Parentesis_a EXPRESION_BOOLEANA Parentesis_c P_coma
    Do Llave_a Llave_c While Parentesis_a EXPRESION_BOOLEANA Parentesis_c P_coma
;
FOR ::= 
    For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a CUERPO_EC Llave_c
    For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a Llave_c
;
SENTENCIA_FOR ::=
    ASIGNACION_COMPLEJA P_coma EXPRESION P_coma EXPRESION |
    P_coma EXPRESION P_coma EXPRESION |
    ASIGNACION_COMPLEJA P_coma P_coma EXPRESION |
    ASIGNACION_COMPLEJA P_coma EXPRESION P_coma |
    P_coma P_coma EXPRESION |
    P_coma EXPRESION P_coma |
    ASIGNACION_COMPLEJA P_coma P_coma | 
    P_coma P_coma 
;




