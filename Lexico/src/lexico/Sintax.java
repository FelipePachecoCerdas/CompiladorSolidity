
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Aug 15 01:36:05 CST 2020
//----------------------------------------------------

package lexico;

import java_cup.runtime.Symbol;
import java.util.Stack;
import java.util.ArrayList;
import java.util.Iterator;
import lexico.Semantico;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sat Aug 15 01:36:05 CST 2020
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0179\000\002\002\004\000\002\002\010\000\002\002" +
    "\011\000\002\002\005\000\002\003\007\000\002\003\010" +
    "\000\002\003\011\000\002\003\011\000\002\003\011\000" +
    "\002\003\012\000\002\003\012\000\002\003\012\000\002" +
    "\003\013\000\002\003\010\000\002\003\011\000\002\003" +
    "\011\000\002\003\012\000\002\003\010\000\002\003\011" +
    "\000\002\003\010\000\002\003\006\000\002\003\007\000" +
    "\002\003\010\000\002\003\010\000\002\003\010\000\002" +
    "\003\011\000\002\003\011\000\002\003\011\000\002\003" +
    "\012\000\002\003\007\000\002\003\010\000\002\003\010" +
    "\000\002\003\011\000\002\003\007\000\002\003\010\000" +
    "\002\003\007\000\002\003\007\000\002\003\010\000\002" +
    "\003\011\000\002\003\011\000\002\003\011\000\002\003" +
    "\012\000\002\003\012\000\002\003\012\000\002\003\013" +
    "\000\002\003\010\000\002\003\011\000\002\003\011\000" +
    "\002\003\012\000\002\003\010\000\002\003\011\000\002" +
    "\003\010\000\002\003\006\000\002\003\007\000\002\003" +
    "\010\000\002\003\010\000\002\003\010\000\002\003\011" +
    "\000\002\003\011\000\002\003\011\000\002\003\012\000" +
    "\002\003\007\000\002\003\010\000\002\003\010\000\002" +
    "\003\011\000\002\003\007\000\002\003\010\000\002\003" +
    "\007\000\002\022\010\000\002\022\007\000\002\022\007" +
    "\000\002\022\006\000\002\022\010\000\002\022\007\000" +
    "\002\022\010\000\002\022\007\000\002\022\007\000\002" +
    "\022\006\000\002\022\007\000\002\022\006\000\002\046" +
    "\002\000\002\010\006\000\002\010\003\000\002\047\002" +
    "\000\002\010\007\000\002\010\004\000\002\050\002\000" +
    "\002\023\010\000\002\051\002\000\002\023\007\000\002" +
    "\023\011\000\002\023\010\000\002\023\006\000\002\023" +
    "\005\000\002\023\010\000\002\023\007\000\002\023\007" +
    "\000\002\023\006\000\002\023\011\000\002\023\010\000" +
    "\002\023\006\000\002\023\005\000\002\023\010\000\002" +
    "\023\007\000\002\023\011\000\002\023\010\000\002\023" +
    "\010\000\002\023\007\000\002\023\011\000\002\023\010" +
    "\000\002\023\010\000\002\023\007\000\002\023\011\000" +
    "\002\023\010\000\002\023\010\000\002\023\007\000\002" +
    "\023\007\000\002\023\006\000\002\023\011\000\002\023" +
    "\010\000\002\023\006\000\002\023\005\000\002\023\010" +
    "\000\002\023\007\000\002\023\006\000\002\023\005\000" +
    "\002\023\010\000\002\023\007\000\002\023\005\000\002" +
    "\023\004\000\002\023\007\000\002\023\006\000\002\023" +
    "\010\000\002\023\010\000\002\023\006\000\002\023\007" +
    "\000\002\023\007\000\002\023\007\000\002\023\006\000" +
    "\002\052\002\000\002\024\005\000\002\025\010\000\002" +
    "\025\007\000\002\025\007\000\002\025\006\000\002\025" +
    "\010\000\002\025\007\000\002\025\007\000\002\025\006" +
    "\000\002\025\010\000\002\025\007\000\002\025\007\000" +
    "\002\025\006\000\002\025\010\000\002\025\007\000\002" +
    "\025\007\000\002\025\006\000\002\025\007\000\002\025" +
    "\006\000\002\025\006\000\002\025\005\000\002\025\010" +
    "\000\002\025\006\000\002\025\007\000\002\025\010\000" +
    "\002\025\007\000\002\025\007\000\002\025\006\000\002" +
    "\025\005\000\002\033\007\000\002\033\006\000\002\033" +
    "\006\000\002\033\005\000\002\033\006\000\002\033\005" +
    "\000\002\033\005\000\002\033\004\000\002\033\005\000" +
    "\002\033\006\000\002\033\006\000\002\033\007\000\002" +
    "\033\004\000\002\033\005\000\002\033\005\000\002\033" +
    "\006\000\002\033\005\000\002\033\006\000\002\033\006" +
    "\000\002\033\007\000\002\033\005\000\002\033\005\000" +
    "\002\033\006\000\002\033\005\000\002\033\006\000\002" +
    "\033\006\000\002\033\007\000\002\033\004\000\002\033" +
    "\004\000\002\033\005\000\002\053\002\000\002\027\012" +
    "\000\002\054\002\000\002\027\013\000\002\055\002\000" +
    "\002\027\012\000\002\056\002\000\002\027\011\000\002" +
    "\027\010\000\002\027\011\000\002\027\010\000\002\027" +
    "\007\000\002\027\013\000\002\027\011\000\002\027\012" +
    "\000\002\027\011\000\002\027\010\000\002\027\010\000" +
    "\002\027\011\000\002\027\010\000\002\027\007\000\002" +
    "\027\011\000\002\027\012\000\002\027\011\000\002\027" +
    "\010\000\002\027\010\000\002\027\011\000\002\027\010" +
    "\000\002\027\007\000\002\027\011\000\002\027\012\000" +
    "\002\027\011\000\002\027\010\000\002\027\010\000\002" +
    "\027\011\000\002\027\010\000\002\027\007\000\002\027" +
    "\012\000\002\027\013\000\002\027\012\000\002\027\011" +
    "\000\002\027\011\000\002\027\012\000\002\027\011\000" +
    "\002\027\010\000\002\027\011\000\002\027\010\000\002" +
    "\027\010\000\002\057\002\000\002\031\010\000\002\031" +
    "\005\000\002\031\007\000\002\031\007\000\002\031\007" +
    "\000\002\031\007\000\002\031\007\000\002\031\006\000" +
    "\002\031\007\000\002\031\007\000\002\031\006\000\002" +
    "\031\005\000\002\031\005\000\002\031\006\000\002\031" +
    "\006\000\002\011\006\000\002\011\004\000\002\011\006" +
    "\000\002\011\005\000\002\011\004\000\002\011\006\000" +
    "\002\011\004\000\002\011\003\000\002\030\004\000\002" +
    "\030\004\000\002\030\003\000\002\030\003\000\002\060" +
    "\002\000\002\032\006\000\002\032\004\000\002\032\005" +
    "\000\002\032\004\000\002\032\004\000\002\032\003\000" +
    "\002\026\005\000\002\026\006\000\002\026\003\000\002" +
    "\026\005\000\002\026\006\000\002\026\003\000\002\041" +
    "\005\000\002\041\003\000\002\034\005\000\002\035\005" +
    "\000\002\035\006\000\002\044\003\000\002\044\003\000" +
    "\002\036\005\000\002\036\003\000\002\045\003\000\002" +
    "\045\003\000\002\045\003\000\002\037\005\000\002\037" +
    "\005\000\002\037\005\000\002\037\005\000\002\037\003" +
    "\000\002\043\005\000\002\043\004\000\002\043\003\000" +
    "\002\043\003\000\002\043\003\000\002\043\003\000\002" +
    "\012\003\000\002\012\003\000\002\012\003\000\002\013" +
    "\003\000\002\013\003\000\002\013\003\000\002\040\003" +
    "\000\002\040\003\000\002\040\003\000\002\040\003\000" +
    "\002\040\003\000\002\040\004\000\002\040\004\000\002" +
    "\040\005\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\004" +
    "\000\002\020\004\000\002\020\005\000\002\061\002\000" +
    "\002\042\006\000\002\042\004\000\002\042\005\000\002" +
    "\042\004\000\002\042\004\000\002\042\003\000\002\004" +
    "\011\000\002\006\011\000\002\006\010\000\002\006\010" +
    "\000\002\006\007\000\002\006\011\000\002\006\010\000" +
    "\002\017\003\000\002\007\015\000\002\007\014\000\002" +
    "\007\014\000\002\007\013\000\002\007\014\000\002\007" +
    "\013\000\002\007\013\000\002\007\012\000\002\062\002" +
    "\000\002\014\012\000\002\063\002\000\002\014\011\000" +
    "\002\014\010\000\002\014\007\000\002\014\011\000\002" +
    "\014\010\000\002\015\013\000\002\015\012\000\002\015" +
    "\013\000\002\015\012\000\002\015\010\000\002\015\007" +
    "\000\002\016\011\000\002\016\010\000\002\016\010\000" +
    "\002\016\007\000\002\016\011\000\002\016\010\000\002" +
    "\021\007" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u026b\000\004\042\004\001\002\000\006\003\007\043" +
    "\010\001\002\000\004\002\006\001\002\000\004\002\001" +
    "\001\002\000\004\040\016\001\002\000\006\037\011\050" +
    "\012\001\002\000\004\037\u026a\001\002\000\004\037\013" +
    "\001\002\000\004\037\014\001\002\000\004\032\015\001" +
    "\002\000\004\040\016\001\002\000\006\003\020\033\021" +
    "\001\002\000\004\002\uffff\001\002\000\004\025\u023a\001" +
    "\002\000\004\025\022\001\002\000\014\006\026\026\032" +
    "\041\030\044\031\045\023\001\002\000\006\003\u0100\033" +
    "\u0101\001\002\000\006\026\373\045\023\001\002\000\012" +
    "\006\026\026\344\044\031\045\023\001\002\000\012\003" +
    "\240\027\241\033\112\061\237\001\002\000\010\026\224" +
    "\044\031\045\023\001\002\000\006\003\104\033\105\001" +
    "\002\000\006\003\037\033\040\001\002\000\006\002\uffed" +
    "\040\016\001\002\000\004\026\034\001\002\000\006\002" +
    "\uffde\040\016\001\002\000\004\002\uffee\001\002\000\004" +
    "\002\ufffd\001\002\000\012\006\026\025\065\026\064\044" +
    "\031\001\002\000\006\003\042\025\041\001\002\000\010" +
    "\003\054\006\026\026\053\001\002\000\010\006\026\026" +
    "\043\044\031\001\002\000\010\026\uff69\044\031\045\uff69" +
    "\001\002\000\006\026\uff5f\045\uff5f\001\002\000\006\003" +
    "\047\026\046\001\002\000\010\026\uff6a\044\031\045\uff6a" +
    "\001\002\000\010\026\uff5e\044\031\045\uff5e\001\002\000" +
    "\006\026\uff60\045\uff60\001\002\000\006\026\uff6c\045\uff6c" +
    "\001\002\000\006\026\uff6b\045\uff6b\001\002\000\010\026" +
    "\uff71\044\031\045\uff71\001\002\000\010\026\uff65\044\031" +
    "\045\uff65\001\002\000\006\003\057\026\056\001\002\000" +
    "\010\026\uff72\044\031\045\uff72\001\002\000\010\026\uff66" +
    "\044\031\045\uff66\001\002\000\006\026\uff68\045\uff68\001" +
    "\002\000\006\026\uff74\045\uff74\001\002\000\006\026\uff67" +
    "\045\uff67\001\002\000\006\026\uff73\045\uff73\001\002\000" +
    "\010\026\uff61\044\031\045\uff61\001\002\000\010\003\073" +
    "\006\026\026\072\001\002\000\006\026\uff59\045\uff59\001" +
    "\002\000\004\026\070\001\002\000\010\026\uff62\044\031" +
    "\045\uff62\001\002\000\006\026\uff64\045\uff64\001\002\000" +
    "\010\026\uff6d\044\031\045\uff6d\001\002\000\010\026\uff5a" +
    "\044\031\045\uff5a\001\002\000\006\003\076\026\075\001" +
    "\002\000\010\026\uff6e\044\031\045\uff6e\001\002\000\010" +
    "\026\uff5b\044\031\045\uff5b\001\002\000\006\026\uff5d\045" +
    "\uff5d\001\002\000\006\026\uff70\045\uff70\001\002\000\006" +
    "\026\uff5c\045\uff5c\001\002\000\006\026\uff6f\045\uff6f\001" +
    "\002\000\006\026\uff63\045\uff63\001\002\000\004\025\216" +
    "\001\002\000\006\003\107\025\106\001\002\000\006\026" +
    "\211\033\112\001\002\000\006\026\110\033\112\001\002" +
    "\000\014\006\uffb2\026\uffb2\041\030\044\uffb2\045\uffb2\001" +
    "\002\000\004\026\206\001\002\000\014\003\uffaf\016\115" +
    "\026\uffaf\032\uffaf\047\114\001\002\000\012\003\uffac\026" +
    "\uffac\032\uffac\047\203\001\002\000\004\033\uffb1\001\002" +
    "\000\024\022\uff76\023\uff76\033\uff76\034\uff76\035\uff76\036" +
    "\uff76\037\uff76\052\uff76\055\uff76\001\002\000\024\022\124" +
    "\023\125\033\130\034\137\035\122\036\123\037\135\052" +
    "\120\055\132\001\002\000\026\003\ufecd\015\ufecd\017\ufecd" +
    "\024\ufecd\026\ufecd\032\ufecd\034\ufecd\035\ufecd\047\ufecd\060" +
    "\ufecd\001\002\000\036\003\ufee5\015\ufee5\016\ufee5\017\ufee5" +
    "\021\ufee5\023\175\024\ufee5\026\ufee5\032\ufee5\034\ufee5\035" +
    "\ufee5\047\ufee5\051\ufee5\060\ufee5\001\002\000\026\003\ufecc" +
    "\015\ufecc\017\ufecc\024\ufecc\026\ufecc\032\ufecc\034\ufecc\035" +
    "\ufecc\047\ufecc\060\ufecc\001\002\000\024\022\ufec6\023\ufec6" +
    "\033\ufec6\034\ufec6\035\ufec6\036\ufec6\037\ufec6\052\ufec6\055" +
    "\ufec6\001\002\000\024\022\ufec5\023\ufec5\033\ufec5\034\ufec5" +
    "\035\ufec5\036\ufec5\037\ufec5\052\ufec5\055\ufec5\001\002\000" +
    "\026\003\ufed6\015\ufed6\017\ufed6\024\ufed6\026\ufed6\032\ufed6" +
    "\034\ufed6\035\ufed6\047\ufed6\060\ufed6\001\002\000\024\022" +
    "\124\023\125\033\130\034\137\035\122\036\123\037\135" +
    "\052\120\055\132\001\002\000\024\022\124\023\125\033" +
    "\130\034\137\035\122\036\123\037\135\052\120\055\132" +
    "\001\002\000\034\003\ufee0\015\ufee0\016\ufee0\017\ufee0\021" +
    "\ufee0\024\ufee0\026\ufee0\032\ufee0\034\ufee0\035\ufee0\047\ufee0" +
    "\051\164\060\ufee0\001\002\000\036\003\ufee2\015\ufee2\016" +
    "\ufee2\017\ufee2\021\ufee2\023\155\024\ufee2\026\ufee2\032\ufee2" +
    "\034\ufee2\035\ufee2\047\ufee2\051\ufee2\060\ufee2\001\002\000" +
    "\026\003\ufece\015\ufece\017\ufece\024\ufece\026\ufece\032\ufece" +
    "\034\ufece\035\ufece\047\ufece\060\ufece\001\002\000\026\003" +
    "\ufed7\015\ufed7\017\ufed7\024\ufed7\026\ufed7\032\ufed7\034\ufed7" +
    "\035\ufed7\047\ufed7\060\ufed7\001\002\000\032\003\ufecb\015" +
    "\ufecb\016\153\017\ufecb\021\152\024\ufecb\026\ufecb\032\ufecb" +
    "\034\ufecb\035\ufecb\047\ufecb\060\ufecb\001\002\000\026\003" +
    "\ufed1\015\ufed1\017\ufed1\024\ufed1\026\ufed1\032\ufed1\034\ufed1" +
    "\035\ufed1\047\ufed1\060\ufed1\001\002\000\026\003\ufed8\015" +
    "\ufed8\017\ufed8\024\ufed8\026\ufed8\032\ufed8\034\ufed8\035\ufed8" +
    "\047\ufed8\060\ufed8\001\002\000\022\003\uff75\017\143\026" +
    "\uff75\032\uff75\034\141\035\142\047\uff75\060\144\001\002" +
    "\000\024\022\ufec7\023\ufec7\033\ufec7\034\ufec7\035\ufec7\036" +
    "\ufec7\037\ufec7\052\ufec7\055\ufec7\001\002\000\026\003\147" +
    "\022\124\023\125\033\130\034\137\035\122\036\123\037" +
    "\135\052\120\055\132\001\002\000\026\003\ufec9\022\ufec9" +
    "\023\ufec9\033\ufec9\034\ufec9\035\ufec9\036\ufec9\037\ufec9\052" +
    "\ufec9\055\ufec9\001\002\000\026\003\ufec8\022\ufec8\023\ufec8" +
    "\033\ufec8\034\ufec8\035\ufec8\036\ufec8\037\ufec8\052\ufec8\055" +
    "\ufec8\001\002\000\026\003\145\022\124\023\125\033\130" +
    "\034\137\035\122\036\123\037\135\052\120\055\132\001" +
    "\002\000\026\003\ufeca\022\ufeca\023\ufeca\033\ufeca\034\ufeca" +
    "\035\ufeca\036\ufeca\037\ufeca\052\ufeca\055\ufeca\001\002\000" +
    "\026\003\ufed2\015\ufed2\017\ufed2\024\ufed2\026\ufed2\032\ufed2" +
    "\034\ufed2\035\ufed2\047\ufed2\060\ufed2\001\002\000\026\003" +
    "\ufed4\015\ufed4\017\ufed4\024\ufed4\026\ufed4\032\ufed4\034\ufed4" +
    "\035\ufed4\047\ufed4\060\ufed4\001\002\000\026\003\ufed3\015" +
    "\ufed3\017\ufed3\024\ufed3\026\ufed3\032\ufed3\034\ufed3\035\ufed3" +
    "\047\ufed3\060\ufed3\001\002\000\026\003\ufed5\015\ufed5\017" +
    "\ufed5\024\ufed5\026\ufed5\032\ufed5\034\ufed5\035\ufed5\047\ufed5" +
    "\060\ufed5\001\002\000\024\022\124\023\125\033\130\034" +
    "\137\035\122\036\123\037\135\052\120\055\132\001\002" +
    "\000\024\022\ufedc\023\ufedc\033\ufedc\034\ufedc\035\ufedc\036" +
    "\ufedc\037\ufedc\052\ufedc\055\ufedc\001\002\000\024\022\ufedb" +
    "\023\ufedb\033\ufedb\034\ufedb\035\ufedb\036\ufedb\037\ufedb\052" +
    "\ufedb\055\ufedb\001\002\000\026\003\ufedf\015\ufedf\017\ufedf" +
    "\024\ufedf\026\ufedf\032\ufedf\034\ufedf\035\ufedf\047\ufedf\060" +
    "\ufedf\001\002\000\026\022\124\023\125\024\156\033\130" +
    "\034\137\035\122\036\123\037\135\052\120\055\132\001" +
    "\002\000\034\003\ufee4\015\ufee4\016\ufee4\017\ufee4\021\ufee4" +
    "\024\ufee4\026\ufee4\032\ufee4\034\ufee4\035\ufee4\047\ufee4\051" +
    "\ufee4\060\ufee4\001\002\000\004\024\163\001\002\000\016" +
    "\017\143\024\ufed9\034\141\035\142\047\161\060\144\001" +
    "\002\000\024\022\124\023\125\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\055\132\001\002\000\004\024" +
    "\ufeda\001\002\000\034\003\ufee3\015\ufee3\016\ufee3\017\ufee3" +
    "\021\ufee3\024\ufee3\026\ufee3\032\ufee3\034\ufee3\035\ufee3\047" +
    "\ufee3\051\ufee3\060\ufee3\001\002\000\006\033\130\052\120" +
    "\001\002\000\032\003\ufee1\015\ufee1\016\ufee1\017\ufee1\021" +
    "\ufee1\024\ufee1\026\ufee1\032\ufee1\034\ufee1\035\ufee1\047\ufee1" +
    "\060\ufee1\001\002\000\026\003\ufecf\015\ufecf\017\ufecf\024" +
    "\ufecf\026\ufecf\032\ufecf\034\ufecf\035\ufecf\047\ufecf\060\ufecf" +
    "\001\002\000\014\017\143\024\170\034\141\035\142\060" +
    "\144\001\002\000\030\003\ufed0\015\ufed0\017\ufed0\024\ufed0" +
    "\026\ufed0\032\ufed0\034\ufed0\035\ufed0\047\ufed0\060\ufed0\062" +
    "\171\001\002\000\024\022\124\023\125\033\130\034\137" +
    "\035\122\036\123\037\135\052\120\055\132\001\002\000" +
    "\014\015\173\017\143\034\141\035\142\060\144\001\002" +
    "\000\024\022\124\023\125\033\130\034\137\035\122\036" +
    "\123\037\135\052\120\055\132\001\002\000\026\003\ufead" +
    "\015\ufead\017\ufead\024\ufead\026\ufead\032\ufead\034\ufead\035" +
    "\ufead\047\ufead\060\ufead\001\002\000\026\022\124\023\125" +
    "\024\176\033\130\034\137\035\122\036\123\037\135\052" +
    "\120\055\132\001\002\000\034\003\ufee7\015\ufee7\016\ufee7" +
    "\017\ufee7\021\ufee7\024\ufee7\026\ufee7\032\ufee7\034\ufee7\035" +
    "\ufee7\047\ufee7\051\ufee7\060\ufee7\001\002\000\004\024\200" +
    "\001\002\000\034\003\ufee6\015\ufee6\016\ufee6\017\ufee6\021" +
    "\ufee6\024\ufee6\026\ufee6\032\ufee6\034\ufee6\035\ufee6\047\ufee6" +
    "\051\ufee6\060\ufee6\001\002\000\004\033\112\001\002\000" +
    "\010\003\uffb0\026\uffb0\032\uffb0\001\002\000\004\033\uffae" +
    "\001\002\000\004\033\112\001\002\000\010\003\uffad\026" +
    "\uffad\032\uffad\001\002\000\014\006\uffb3\026\uffb3\041\030" +
    "\044\uffb3\045\uffb3\001\002\000\012\006\uffb7\026\uffb7\044" +
    "\uffb7\045\uffb7\001\002\000\012\006\uffb6\026\uffb6\044\uffb6" +
    "\045\uffb6\001\002\000\014\006\uffba\026\uffba\041\030\044" +
    "\uffba\045\uffba\001\002\000\004\026\213\001\002\000\014" +
    "\006\uffbb\026\uffbb\041\030\044\uffbb\045\uffbb\001\002\000" +
    "\012\006\uffbd\026\uffbd\044\uffbd\045\uffbd\001\002\000\012" +
    "\006\uffbc\026\uffbc\044\uffbc\045\uffbc\001\002\000\006\026" +
    "\217\033\112\001\002\000\014\006\uffb4\026\uffb4\041\030" +
    "\044\uffb4\045\uffb4\001\002\000\004\026\221\001\002\000" +
    "\014\006\uffb5\026\uffb5\041\030\044\uffb5\045\uffb5\001\002" +
    "\000\012\006\uffb9\026\uffb9\044\uffb9\045\uffb9\001\002\000" +
    "\012\006\uffb8\026\uffb8\044\uffb8\045\uffb8\001\002\000\006" +
    "\002\uffe4\040\016\001\002\000\006\026\231\045\023\001" +
    "\002\000\004\026\227\001\002\000\006\002\uffe2\040\016" +
    "\001\002\000\004\002\ufff2\001\002\000\006\002\uffe3\040" +
    "\016\001\002\000\004\026\233\001\002\000\006\002\uffe1" +
    "\040\016\001\002\000\004\002\ufff1\001\002\000\004\002" +
    "\ufff3\001\002\000\004\002\ufff4\001\002\000\006\003\332" +
    "\033\112\001\002\000\060\003\uff80\006\026\010\uff80\012" +
    "\uff80\013\uff80\014\uff80\022\uff80\023\uff80\026\uff80\030\310" +
    "\032\307\033\uff80\034\uff80\035\uff80\036\uff80\037\uff80\044" +
    "\uff80\045\uff80\052\uff80\053\uff80\054\uff80\055\uff80\056\uff80" +
    "\001\002\000\006\003\251\030\250\001\002\000\006\003" +
    "\244\032\243\001\002\000\054\003\uffa4\006\uffa9\010\uffa4" +
    "\012\uffa4\013\uffa4\014\uffa4\022\uffa4\023\uffa4\026\uffa4\033" +
    "\uffa4\034\uffa4\035\uffa4\036\uffa4\037\uffa4\044\uffa4\045\uffa4" +
    "\052\uffa4\053\uffa4\054\uffa4\055\uffa4\056\uffa4\001\002\000" +
    "\054\003\uff88\006\026\010\uff88\012\uff88\013\uff88\014\uff88" +
    "\022\uff88\023\uff88\026\uff88\033\uff88\034\uff88\035\uff88\036" +
    "\uff88\037\uff88\044\uff88\045\uff88\052\uff88\053\uff88\054\uff88" +
    "\055\uff88\056\uff88\001\002\000\052\003\uff8c\010\uff8c\012" +
    "\uff8c\013\uff8c\014\uff8c\022\uff8c\023\uff8c\026\uff8c\033\uff8c" +
    "\034\uff8c\035\uff8c\036\uff8c\037\uff8c\044\uff8c\045\uff8c\052" +
    "\uff8c\053\uff8c\054\uff8c\055\uff8c\056\uff8c\001\002\000\004" +
    "\006\026\001\002\000\052\003\uffa8\010\uffa8\012\uffa8\013" +
    "\uffa8\014\uffa8\022\uffa8\023\uffa8\026\uffa8\033\uffa8\034\uffa8" +
    "\035\uffa8\036\uffa8\037\uffa8\044\uffa8\045\uffa8\052\uffa8\053" +
    "\uffa8\054\uffa8\055\uffa8\056\uffa8\001\002\000\010\003\265" +
    "\033\112\061\264\001\002\000\010\006\026\033\112\061" +
    "\252\001\002\000\006\003\257\033\112\001\002\000\004" +
    "\032\255\001\002\000\052\003\uff7b\010\uff7b\012\uff7b\013" +
    "\uff7b\014\uff7b\022\uff7b\023\uff7b\026\uff7b\033\uff7b\034\uff7b" +
    "\035\uff7b\036\uff7b\037\uff7b\044\uff7b\045\uff7b\052\uff7b\053" +
    "\uff7b\054\uff7b\055\uff7b\056\uff7b\001\002\000\054\003\uff92" +
    "\006\026\010\uff92\012\uff92\013\uff92\014\uff92\022\uff92\023" +
    "\uff92\026\uff92\033\uff92\034\uff92\035\uff92\036\uff92\037\uff92" +
    "\044\uff92\045\uff92\052\uff92\053\uff92\054\uff92\055\uff92\056" +
    "\uff92\001\002\000\052\003\uff94\010\uff94\012\uff94\013\uff94" +
    "\014\uff94\022\uff94\023\uff94\026\uff94\033\uff94\034\uff94\035" +
    "\uff94\036\uff94\037\uff94\044\uff94\045\uff94\052\uff94\053\uff94" +
    "\054\uff94\055\uff94\056\uff94\001\002\000\054\003\uff78\006" +
    "\026\010\uff78\012\uff78\013\uff78\014\uff78\022\uff78\023\uff78" +
    "\026\uff78\033\uff78\034\uff78\035\uff78\036\uff78\037\uff78\044" +
    "\uff78\045\uff78\052\uff78\053\uff78\054\uff78\055\uff78\056\uff78" +
    "\001\002\000\004\032\261\001\002\000\054\003\uff93\006" +
    "\026\010\uff93\012\uff93\013\uff93\014\uff93\022\uff93\023\uff93" +
    "\026\uff93\033\uff93\034\uff93\035\uff93\036\uff93\037\uff93\044" +
    "\uff93\045\uff93\052\uff93\053\uff93\054\uff93\055\uff93\056\uff93" +
    "\001\002\000\052\003\uff95\010\uff95\012\uff95\013\uff95\014" +
    "\uff95\022\uff95\023\uff95\026\uff95\033\uff95\034\uff95\035\uff95" +
    "\036\uff95\037\uff95\044\uff95\045\uff95\052\uff95\053\uff95\054" +
    "\uff95\055\uff95\056\uff95\001\002\000\052\003\uff7c\010\uff7c" +
    "\012\uff7c\013\uff7c\014\uff7c\022\uff7c\023\uff7c\026\uff7c\033" +
    "\uff7c\034\uff7c\035\uff7c\036\uff7c\037\uff7c\044\uff7c\045\uff7c" +
    "\052\uff7c\053\uff7c\054\uff7c\055\uff7c\056\uff7c\001\002\000" +
    "\006\003\276\033\112\001\002\000\056\003\uff7e\006\026" +
    "\010\uff7e\012\uff7e\013\uff7e\014\uff7e\022\uff7e\023\uff7e\026" +
    "\uff7e\032\273\033\uff7e\034\uff7e\035\uff7e\036\uff7e\037\uff7e" +
    "\044\uff7e\045\uff7e\052\uff7e\053\uff7e\054\uff7e\055\uff7e\056" +
    "\uff7e\001\002\000\006\003\267\032\270\001\002\000\054" +
    "\003\uff86\006\026\010\uff86\012\uff86\013\uff86\014\uff86\022" +
    "\uff86\023\uff86\026\uff86\033\uff86\034\uff86\035\uff86\036\uff86" +
    "\037\uff86\044\uff86\045\uff86\052\uff86\053\uff86\054\uff86\055" +
    "\uff86\056\uff86\001\002\000\054\003\uffa2\006\026\010\uffa2" +
    "\012\uffa2\013\uffa2\014\uffa2\022\uffa2\023\uffa2\026\uffa2\033" +
    "\uffa2\034\uffa2\035\uffa2\036\uffa2\037\uffa2\044\uffa2\045\uffa2" +
    "\052\uffa2\053\uffa2\054\uffa2\055\uffa2\056\uffa2\001\002\000" +
    "\052\003\uffa6\010\uffa6\012\uffa6\013\uffa6\014\uffa6\022\uffa6" +
    "\023\uffa6\026\uffa6\033\uffa6\034\uffa6\035\uffa6\036\uffa6\037" +
    "\uffa6\044\uffa6\045\uffa6\052\uffa6\053\uffa6\054\uffa6\055\uffa6" +
    "\056\uffa6\001\002\000\052\003\uff8a\010\uff8a\012\uff8a\013" +
    "\uff8a\014\uff8a\022\uff8a\023\uff8a\026\uff8a\033\uff8a\034\uff8a" +
    "\035\uff8a\036\uff8a\037\uff8a\044\uff8a\045\uff8a\052\uff8a\053" +
    "\uff8a\054\uff8a\055\uff8a\056\uff8a\001\002\000\054\003\uff9a" +
    "\006\026\010\uff9a\012\uff9a\013\uff9a\014\uff9a\022\uff9a\023" +
    "\uff9a\026\uff9a\033\uff9a\034\uff9a\035\uff9a\036\uff9a\037\uff9a" +
    "\044\uff9a\045\uff9a\052\uff9a\053\uff9a\054\uff9a\055\uff9a\056" +
    "\uff9a\001\002\000\052\003\uff82\010\uff82\012\uff82\013\uff82" +
    "\014\uff82\022\uff82\023\uff82\026\uff82\033\uff82\034\uff82\035" +
    "\uff82\036\uff82\037\uff82\044\uff82\045\uff82\052\uff82\053\uff82" +
    "\054\uff82\055\uff82\056\uff82\001\002\000\052\003\uff9e\010" +
    "\uff9e\012\uff9e\013\uff9e\014\uff9e\022\uff9e\023\uff9e\026\uff9e" +
    "\033\uff9e\034\uff9e\035\uff9e\036\uff9e\037\uff9e\044\uff9e\045" +
    "\uff9e\052\uff9e\053\uff9e\054\uff9e\055\uff9e\056\uff9e\001\002" +
    "\000\056\003\uff7f\006\026\010\uff7f\012\uff7f\013\uff7f\014" +
    "\uff7f\022\uff7f\023\uff7f\026\uff7f\032\304\033\uff7f\034\uff7f" +
    "\035\uff7f\036\uff7f\037\uff7f\044\uff7f\045\uff7f\052\uff7f\053" +
    "\uff7f\054\uff7f\055\uff7f\056\uff7f\001\002\000\006\003\301" +
    "\032\300\001\002\000\054\003\uffa3\006\026\010\uffa3\012" +
    "\uffa3\013\uffa3\014\uffa3\022\uffa3\023\uffa3\026\uffa3\033\uffa3" +
    "\034\uffa3\035\uffa3\036\uffa3\037\uffa3\044\uffa3\045\uffa3\052" +
    "\uffa3\053\uffa3\054\uffa3\055\uffa3\056\uffa3\001\002\000\054" +
    "\003\uff87\006\026\010\uff87\012\uff87\013\uff87\014\uff87\022" +
    "\uff87\023\uff87\026\uff87\033\uff87\034\uff87\035\uff87\036\uff87" +
    "\037\uff87\044\uff87\045\uff87\052\uff87\053\uff87\054\uff87\055" +
    "\uff87\056\uff87\001\002\000\052\003\uff8b\010\uff8b\012\uff8b" +
    "\013\uff8b\014\uff8b\022\uff8b\023\uff8b\026\uff8b\033\uff8b\034" +
    "\uff8b\035\uff8b\036\uff8b\037\uff8b\044\uff8b\045\uff8b\052\uff8b" +
    "\053\uff8b\054\uff8b\055\uff8b\056\uff8b\001\002\000\052\003" +
    "\uffa7\010\uffa7\012\uffa7\013\uffa7\014\uffa7\022\uffa7\023\uffa7" +
    "\026\uffa7\033\uffa7\034\uffa7\035\uffa7\036\uffa7\037\uffa7\044" +
    "\uffa7\045\uffa7\052\uffa7\053\uffa7\054\uffa7\055\uffa7\056\uffa7" +
    "\001\002\000\054\003\uff9b\006\026\010\uff9b\012\uff9b\013" +
    "\uff9b\014\uff9b\022\uff9b\023\uff9b\026\uff9b\033\uff9b\034\uff9b" +
    "\035\uff9b\036\uff9b\037\uff9b\044\uff9b\045\uff9b\052\uff9b\053" +
    "\uff9b\054\uff9b\055\uff9b\056\uff9b\001\002\000\052\003\uff83" +
    "\010\uff83\012\uff83\013\uff83\014\uff83\022\uff83\023\uff83\026" +
    "\uff83\033\uff83\034\uff83\035\uff83\036\uff83\037\uff83\044\uff83" +
    "\045\uff83\052\uff83\053\uff83\054\uff83\055\uff83\056\uff83\001" +
    "\002\000\052\003\uff9f\010\uff9f\012\uff9f\013\uff9f\014\uff9f" +
    "\022\uff9f\023\uff9f\026\uff9f\033\uff9f\034\uff9f\035\uff9f\036" +
    "\uff9f\037\uff9f\044\uff9f\045\uff9f\052\uff9f\053\uff9f\054\uff9f" +
    "\055\uff9f\056\uff9f\001\002\000\054\003\uff9c\006\026\010" +
    "\uff9c\012\uff9c\013\uff9c\014\uff9c\022\uff9c\023\uff9c\026\uff9c" +
    "\033\uff9c\034\uff9c\035\uff9c\036\uff9c\037\uff9c\044\uff9c\045" +
    "\uff9c\052\uff9c\053\uff9c\054\uff9c\055\uff9c\056\uff9c\001\002" +
    "\000\010\003\313\033\112\061\312\001\002\000\052\003" +
    "\uff84\010\uff84\012\uff84\013\uff84\014\uff84\022\uff84\023\uff84" +
    "\026\uff84\033\uff84\034\uff84\035\uff84\036\uff84\037\uff84\044" +
    "\uff84\045\uff84\052\uff84\053\uff84\054\uff84\055\uff84\056\uff84" +
    "\001\002\000\006\003\322\033\112\001\002\000\056\003" +
    "\uff77\006\026\010\uff77\012\uff77\013\uff77\014\uff77\022\uff77" +
    "\023\uff77\026\uff77\032\317\033\uff77\034\uff77\035\uff77\036" +
    "\uff77\037\uff77\044\uff77\045\uff77\052\uff77\053\uff77\054\uff77" +
    "\055\uff77\056\uff77\001\002\000\004\032\315\001\002\000" +
    "\054\003\uff96\006\026\010\uff96\012\uff96\013\uff96\014\uff96" +
    "\022\uff96\023\uff96\026\uff96\033\uff96\034\uff96\035\uff96\036" +
    "\uff96\037\uff96\044\uff96\045\uff96\052\uff96\053\uff96\054\uff96" +
    "\055\uff96\056\uff96\001\002\000\052\003\uff98\010\uff98\012" +
    "\uff98\013\uff98\014\uff98\022\uff98\023\uff98\026\uff98\033\uff98" +
    "\034\uff98\035\uff98\036\uff98\037\uff98\044\uff98\045\uff98\052" +
    "\uff98\053\uff98\054\uff98\055\uff98\056\uff98\001\002\000\054" +
    "\003\uff8e\006\026\010\uff8e\012\uff8e\013\uff8e\014\uff8e\022" +
    "\uff8e\023\uff8e\026\uff8e\033\uff8e\034\uff8e\035\uff8e\036\uff8e" +
    "\037\uff8e\044\uff8e\045\uff8e\052\uff8e\053\uff8e\054\uff8e\055" +
    "\uff8e\056\uff8e\001\002\000\052\003\uff7a\010\uff7a\012\uff7a" +
    "\013\uff7a\014\uff7a\022\uff7a\023\uff7a\026\uff7a\033\uff7a\034" +
    "\uff7a\035\uff7a\036\uff7a\037\uff7a\044\uff7a\045\uff7a\052\uff7a" +
    "\053\uff7a\054\uff7a\055\uff7a\056\uff7a\001\002\000\052\003" +
    "\uff90\010\uff90\012\uff90\013\uff90\014\uff90\022\uff90\023\uff90" +
    "\026\uff90\033\uff90\034\uff90\035\uff90\036\uff90\037\uff90\044" +
    "\uff90\045\uff90\052\uff90\053\uff90\054\uff90\055\uff90\056\uff90" +
    "\001\002\000\056\003\uff79\006\026\010\uff79\012\uff79\013" +
    "\uff79\014\uff79\022\uff79\023\uff79\026\uff79\032\326\033\uff79" +
    "\034\uff79\035\uff79\036\uff79\037\uff79\044\uff79\045\uff79\052" +
    "\uff79\053\uff79\054\uff79\055\uff79\056\uff79\001\002\000\004" +
    "\032\324\001\002\000\054\003\uff97\006\026\010\uff97\012" +
    "\uff97\013\uff97\014\uff97\022\uff97\023\uff97\026\uff97\033\uff97" +
    "\034\uff97\035\uff97\036\uff97\037\uff97\044\uff97\045\uff97\052" +
    "\uff97\053\uff97\054\uff97\055\uff97\056\uff97\001\002\000\052" +
    "\003\uff99\010\uff99\012\uff99\013\uff99\014\uff99\022\uff99\023" +
    "\uff99\026\uff99\033\uff99\034\uff99\035\uff99\036\uff99\037\uff99" +
    "\044\uff99\045\uff99\052\uff99\053\uff99\054\uff99\055\uff99\056" +
    "\uff99\001\002\000\054\003\uff8f\006\026\010\uff8f\012\uff8f" +
    "\013\uff8f\014\uff8f\022\uff8f\023\uff8f\026\uff8f\033\uff8f\034" +
    "\uff8f\035\uff8f\036\uff8f\037\uff8f\044\uff8f\045\uff8f\052\uff8f" +
    "\053\uff8f\054\uff8f\055\uff8f\056\uff8f\001\002\000\052\003" +
    "\uff7d\010\uff7d\012\uff7d\013\uff7d\014\uff7d\022\uff7d\023\uff7d" +
    "\026\uff7d\033\uff7d\034\uff7d\035\uff7d\036\uff7d\037\uff7d\044" +
    "\uff7d\045\uff7d\052\uff7d\053\uff7d\054\uff7d\055\uff7d\056\uff7d" +
    "\001\002\000\052\003\uff91\010\uff91\012\uff91\013\uff91\014" +
    "\uff91\022\uff91\023\uff91\026\uff91\033\uff91\034\uff91\035\uff91" +
    "\036\uff91\037\uff91\044\uff91\045\uff91\052\uff91\053\uff91\054" +
    "\uff91\055\uff91\056\uff91\001\002\000\052\003\uffa0\010\uffa0" +
    "\012\uffa0\013\uffa0\014\uffa0\022\uffa0\023\uffa0\026\uffa0\033" +
    "\uffa0\034\uffa0\035\uffa0\036\uffa0\037\uffa0\044\uffa0\045\uffa0" +
    "\052\uffa0\053\uffa0\054\uffa0\055\uffa0\056\uffa0\001\002\000" +
    "\056\003\uff81\006\026\010\uff81\012\uff81\013\uff81\014\uff81" +
    "\022\uff81\023\uff81\026\uff81\032\341\033\uff81\034\uff81\035" +
    "\uff81\036\uff81\037\uff81\044\uff81\045\uff81\052\uff81\053\uff81" +
    "\054\uff81\055\uff81\056\uff81\001\002\000\006\003\334\032" +
    "\335\001\002\000\054\003\uff89\006\026\010\uff89\012\uff89" +
    "\013\uff89\014\uff89\022\uff89\023\uff89\026\uff89\033\uff89\034" +
    "\uff89\035\uff89\036\uff89\037\uff89\044\uff89\045\uff89\052\uff89" +
    "\053\uff89\054\uff89\055\uff89\056\uff89\001\002\000\054\003" +
    "\uffa5\006\uffab\010\uffa5\012\uffa5\013\uffa5\014\uffa5\022\uffa5" +
    "\023\uffa5\026\uffa5\033\uffa5\034\uffa5\035\uffa5\036\uffa5\037" +
    "\uffa5\044\uffa5\045\uffa5\052\uffa5\053\uffa5\054\uffa5\055\uffa5" +
    "\056\uffa5\001\002\000\004\006\026\001\002\000\052\003" +
    "\uffaa\010\uffaa\012\uffaa\013\uffaa\014\uffaa\022\uffaa\023\uffaa" +
    "\026\uffaa\033\uffaa\034\uffaa\035\uffaa\036\uffaa\037\uffaa\044" +
    "\uffaa\045\uffaa\052\uffaa\053\uffaa\054\uffaa\055\uffaa\056\uffaa" +
    "\001\002\000\052\003\uff8d\010\uff8d\012\uff8d\013\uff8d\014" +
    "\uff8d\022\uff8d\023\uff8d\026\uff8d\033\uff8d\034\uff8d\035\uff8d" +
    "\036\uff8d\037\uff8d\044\uff8d\045\uff8d\052\uff8d\053\uff8d\054" +
    "\uff8d\055\uff8d\056\uff8d\001\002\000\054\003\uff9d\006\026" +
    "\010\uff9d\012\uff9d\013\uff9d\014\uff9d\022\uff9d\023\uff9d\026" +
    "\uff9d\033\uff9d\034\uff9d\035\uff9d\036\uff9d\037\uff9d\044\uff9d" +
    "\045\uff9d\052\uff9d\053\uff9d\054\uff9d\055\uff9d\056\uff9d\001" +
    "\002\000\052\003\uff85\010\uff85\012\uff85\013\uff85\014\uff85" +
    "\022\uff85\023\uff85\026\uff85\033\uff85\034\uff85\035\uff85\036" +
    "\uff85\037\uff85\044\uff85\045\uff85\052\uff85\053\uff85\054\uff85" +
    "\055\uff85\056\uff85\001\002\000\052\003\uffa1\010\uffa1\012" +
    "\uffa1\013\uffa1\014\uffa1\022\uffa1\023\uffa1\026\uffa1\033\uffa1" +
    "\034\uffa1\035\uffa1\036\uffa1\037\uffa1\044\uffa1\045\uffa1\052" +
    "\uffa1\053\uffa1\054\uffa1\055\uffa1\056\uffa1\001\002\000\006" +
    "\002\uffec\040\016\001\002\000\006\026\365\045\023\001" +
    "\002\000\004\026\363\001\002\000\010\026\350\044\031" +
    "\045\023\001\002\000\006\002\uffeb\040\016\001\002\000" +
    "\006\026\355\045\023\001\002\000\004\026\353\001\002" +
    "\000\006\002\uffe7\040\016\001\002\000\004\002\ufff7\001" +
    "\002\000\006\002\uffe8\040\016\001\002\000\004\026\357" +
    "\001\002\000\006\002\uffe5\040\016\001\002\000\004\002" +
    "\ufff5\001\002\000\004\002\ufff8\001\002\000\004\002\ufffb" +
    "\001\002\000\006\002\uffe9\040\016\001\002\000\004\002" +
    "\ufff9\001\002\000\006\002\uffea\040\016\001\002\000\004" +
    "\026\367\001\002\000\006\002\uffe6\040\016\001\002\000" +
    "\004\002\ufff6\001\002\000\004\002\ufffa\001\002\000\004" +
    "\002\ufffc\001\002\000\006\002\uffe0\040\016\001\002\000" +
    "\004\026\375\001\002\000\006\002\uffdf\040\016\001\002" +
    "\000\004\002\uffef\001\002\000\004\002\ufff0\001\002\000" +
    "\006\003\u0103\023\u0102\001\002\000\006\003\u0103\023\u0102" +
    "\001\002\000\010\003\u0210\006\u01d9\024\u0212\001\002\000" +
    "\016\003\u01db\006\u01d9\024\u01d7\046\u01dd\057\u01da\061\u01dc" +
    "\001\002\000\006\003\u0106\025\u0105\001\002\000\050\003" +
    "\u01ba\006\026\010\u0111\012\u0114\013\u0117\014\u0108\022\124" +
    "\023\125\026\u01b8\033\130\034\137\035\122\036\123\037" +
    "\135\052\120\053\u010b\054\u0107\055\132\056\u0112\001\002" +
    "\000\050\003\u0113\006\026\010\u0111\012\u0114\013\u0117\014" +
    "\u0108\022\124\023\125\026\u010d\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\053\u010b\054\u0107\055\132\056" +
    "\u0112\001\002\000\004\032\u01b6\001\002\000\006\003\u019a" +
    "\023\u0199\001\002\000\050\003\ufec2\006\ufec2\010\ufec2\012" +
    "\ufec2\013\ufec2\014\ufec2\022\ufec2\023\ufec2\026\ufec2\033\ufec2" +
    "\034\ufec2\035\ufec2\036\ufec2\037\ufec2\052\ufec2\053\ufec2\054" +
    "\ufec2\055\ufec2\056\ufec2\001\002\000\004\026\u0197\001\002" +
    "\000\004\032\u0196\001\002\000\050\003\ufec3\006\ufec3\010" +
    "\ufec3\012\ufec3\013\ufec3\014\ufec3\022\ufec3\023\ufec3\026\ufec3" +
    "\033\ufec3\034\ufec3\035\ufec3\036\ufec3\037\ufec3\052\ufec3\053" +
    "\ufec3\054\ufec3\055\ufec3\056\ufec3\001\002\000\006\026\uff1e" +
    "\045\023\001\002\000\050\003\ufec4\006\ufec4\010\ufec4\012" +
    "\ufec4\013\ufec4\014\ufec4\022\ufec4\023\ufec4\026\ufec4\033\ufec4" +
    "\034\ufec4\035\ufec4\036\ufec4\037\ufec4\052\ufec4\053\ufec4\054" +
    "\ufec4\055\ufec4\056\ufec4\001\002\000\046\003\u0113\010\u0111" +
    "\012\u0114\013\u0117\014\u0108\022\124\023\125\026\u0191\033" +
    "\130\034\137\035\122\036\123\037\135\052\120\053\u010b" +
    "\054\u0107\055\132\056\u0112\001\002\000\050\003\ufec1\006" +
    "\ufec1\010\ufec1\012\ufec1\013\ufec1\014\ufec1\022\ufec1\023\ufec1" +
    "\026\ufec1\033\ufec1\034\ufec1\035\ufec1\036\ufec1\037\ufec1\052" +
    "\ufec1\053\ufec1\054\ufec1\055\ufec1\056\ufec1\001\002\000\006" +
    "\003\u016c\023\u016b\001\002\000\024\022\124\023\125\033" +
    "\130\034\137\035\122\036\123\037\135\052\120\055\132" +
    "\001\002\000\046\003\u0113\010\u0111\012\u0114\013\u0117\014" +
    "\u0108\022\124\023\125\032\u0167\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\053\u010b\054\u0107\055\132\056" +
    "\u0112\001\002\000\006\003\u0147\025\u0146\001\002\000\050" +
    "\003\u0113\006\ufee8\010\u0111\012\u0114\013\u0117\014\u0108\022" +
    "\124\023\125\026\ufee8\033\130\034\137\035\122\036\123" +
    "\037\135\052\120\053\u010b\054\u0107\055\132\056\u0112\001" +
    "\002\000\050\003\ufec0\006\ufec0\010\ufec0\012\ufec0\013\ufec0" +
    "\014\ufec0\022\ufec0\023\ufec0\026\ufec0\033\ufec0\034\ufec0\035" +
    "\ufec0\036\ufec0\037\ufec0\052\ufec0\053\ufec0\054\ufec0\055\ufec0" +
    "\056\ufec0\001\002\000\006\003\u011d\023\u011c\001\002\000" +
    "\014\017\143\032\u0119\034\141\035\142\060\144\001\002" +
    "\000\050\003\ufeee\006\ufee9\010\ufeee\012\ufeee\013\ufeee\014" +
    "\ufeee\022\ufeee\023\ufeee\026\ufee9\033\ufeee\034\ufeee\035\ufeee" +
    "\036\ufeee\037\ufeee\052\ufeee\053\ufeee\054\ufeee\055\ufeee\056" +
    "\ufeee\001\002\000\044\003\u0113\010\u0111\012\u0114\013\u0117" +
    "\014\u0108\022\124\023\125\033\130\034\137\035\122\036" +
    "\123\037\135\052\120\053\u010b\054\u0107\055\132\056\u0112" +
    "\001\002\000\006\006\ufeed\026\ufeed\001\002\000\024\022" +
    "\124\023\125\033\130\034\137\035\122\036\123\037\135" +
    "\052\120\055\132\001\002\000\004\024\u011e\001\002\000" +
    "\004\025\u011f\001\002\000\046\003\u012a\010\u0111\012\u0114" +
    "\013\u0117\014\u0108\022\124\023\125\026\u0125\033\130\034" +
    "\137\035\122\036\123\037\135\052\120\053\u0123\054\u0120" +
    "\055\132\056\u0129\001\002\000\004\032\u0138\001\002\000" +
    "\046\003\ufeba\010\ufeba\012\ufeba\013\ufeba\014\ufeba\022\ufeba" +
    "\023\ufeba\026\ufeba\033\ufeba\034\ufeba\035\ufeba\036\ufeba\037" +
    "\ufeba\052\ufeba\053\ufeba\054\ufeba\055\ufeba\056\ufeba\001\002" +
    "\000\046\003\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022" +
    "\124\023\125\026\ufeae\033\130\034\137\035\122\036\123" +
    "\037\135\052\120\053\u0123\054\u0120\055\132\056\u0129\001" +
    "\002\000\004\032\u0136\001\002\000\046\003\ufebb\010\ufebb" +
    "\012\ufebb\013\ufebb\014\ufebb\022\ufebb\023\ufebb\026\ufebb\033" +
    "\ufebb\034\ufebb\035\ufebb\036\ufebb\037\ufebb\052\ufebb\053\ufebb" +
    "\054\ufebb\055\ufebb\056\ufebb\001\002\000\050\003\ufe98\006" +
    "\ufe98\010\ufe98\012\ufe98\013\ufe98\014\ufe98\022\ufe98\023\ufe98" +
    "\026\ufe98\033\ufe98\034\ufe98\035\ufe98\036\ufe98\037\ufe98\052" +
    "\ufe98\053\ufe98\054\ufe98\055\ufe98\056\ufe98\001\002\000\004" +
    "\026\u0135\001\002\000\046\003\ufebc\010\ufebc\012\ufebc\013" +
    "\ufebc\014\ufebc\022\ufebc\023\ufebc\026\ufebc\033\ufebc\034\ufebc" +
    "\035\ufebc\036\ufebc\037\ufebc\052\ufebc\053\ufebc\054\ufebc\055" +
    "\ufebc\056\ufebc\001\002\000\046\003\ufeb9\010\ufeb9\012\ufeb9" +
    "\013\ufeb9\014\ufeb9\022\ufeb9\023\ufeb9\026\ufeb9\033\ufeb9\034" +
    "\ufeb9\035\ufeb9\036\ufeb9\037\ufeb9\052\ufeb9\053\ufeb9\054\ufeb9" +
    "\055\ufeb9\056\ufeb9\001\002\000\024\022\124\023\125\033" +
    "\130\034\137\035\122\036\123\037\135\052\120\055\132" +
    "\001\002\000\046\003\u012a\010\u0111\012\u0114\013\u0117\014" +
    "\u0108\022\124\023\125\032\u0131\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\053\u0123\054\u0120\055\132\056" +
    "\u0129\001\002\000\046\003\ufeb8\010\ufeb8\012\ufeb8\013\ufeb8" +
    "\014\ufeb8\022\ufeb8\023\ufeb8\026\ufeb8\033\ufeb8\034\ufeb8\035" +
    "\ufeb8\036\ufeb8\037\ufeb8\052\ufeb8\053\ufeb8\054\ufeb8\055\ufeb8" +
    "\056\ufeb8\001\002\000\014\017\143\032\u012d\034\141\035" +
    "\142\060\144\001\002\000\046\003\ufeb4\010\ufeb4\012\ufeb4" +
    "\013\ufeb4\014\ufeb4\022\ufeb4\023\ufeb4\026\ufeaf\033\ufeb4\034" +
    "\ufeb4\035\ufeb4\036\ufeb4\037\ufeb4\052\ufeb4\053\ufeb4\054\ufeb4" +
    "\055\ufeb4\056\ufeb4\001\002\000\044\003\u012a\010\u0111\012" +
    "\u0114\013\u0117\014\u0108\022\124\023\125\033\130\034\137" +
    "\035\122\036\123\037\135\052\120\053\u0123\054\u0120\055" +
    "\132\056\u0129\001\002\000\004\026\ufeb3\001\002\000\004" +
    "\026\ufeb0\001\002\000\044\003\u012a\010\u0111\012\u0114\013" +
    "\u0117\014\u0108\022\124\023\125\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\053\u0123\054\u0120\055\132\056" +
    "\u0129\001\002\000\004\026\ufeb1\001\002\000\014\017\143" +
    "\032\u0134\034\141\035\142\060\144\001\002\000\046\003" +
    "\ufeb5\010\ufeb5\012\ufeb5\013\ufeb5\014\ufeb5\022\ufeb5\023\ufeb5" +
    "\026\ufeb5\033\ufeb5\034\ufeb5\035\ufeb5\036\ufeb5\037\ufeb5\052" +
    "\ufeb5\053\ufeb5\054\ufeb5\055\ufeb5\056\ufeb5\001\002\000\050" +
    "\003\ufe99\006\ufe99\010\ufe99\012\ufe99\013\ufe99\014\ufe99\022" +
    "\ufe99\023\ufe99\026\ufe99\033\ufe99\034\ufe99\035\ufe99\036\ufe99" +
    "\037\ufe99\052\ufe99\053\ufe99\054\ufe99\055\ufe99\056\ufe99\001" +
    "\002\000\046\003\ufeb7\010\ufeb7\012\ufeb7\013\ufeb7\014\ufeb7" +
    "\022\ufeb7\023\ufeb7\026\ufeb7\033\ufeb7\034\ufeb7\035\ufeb7\036" +
    "\ufeb7\037\ufeb7\052\ufeb7\053\ufeb7\054\ufeb7\055\ufeb7\056\ufeb7" +
    "\001\002\000\004\026\ufeb2\001\002\000\046\003\ufeb6\010" +
    "\ufeb6\012\ufeb6\013\ufeb6\014\ufeb6\022\ufeb6\023\ufeb6\026\ufeb6" +
    "\033\ufeb6\034\ufeb6\035\ufeb6\036\ufeb6\037\ufeb6\052\ufeb6\053" +
    "\ufeb6\054\ufeb6\055\ufeb6\056\ufeb6\001\002\000\014\017\143" +
    "\024\u013a\034\141\035\142\060\144\001\002\000\006\003" +
    "\u013c\025\u013b\001\002\000\046\003\ufe9d\010\ufe9d\012\ufe9d" +
    "\013\ufe9d\014\ufe9d\022\ufe9d\023\ufe9d\026\ufe9b\033\ufe9d\034" +
    "\ufe9d\035\ufe9d\036\ufe9d\037\ufe9d\052\ufe9d\053\ufe9d\054\ufe9d" +
    "\055\ufe9d\056\ufe9d\001\002\000\046\003\u012a\010\u0111\012" +
    "\u0114\013\u0117\014\u0108\022\124\023\125\026\u013d\033\130" +
    "\034\137\035\122\036\123\037\135\052\120\053\u0123\054" +
    "\u0120\055\132\056\u0129\001\002\000\050\003\ufe96\006\ufe96" +
    "\010\ufe96\012\ufe96\013\ufe96\014\ufe96\022\ufe96\023\ufe96\026" +
    "\ufe96\033\ufe96\034\ufe96\035\ufe96\036\ufe96\037\ufe96\052\ufe96" +
    "\053\ufe96\054\ufe96\055\ufe96\056\ufe96\001\002\000\004\026" +
    "\u013f\001\002\000\050\003\ufe97\006\ufe97\010\ufe97\012\ufe97" +
    "\013\ufe97\014\ufe97\022\ufe97\023\ufe97\026\ufe97\033\ufe97\034" +
    "\ufe97\035\ufe97\036\ufe97\037\ufe97\052\ufe97\053\ufe97\054\ufe97" +
    "\055\ufe97\056\ufe97\001\002\000\004\026\u0144\001\002\000" +
    "\044\003\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022\124" +
    "\023\125\033\130\034\137\035\122\036\123\037\135\052" +
    "\120\053\u0123\054\u0120\055\132\056\u0129\001\002\000\004" +
    "\026\u0143\001\002\000\050\003\ufe9c\006\ufe9c\010\ufe9c\012" +
    "\ufe9c\013\ufe9c\014\ufe9c\022\ufe9c\023\ufe9c\026\ufe9c\033\ufe9c" +
    "\034\ufe9c\035\ufe9c\036\ufe9c\037\ufe9c\052\ufe9c\053\ufe9c\054" +
    "\ufe9c\055\ufe9c\056\ufe9c\001\002\000\050\003\ufe9a\006\ufe9a" +
    "\010\ufe9a\012\ufe9a\013\ufe9a\014\ufe9a\022\ufe9a\023\ufe9a\026" +
    "\ufe9a\033\ufe9a\034\ufe9a\035\ufe9a\036\ufe9a\037\ufe9a\052\ufe9a" +
    "\053\ufe9a\054\ufe9a\055\ufe9a\056\ufe9a\001\002\000\006\006" +
    "\ufeec\026\ufeec\001\002\000\046\003\u012a\010\u0111\012\u0114" +
    "\013\u0117\014\u0108\022\124\023\125\026\u0156\033\130\034" +
    "\137\035\122\036\123\037\135\052\120\053\u0123\054\u0120" +
    "\055\132\056\u0129\001\002\000\046\003\u012a\010\u0111\012" +
    "\u0114\013\u0117\014\u0108\022\124\023\125\026\u0148\033\130" +
    "\034\137\035\122\036\123\037\135\052\120\053\u0123\054" +
    "\u0120\055\132\056\u0129\001\002\000\004\013\u0150\001\002" +
    "\000\004\026\u014a\001\002\000\004\013\u014b\001\002\000" +
    "\004\023\u014c\001\002\000\024\022\124\023\125\033\130" +
    "\034\137\035\122\036\123\037\135\052\120\055\132\001" +
    "\002\000\014\017\143\024\u014e\034\141\035\142\060\144" +
    "\001\002\000\004\032\u014f\001\002\000\050\003\ufe93\006" +
    "\ufe93\010\ufe93\012\ufe93\013\ufe93\014\ufe93\022\ufe93\023\ufe93" +
    "\026\ufe93\033\ufe93\034\ufe93\035\ufe93\036\ufe93\037\ufe93\052" +
    "\ufe93\053\ufe93\054\ufe93\055\ufe93\056\ufe93\001\002\000\004" +
    "\023\u0151\001\002\000\024\022\124\023\125\033\130\034" +
    "\137\035\122\036\123\037\135\052\120\055\132\001\002" +
    "\000\014\017\143\024\u0153\034\141\035\142\060\144\001" +
    "\002\000\004\032\u0154\001\002\000\050\003\ufe92\006\ufe92" +
    "\010\ufe92\012\ufe92\013\ufe92\014\ufe92\022\ufe92\023\ufe92\026" +
    "\ufe92\033\ufe92\034\ufe92\035\ufe92\036\ufe92\037\ufe92\052\ufe92" +
    "\053\ufe92\054\ufe92\055\ufe92\056\ufe92\001\002\000\004\026" +
    "\u015e\001\002\000\006\003\u0158\013\u0157\001\002\000\004" +
    "\023\u015a\001\002\000\004\032\u0159\001\002\000\050\003" +
    "\ufe90\006\ufe90\010\ufe90\012\ufe90\013\ufe90\014\ufe90\022\ufe90" +
    "\023\ufe90\026\ufe90\033\ufe90\034\ufe90\035\ufe90\036\ufe90\037" +
    "\ufe90\052\ufe90\053\ufe90\054\ufe90\055\ufe90\056\ufe90\001\002" +
    "\000\024\022\124\023\125\033\130\034\137\035\122\036" +
    "\123\037\135\052\120\055\132\001\002\000\014\017\143" +
    "\024\u015c\034\141\035\142\060\144\001\002\000\004\032" +
    "\u015d\001\002\000\050\003\ufe94\006\ufe94\010\ufe94\012\ufe94" +
    "\013\ufe94\014\ufe94\022\ufe94\023\ufe94\026\ufe94\033\ufe94\034" +
    "\ufe94\035\ufe94\036\ufe94\037\ufe94\052\ufe94\053\ufe94\054\ufe94" +
    "\055\ufe94\056\ufe94\001\002\000\006\003\u015f\013\u0160\001" +
    "\002\000\004\032\u0165\001\002\000\004\023\u0161\001\002" +
    "\000\024\022\124\023\125\033\130\034\137\035\122\036" +
    "\123\037\135\052\120\055\132\001\002\000\014\017\143" +
    "\024\u0163\034\141\035\142\060\144\001\002\000\004\032" +
    "\u0164\001\002\000\050\003\ufe95\006\ufe95\010\ufe95\012\ufe95" +
    "\013\ufe95\014\ufe95\022\ufe95\023\ufe95\026\ufe95\033\ufe95\034" +
    "\ufe95\035\ufe95\036\ufe95\037\ufe95\052\ufe95\053\ufe95\054\ufe95" +
    "\055\ufe95\056\ufe95\001\002\000\050\003\ufe91\006\ufe91\010" +
    "\ufe91\012\ufe91\013\ufe91\014\ufe91\022\ufe91\023\ufe91\026\ufe91" +
    "\033\ufe91\034\ufe91\035\ufe91\036\ufe91\037\ufe91\052\ufe91\053" +
    "\ufe91\054\ufe91\055\ufe91\056\ufe91\001\002\000\006\006\ufeea" +
    "\026\ufeea\001\002\000\044\003\u0113\010\u0111\012\u0114\013" +
    "\u0117\014\u0108\022\124\023\125\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\053\u010b\054\u0107\055\132\056" +
    "\u0112\001\002\000\006\006\ufeeb\026\ufeeb\001\002\000\014" +
    "\017\143\032\u016a\034\141\035\142\060\144\001\002\000" +
    "\050\003\ufebd\006\ufebd\010\ufebd\012\ufebd\013\ufebd\014\ufebd" +
    "\022\ufebd\023\ufebd\026\ufebd\033\ufebd\034\ufebd\035\ufebd\036" +
    "\ufebd\037\ufebd\052\ufebd\053\ufebd\054\ufebd\055\ufebd\056\ufebd" +
    "\001\002\000\024\022\124\023\125\033\130\034\137\035" +
    "\122\036\123\037\135\052\120\055\132\001\002\000\004" +
    "\024\u016d\001\002\000\004\025\u016e\001\002\000\046\003" +
    "\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022\124\023\125" +
    "\026\u016f\033\130\034\137\035\122\036\123\037\135\052" +
    "\120\053\u0123\054\u0120\055\132\056\u0129\001\002\000\052" +
    "\003\ufea9\006\ufea9\010\ufea9\011\u0177\012\ufea9\013\ufea9\014" +
    "\ufea9\022\ufea9\023\ufea9\026\ufea9\033\ufea9\034\ufea9\035\ufea9" +
    "\036\ufea9\037\ufea9\052\ufea9\053\ufea9\054\ufea9\055\ufea9\056" +
    "\ufea9\001\002\000\004\026\u0171\001\002\000\052\003\ufeaa" +
    "\006\ufeaa\010\ufeaa\011\u0172\012\ufeaa\013\ufeaa\014\ufeaa\022" +
    "\ufeaa\023\ufeaa\026\ufeaa\033\ufeaa\034\ufeaa\035\ufeaa\036\ufeaa" +
    "\037\ufeaa\052\ufeaa\053\ufeaa\054\ufeaa\055\ufeaa\056\ufeaa\001" +
    "\002\000\004\025\u0173\001\002\000\046\003\u012a\010\u0111" +
    "\012\u0114\013\u0117\014\u0108\022\124\023\125\026\u0174\033" +
    "\130\034\137\035\122\036\123\037\135\052\120\053\u0123" +
    "\054\u0120\055\132\056\u0129\001\002\000\050\003\ufea0\006" +
    "\ufea0\010\ufea0\012\ufea0\013\ufea0\014\ufea0\022\ufea0\023\ufea0" +
    "\026\ufea0\033\ufea0\034\ufea0\035\ufea0\036\ufea0\037\ufea0\052" +
    "\ufea0\053\ufea0\054\ufea0\055\ufea0\056\ufea0\001\002\000\004" +
    "\026\u0176\001\002\000\050\003\ufea1\006\ufea1\010\ufea1\012" +
    "\ufea1\013\ufea1\014\ufea1\022\ufea1\023\ufea1\026\ufea1\033\ufea1" +
    "\034\ufea1\035\ufea1\036\ufea1\037\ufea1\052\ufea1\053\ufea1\054" +
    "\ufea1\055\ufea1\056\ufea1\001\002\000\004\025\u0178\001\002" +
    "\000\046\003\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022" +
    "\124\023\125\026\u0179\033\130\034\137\035\122\036\123" +
    "\037\135\052\120\053\u0123\054\u0120\055\132\056\u0129\001" +
    "\002\000\050\003\ufe9e\006\ufe9e\010\ufe9e\012\ufe9e\013\ufe9e" +
    "\014\ufe9e\022\ufe9e\023\ufe9e\026\ufe9e\033\ufe9e\034\ufe9e\035" +
    "\ufe9e\036\ufe9e\037\ufe9e\052\ufe9e\053\ufe9e\054\ufe9e\055\ufe9e" +
    "\056\ufe9e\001\002\000\004\026\u017b\001\002\000\050\003" +
    "\ufe9f\006\ufe9f\010\ufe9f\012\ufe9f\013\ufe9f\014\ufe9f\022\ufe9f" +
    "\023\ufe9f\026\ufe9f\033\ufe9f\034\ufe9f\035\ufe9f\036\ufe9f\037" +
    "\ufe9f\052\ufe9f\053\ufe9f\054\ufe9f\055\ufe9f\056\ufe9f\001\002" +
    "\000\014\017\143\024\u017d\034\141\035\142\060\144\001" +
    "\002\000\006\003\u017f\025\u017e\001\002\000\046\003\u012a" +
    "\010\u0111\012\u0114\013\u0117\014\u0108\022\124\023\125\026" +
    "\u0183\033\130\034\137\035\122\036\123\037\135\052\120" +
    "\053\u0123\054\u0120\055\132\056\u0129\001\002\000\046\003" +
    "\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022\124\023\125" +
    "\026\u0180\033\130\034\137\035\122\036\123\037\135\052" +
    "\120\053\u0123\054\u0120\055\132\056\u0129\001\002\000\050" +
    "\003\ufea7\006\ufea7\010\ufea7\012\ufea7\013\ufea7\014\ufea7\022" +
    "\ufea7\023\ufea7\026\ufea7\033\ufea7\034\ufea7\035\ufea7\036\ufea7" +
    "\037\ufea7\052\ufea7\053\ufea7\054\ufea7\055\ufea7\056\ufea7\001" +
    "\002\000\004\026\u0182\001\002\000\050\003\ufea8\006\ufea8" +
    "\010\ufea8\012\ufea8\013\ufea8\014\ufea8\022\ufea8\023\ufea8\026" +
    "\ufea8\033\ufea8\034\ufea8\035\ufea8\036\ufea8\037\ufea8\052\ufea8" +
    "\053\ufea8\054\ufea8\055\ufea8\056\ufea8\001\002\000\052\003" +
    "\ufeab\006\ufeab\010\ufeab\011\u018b\012\ufeab\013\ufeab\014\ufeab" +
    "\022\ufeab\023\ufeab\026\ufeab\033\ufeab\034\ufeab\035\ufeab\036" +
    "\ufeab\037\ufeab\052\ufeab\053\ufeab\054\ufeab\055\ufeab\056\ufeab" +
    "\001\002\000\004\026\u0185\001\002\000\052\003\ufeac\006" +
    "\ufeac\010\ufeac\011\u0186\012\ufeac\013\ufeac\014\ufeac\022\ufeac" +
    "\023\ufeac\026\ufeac\033\ufeac\034\ufeac\035\ufeac\036\ufeac\037" +
    "\ufeac\052\ufeac\053\ufeac\054\ufeac\055\ufeac\056\ufeac\001\002" +
    "\000\004\025\u0187\001\002\000\046\003\u012a\010\u0111\012" +
    "\u0114\013\u0117\014\u0108\022\124\023\125\026\u0188\033\130" +
    "\034\137\035\122\036\123\037\135\052\120\053\u0123\054" +
    "\u0120\055\132\056\u0129\001\002\000\050\003\ufea4\006\ufea4" +
    "\010\ufea4\012\ufea4\013\ufea4\014\ufea4\022\ufea4\023\ufea4\026" +
    "\ufea4\033\ufea4\034\ufea4\035\ufea4\036\ufea4\037\ufea4\052\ufea4" +
    "\053\ufea4\054\ufea4\055\ufea4\056\ufea4\001\002\000\004\026" +
    "\u018a\001\002\000\050\003\ufea5\006\ufea5\010\ufea5\012\ufea5" +
    "\013\ufea5\014\ufea5\022\ufea5\023\ufea5\026\ufea5\033\ufea5\034" +
    "\ufea5\035\ufea5\036\ufea5\037\ufea5\052\ufea5\053\ufea5\054\ufea5" +
    "\055\ufea5\056\ufea5\001\002\000\004\025\u018c\001\002\000" +
    "\046\003\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022\124" +
    "\023\125\026\u018d\033\130\034\137\035\122\036\123\037" +
    "\135\052\120\053\u0123\054\u0120\055\132\056\u0129\001\002" +
    "\000\050\003\ufea2\006\ufea2\010\ufea2\012\ufea2\013\ufea2\014" +
    "\ufea2\022\ufea2\023\ufea2\026\ufea2\033\ufea2\034\ufea2\035\ufea2" +
    "\036\ufea2\037\ufea2\052\ufea2\053\ufea2\054\ufea2\055\ufea2\056" +
    "\ufea2\001\002\000\004\026\u018f\001\002\000\050\003\ufea3" +
    "\006\ufea3\010\ufea3\012\ufea3\013\ufea3\014\ufea3\022\ufea3\023" +
    "\ufea3\026\ufea3\033\ufea3\034\ufea3\035\ufea3\036\ufea3\037\ufea3" +
    "\052\ufea3\053\ufea3\054\ufea3\055\ufea3\056\ufea3\001\002\000" +
    "\004\026\u0193\001\002\000\006\026\uff21\045\023\001\002" +
    "\000\004\026\uff25\001\002\000\006\026\uff20\045\023\001" +
    "\002\000\004\026\uff24\001\002\000\004\026\uff22\001\002" +
    "\000\050\003\ufebf\006\ufebf\010\ufebf\012\ufebf\013\ufebf\014" +
    "\ufebf\022\ufebf\023\ufebf\026\ufebf\033\ufebf\034\ufebf\035\ufebf" +
    "\036\ufebf\037\ufebf\052\ufebf\053\ufebf\054\ufebf\055\ufebf\056" +
    "\ufebf\001\002\000\006\026\uff1f\045\023\001\002\000\004" +
    "\026\uff23\001\002\000\010\006\u01a3\033\130\052\120\001" +
    "\002\000\004\024\u019b\001\002\000\004\025\u019c\001\002" +
    "\000\046\003\u012a\010\u0111\012\u0114\013\u0117\014\u0108\022" +
    "\124\023\125\026\u019d\033\130\034\137\035\122\036\123" +
    "\037\135\052\120\053\u0123\054\u0120\055\132\056\u0129\001" +
    "\002\000\050\003\ufe8c\006\ufe8c\010\ufe8c\012\ufe8c\013\ufe8c" +
    "\014\ufe8c\022\ufe8c\023\ufe8c\026\ufe8c\033\ufe8c\034\ufe8c\035" +
    "\ufe8c\036\ufe8c\037\ufe8c\052\ufe8c\053\ufe8c\054\ufe8c\055\ufe8c" +
    "\056\ufe8c\001\002\000\004\026\u019f\001\002\000\050\003" +
    "\ufe8d\006\ufe8d\010\ufe8d\012\ufe8d\013\ufe8d\014\ufe8d\022\ufe8d" +
    "\023\ufe8d\026\ufe8d\033\ufe8d\034\ufe8d\035\ufe8d\036\ufe8d\037" +
    "\ufe8d\052\ufe8d\053\ufe8d\054\ufe8d\055\ufe8d\056\ufe8d\001\002" +
    "\000\004\024\u01ad\001\002\000\004\032\u01a9\001\002\000" +
    "\006\016\153\021\152\001\002\000\004\033\u01a4\001\002" +
    "\000\004\016\u01a5\001\002\000\024\022\124\023\125\033" +
    "\130\034\137\035\122\036\123\037\135\052\120\055\132" +
    "\001\002\000\014\017\143\032\ufedd\034\141\035\142\060" +
    "\144\001\002\000\024\022\124\023\125\033\130\034\137" +
    "\035\122\036\123\037\135\052\120\055\132\001\002\000" +
    "\014\017\143\032\ufede\034\141\035\142\060\144\001\002" +
    "\000\024\022\124\023\125\033\130\034\137\035\122\036" +
    "\123\037\135\052\120\055\132\001\002\000\014\017\143" +
    "\032\u01ab\034\141\035\142\060\144\001\002\000\024\022" +
    "\124\023\125\033\130\034\137\035\122\036\123\037\135" +
    "\052\120\055\132\001\002\000\014\017\143\024\ufe89\034" +
    "\141\035\142\060\144\001\002\000\006\003\u01af\025\u01ae" +
    "\001\002\000\046\003\u012a\010\u0111\012\u0114\013\u0117\014" +
    "\u0108\022\124\023\125\026\u01b3\033\130\034\137\035\122" +
    "\036\123\037\135\052\120\053\u0123\054\u0120\055\132\056" +
    "\u0129\001\002\000\046\003\u012a\010\u0111\012\u0114\013\u0117" +
    "\014\u0108\022\124\023\125\026\u01b0\033\130\034\137\035" +
    "\122\036\123\037\135\052\120\053\u0123\054\u0120\055\132" +
    "\056\u0129\001\002\000\050\003\ufe8a\006\ufe8a\010\ufe8a\012" +
    "\ufe8a\013\ufe8a\014\ufe8a\022\ufe8a\023\ufe8a\026\ufe8a\033\ufe8a" +
    "\034\ufe8a\035\ufe8a\036\ufe8a\037\ufe8a\052\ufe8a\053\ufe8a\054" +
    "\ufe8a\055\ufe8a\056\ufe8a\001\002\000\004\026\u01b2\001\002" +
    "\000\050\003\ufe8b\006\ufe8b\010\ufe8b\012\ufe8b\013\ufe8b\014" +
    "\ufe8b\022\ufe8b\023\ufe8b\026\ufe8b\033\ufe8b\034\ufe8b\035\ufe8b" +
    "\036\ufe8b\037\ufe8b\052\ufe8b\053\ufe8b\054\ufe8b\055\ufe8b\056" +
    "\ufe8b\001\002\000\050\003\ufe8e\006\ufe8e\010\ufe8e\012\ufe8e" +
    "\013\ufe8e\014\ufe8e\022\ufe8e\023\ufe8e\026\ufe8e\033\ufe8e\034" +
    "\ufe8e\035\ufe8e\036\ufe8e\037\ufe8e\052\ufe8e\053\ufe8e\054\ufe8e" +
    "\055\ufe8e\056\ufe8e\001\002\000\004\026\u01b5\001\002\000" +
    "\050\003\ufe8f\006\ufe8f\010\ufe8f\012\ufe8f\013\ufe8f\014\ufe8f" +
    "\022\ufe8f\023\ufe8f\026\ufe8f\033\ufe8f\034\ufe8f\035\ufe8f\036" +
    "\ufe8f\037\ufe8f\052\ufe8f\053\ufe8f\054\ufe8f\055\ufe8f\056\ufe8f" +
    "\001\002\000\050\003\ufebe\006\ufebe\010\ufebe\012\ufebe\013" +
    "\ufebe\014\ufebe\022\ufebe\023\ufebe\026\ufebe\033\ufebe\034\ufebe" +
    "\035\ufebe\036\ufebe\037\ufebe\052\ufebe\053\ufebe\054\ufebe\055" +
    "\ufebe\056\ufebe\001\002\000\006\006\026\026\u01cd\001\002" +
    "\000\010\003\u01c9\026\uff2f\045\uff34\001\002\000\046\003" +
    "\u0113\010\u0111\012\u0114\013\u0117\014\u0108\022\124\023\125" +
    "\026\u01bf\033\130\034\137\035\122\036\123\037\135\052" +
    "\120\053\u010b\054\u0107\055\132\056\u0112\001\002\000\052" +
    "\003\u0113\010\u0111\012\u0114\013\u0117\014\u0108\022\124\023" +
    "\125\026\u01bb\032\u0167\033\130\034\137\035\122\036\123" +
    "\037\135\045\023\052\120\053\u010b\054\u0107\055\132\056" +
    "\u0112\001\002\000\006\026\uff0b\045\023\001\002\000\004" +
    "\026\uff0c\001\002\000\004\026\uff0d\001\002\000\004\026" +
    "\u01c4\001\002\000\010\003\u01c0\026\uff32\045\uff3a\001\002" +
    "\000\006\026\uff11\045\023\001\002\000\004\045\023\001" +
    "\002\000\004\026\uff39\001\002\000\004\026\uff15\001\002" +
    "\000\010\003\u01c5\026\uff31\045\uff38\001\002\000\006\026" +
    "\uff10\045\023\001\002\000\004\045\023\001\002\000\004" +
    "\026\uff37\001\002\000\004\026\uff14\001\002\000\006\026" +
    "\uff0e\045\023\001\002\000\004\045\023\001\002\000\004" +
    "\026\uff33\001\002\000\004\026\uff12\001\002\000\010\003" +
    "\u01d2\026\uff30\045\uff36\001\002\000\004\003\u01cf\001\002" +
    "\000\004\026\u01d0\001\002\000\004\045\023\001\002\000" +
    "\004\026\uff2e\001\002\000\006\026\uff0f\045\023\001\002" +
    "\000\004\045\023\001\002\000\004\026\uff35\001\002\000" +
    "\004\026\uff13\001\002\000\006\003\uff3c\025\uff3c\001\002" +
    "\000\014\003\uff4c\025\uff4c\046\u01dd\057\u01da\061\u01dc\001" +
    "\002\000\010\003\uff3d\025\uff3d\057\u01da\001\002\000\006" +
    "\003\u0206\033\u0207\001\002\000\006\003\u01ef\023\u01ee\001" +
    "\002\000\012\003\ufef3\024\ufef3\033\u01ea\047\u01e9\001\002" +
    "\000\014\003\ufeef\025\ufeef\046\u01dd\057\ufeef\061\u01dc\001" +
    "\002\000\014\003\ufef0\025\ufef0\046\u01dd\057\ufef0\061\u01dc" +
    "\001\002\000\006\003\u01df\024\u01e0\001\002\000\014\003" +
    "\uff41\025\uff41\046\u01dd\057\u01da\061\u01dc\001\002\000\014" +
    "\003\uff50\025\uff50\046\u01dd\057\u01da\061\u01dc\001\002\000" +
    "\006\003\uff4e\025\uff4e\001\002\000\010\003\uff4f\025\uff4f" +
    "\057\u01da\001\002\000\006\003\uff4d\025\uff4d\001\002\000" +
    "\006\003\uff3f\025\uff3f\001\002\000\010\003\uff40\025\uff40" +
    "\057\u01da\001\002\000\006\003\uff3e\025\uff3e\001\002\000" +
    "\010\003\ufef2\025\ufef2\057\ufef2\001\002\000\010\003\ufef1" +
    "\025\ufef1\057\ufef1\001\002\000\006\003\u01db\006\u01d9\001" +
    "\002\000\010\003\ufef6\024\ufef6\047\u01eb\001\002\000\006" +
    "\003\u01db\006\u01d9\001\002\000\006\003\ufef8\024\ufef8\001" +
    "\002\000\006\003\ufef7\024\ufef7\001\002\000\010\003\u01fa" +
    "\006\u01fb\024\u01fc\001\002\000\010\006\u01f1\024\u01f2\033" +
    "\u01f0\001\002\000\006\003\u01f8\024\u01f9\001\002\000\006" +
    "\003\u01f3\033\u01f4\001\002\000\006\003\ufefe\025\ufefe\001" +
    "\002\000\010\003\ufefc\024\u01f7\025\ufefc\001\002\000\006" +
    "\003\u01f5\024\u01f6\001\002\000\006\003\uff03\025\uff03\001" +
    "\002\000\006\003\uff07\025\uff07\001\002\000\006\003\uff00" +
    "\025\uff00\001\002\000\006\003\ufefb\025\ufefb\001\002\000" +
    "\006\003\ufeff\025\ufeff\001\002\000\010\003\ufefd\025\ufefd" +
    "\033\u0203\001\002\000\006\003\u01fd\033\u01fe\001\002\000" +
    "\006\003\uff08\025\uff08\001\002\000\010\003\uff02\024\u0202" +
    "\025\uff02\001\002\000\006\003\u01ff\024\uff0a\001\002\000" +
    "\006\003\uff05\025\uff05\001\002\000\004\024\u0201\001\002" +
    "\000\006\003\uff09\025\uff09\001\002\000\006\003\uff06\025" +
    "\uff06\001\002\000\006\003\u0204\024\u0205\001\002\000\006" +
    "\003\uff01\025\uff01\001\002\000\006\003\uff04\025\uff04\001" +
    "\002\000\010\003\ufef4\024\ufef4\047\u020a\001\002\000\010" +
    "\003\ufef9\024\ufef9\047\u0208\001\002\000\006\003\u01db\006" +
    "\u01d9\001\002\000\006\003\ufefa\024\ufefa\001\002\000\006" +
    "\003\u01db\006\u01d9\001\002\000\006\003\ufef5\024\ufef5\001" +
    "\002\000\006\003\uff3b\025\uff3b\001\002\000\006\003\uff4a" +
    "\025\uff4a\001\002\000\010\003\uff4b\025\uff4b\057\u01da\001" +
    "\002\000\006\003\uff49\025\uff49\001\002\000\020\003\ufef3" +
    "\024\ufef3\033\u01ea\046\u01dd\047\u01e9\057\u01da\061\u01dc\001" +
    "\002\000\006\003\u0216\024\u0217\001\002\000\014\003\uff51" +
    "\025\uff51\046\u01dd\057\u01da\061\u01dc\001\002\000\006\003" +
    "\uff52\025\uff52\001\002\000\010\003\uff53\025\uff53\057\u01da" +
    "\001\002\000\006\003\uff54\025\uff54\001\002\000\014\003" +
    "\uff48\025\uff48\046\u01dd\057\u01da\061\u01dc\001\002\000\014" +
    "\003\uff55\025\uff55\046\u01dd\057\u01da\061\u01dc\001\002\000" +
    "\006\003\uff56\025\uff56\001\002\000\010\003\uff57\025\uff57" +
    "\057\u01da\001\002\000\006\003\uff58\025\uff58\001\002\000" +
    "\006\003\uff46\025\uff46\001\002\000\010\003\uff47\025\uff47" +
    "\057\u01da\001\002\000\006\003\uff45\025\uff45\001\002\000" +
    "\006\003\uff43\025\uff43\001\002\000\010\003\uff44\025\uff44" +
    "\057\u01da\001\002\000\006\003\uff42\025\uff42\001\002\000" +
    "\006\003\u0223\025\u0222\001\002\000\050\003\u0113\006\026" +
    "\010\u0111\012\u0114\013\u0117\014\u0108\022\124\023\125\026" +
    "\u0230\033\130\034\137\035\122\036\123\037\135\052\120" +
    "\053\u010b\054\u0107\055\132\056\u0112\001\002\000\050\003" +
    "\u0113\006\026\010\u0111\012\u0114\013\u0117\014\u0108\022\124" +
    "\023\125\026\u0225\033\130\034\137\035\122\036\123\037" +
    "\135\052\120\053\u010b\054\u0107\055\132\056\u0112\001\002" +
    "\000\004\026\u022d\001\002\000\006\026\uff16\045\023\001" +
    "\002\000\046\003\u0113\010\u0111\012\u0114\013\u0117\014\u0108" +
    "\022\124\023\125\026\u0228\033\130\034\137\035\122\036" +
    "\123\037\135\052\120\053\u010b\054\u0107\055\132\056\u0112" +
    "\001\002\000\004\026\u022a\001\002\000\006\026\uff19\045" +
    "\023\001\002\000\004\026\uff1d\001\002\000\006\026\uff18" +
    "\045\023\001\002\000\004\026\uff1c\001\002\000\004\026" +
    "\uff1a\001\002\000\006\026\uff17\045\023\001\002\000\004" +
    "\026\uff1b\001\002\000\004\026\u0238\001\002\000\006\026" +
    "\uff26\045\023\001\002\000\046\003\u0113\010\u0111\012\u0114" +
    "\013\u0117\014\u0108\022\124\023\125\026\u0233\033\130\034" +
    "\137\035\122\036\123\037\135\052\120\053\u010b\054\u0107" +
    "\055\132\056\u0112\001\002\000\004\026\u0235\001\002\000" +
    "\006\026\uff29\045\023\001\002\000\004\026\uff2d\001\002" +
    "\000\006\026\uff28\045\023\001\002\000\004\026\uff2c\001" +
    "\002\000\004\026\uff2a\001\002\000\006\026\uff27\045\023" +
    "\001\002\000\004\026\uff2b\001\002\000\014\006\026\026" +
    "\u023e\041\030\044\031\045\023\001\002\000\006\026\u0265" +
    "\045\023\001\002\000\012\006\026\026\u024e\044\031\045" +
    "\023\001\002\000\010\026\u0243\044\031\045\023\001\002" +
    "\000\006\002\uffcd\040\016\001\002\000\004\026\u0240\001" +
    "\002\000\006\002\uffbe\040\016\001\002\000\004\002\uffce" +
    "\001\002\000\004\002\uffdd\001\002\000\006\002\uffc4\040" +
    "\016\001\002\000\006\026\u0248\045\023\001\002\000\004" +
    "\026\u0246\001\002\000\006\002\uffc2\040\016\001\002\000" +
    "\004\002\uffd2\001\002\000\006\002\uffc3\040\016\001\002" +
    "\000\004\026\u024a\001\002\000\006\002\uffc1\040\016\001" +
    "\002\000\004\002\uffd1\001\002\000\004\002\uffd3\001\002" +
    "\000\004\002\uffd4\001\002\000\006\002\uffcc\040\016\001" +
    "\002\000\006\026\u025f\045\023\001\002\000\004\026\u025d" +
    "\001\002\000\010\026\u0252\044\031\045\023\001\002\000" +
    "\006\002\uffcb\040\016\001\002\000\006\026\u0257\045\023" +
    "\001\002\000\004\026\u0255\001\002\000\006\002\uffc7\040" +
    "\016\001\002\000\004\002\uffd7\001\002\000\006\002\uffc8" +
    "\040\016\001\002\000\004\026\u0259\001\002\000\006\002" +
    "\uffc5\040\016\001\002\000\004\002\uffd5\001\002\000\004" +
    "\002\uffd8\001\002\000\004\002\uffdb\001\002\000\006\002" +
    "\uffc9\040\016\001\002\000\004\002\uffd9\001\002\000\006" +
    "\002\uffca\040\016\001\002\000\004\026\u0261\001\002\000" +
    "\006\002\uffc6\040\016\001\002\000\004\002\uffd6\001\002" +
    "\000\004\002\uffda\001\002\000\004\002\uffdc\001\002\000" +
    "\006\002\uffc0\040\016\001\002\000\004\026\u0267\001\002" +
    "\000\006\002\uffbf\040\016\001\002\000\004\002\uffcf\001" +
    "\002\000\004\002\uffd0\001\002\000\004\032\u026b\001\002" +
    "\000\004\040\016\001\002\000\004\002\000\001\002\000" +
    "\004\002\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u026b\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u026c\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\016\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\022\024\023\026\025\023\027\032" +
    "\001\001\000\002\001\001\000\004\027\373\001\001\000" +
    "\010\023\346\025\344\027\345\001\001\000\004\010\241" +
    "\001\001\000\006\025\224\027\225\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\035\001\001\000\002" +
    "\001\001\000\004\003\034\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\066\025\065\001\001\000\002" +
    "\001\001\000\004\023\054\001\001\000\006\023\044\025" +
    "\043\001\001\000\004\025\051\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\025\050\001\001\000\004\025" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\062\001\001\000\004\025\061\001" +
    "\001\000\002\001\001\000\004\025\060\001\001\000\004" +
    "\025\057\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\025\102\001\001" +
    "\000\004\023\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\070\001\001\000\002\001\001\000\004" +
    "\025\101\001\001\000\004\025\100\001\001\000\002\001" +
    "\001\000\004\025\077\001\001\000\004\025\076\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\211\001\001\000\004\010\110\001" +
    "\001\000\004\022\207\001\001\000\002\001\001\000\004" +
    "\024\112\001\001\000\002\001\001\000\004\046\200\001" +
    "\001\000\004\052\115\001\001\000\022\004\116\013\125" +
    "\026\126\034\130\037\135\041\132\043\133\045\120\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\004\116\013\125\026\126\034\130\037\166\041\132" +
    "\043\133\045\120\001\001\000\020\004\116\013\125\026" +
    "\126\034\130\041\132\043\165\045\120\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\044\150\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\137\001\001\000\002\001\001\000" +
    "\020\004\116\013\125\026\126\034\130\041\132\043\147" +
    "\045\120\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\004\116\013\125\026\126\034\130\041\132\043\145" +
    "\045\120\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\004\116\013\125\026\126\034\130\041\132\043\153\045" +
    "\120\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\004\116\013\125\026\126\034\130\036" +
    "\156\037\157\041\132\043\133\045\120\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\012\137\001\001\000" +
    "\024\004\116\013\125\026\126\034\130\036\161\037\157" +
    "\041\132\043\133\045\120\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\026\126\041\164\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\012\137\001\001\000" +
    "\002\001\001\000\022\004\116\013\125\026\126\034\130" +
    "\037\171\041\132\043\133\045\120\001\001\000\004\012" +
    "\137\001\001\000\020\004\116\013\125\026\126\034\130" +
    "\041\132\043\173\045\120\001\001\000\002\001\001\000" +
    "\024\004\116\013\125\026\126\034\130\036\176\037\157" +
    "\041\132\043\133\045\120\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\201\001\001" +
    "\000\002\001\001\000\004\047\203\001\001\000\004\010" +
    "\204\001\001\000\002\001\001\000\004\022\206\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\214\001" +
    "\001\000\002\001\001\000\004\022\213\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\217\001\001\000" +
    "\004\022\222\001\001\000\002\001\001\000\004\022\221" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\235\001\001\000\004\027\231\001\001\000\002\001\001" +
    "\000\004\003\227\001\001\000\002\001\001\000\004\003" +
    "\234\001\001\000\002\001\001\000\004\003\233\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\332\001\001\000\004\023\310\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\051\245\001\001\000" +
    "\004\023\244\001\001\000\002\001\001\000\004\023\246" +
    "\001\001\000\002\001\001\000\004\010\265\001\001\000" +
    "\006\010\252\023\253\001\001\000\004\010\257\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\255\001" +
    "\001\000\002\001\001\000\004\023\262\001\001\000\002" +
    "\001\001\000\004\023\261\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\276\001\001\000\004\023\273" +
    "\001\001\000\002\001\001\000\004\023\271\001\001\000" +
    "\004\023\270\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\274\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\023\304\001\001\000\002\001\001\000\004" +
    "\023\302\001\001\000\004\023\301\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\023\305\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\023\330\001\001\000" +
    "\004\010\313\001\001\000\002\001\001\000\004\010\322" +
    "\001\001\000\004\023\317\001\001\000\002\001\001\000" +
    "\004\023\315\001\001\000\002\001\001\000\004\023\320" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\326\001\001\000\002\001\001\000\004\023\324\001\001" +
    "\000\002\001\001\000\004\023\327\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\341" +
    "\001\001\000\002\001\001\000\004\023\337\001\001\000" +
    "\004\050\335\001\001\000\004\023\336\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\023\342\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\371\001\001" +
    "\000\004\027\365\001\001\000\002\001\001\000\006\025" +
    "\350\027\351\001\001\000\004\003\361\001\001\000\004" +
    "\027\355\001\001\000\002\001\001\000\004\003\353\001" +
    "\001\000\002\001\001\000\004\003\360\001\001\000\002" +
    "\001\001\000\004\003\357\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\363\001\001" +
    "\000\002\001\001\000\004\003\370\001\001\000\002\001" +
    "\001\000\004\003\367\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\376\001\001\000" +
    "\002\001\001\000\004\003\375\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\u0220\001\001\000\004\033" +
    "\u0103\001\001\000\004\011\u0210\001\001\000\010\011\u01dd" +
    "\030\u01d7\031\u01d5\001\001\000\002\001\001\000\042\004" +
    "\116\006\u010b\007\u010d\013\125\014\u0108\015\u010f\016\u0115" +
    "\023\u01b8\026\126\032\u01b6\034\130\037\u0117\040\u0114\041" +
    "\132\043\133\045\120\001\001\000\042\004\116\006\u010b" +
    "\007\u010d\013\125\014\u0108\015\u010f\016\u0115\023\u010e\026" +
    "\126\032\u0109\034\130\037\u0117\040\u0114\041\132\043\133" +
    "\045\120\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u0194\001\001\000\002\001\001\000" +
    "\040\004\116\006\u010b\007\u010d\013\125\014\u0108\015\u010f" +
    "\016\u0115\026\126\032\u018f\034\130\037\u0117\040\u0114\041" +
    "\132\043\133\045\120\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\004\116\013\125\026\126\034\130\037" +
    "\u0168\041\132\043\133\045\120\001\001\000\040\004\116" +
    "\006\u010b\007\u010d\013\125\014\u0108\015\u010f\016\u0115\026" +
    "\126\032\u0165\034\130\037\u0117\040\u0114\041\132\043\133" +
    "\045\120\001\001\000\002\001\001\000\040\004\116\006" +
    "\u010b\007\u010d\013\125\014\u0108\015\u010f\016\u0115\026\126" +
    "\032\u0144\034\130\037\u0117\040\u0114\041\132\043\133\045" +
    "\120\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\137\001\001\000\004\060\u0119\001\001\000\040\004" +
    "\116\006\u010b\007\u010d\013\125\014\u0108\015\u010f\016\u0115" +
    "\026\126\032\u011a\034\130\037\u0117\040\u0114\041\132\043" +
    "\133\045\120\001\001\000\002\001\001\000\022\004\116" +
    "\013\125\026\126\034\130\037\u0138\041\132\043\133\045" +
    "\120\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\004\116\006\u0123\007\u0126\013\125\014\u0120\015\u0127\016" +
    "\u012a\020\u0121\026\126\034\130\037\u012b\041\132\042\u0125" +
    "\043\133\045\120\001\001\000\002\001\001\000\002\001" +
    "\001\000\040\004\116\006\u0123\007\u0126\013\125\014\u0120" +
    "\015\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b\041" +
    "\132\042\u0136\043\133\045\120\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\004\116\013\125" +
    "\026\126\034\130\037\u0132\041\132\043\133\045\120\001" +
    "\001\000\040\004\116\006\u0123\007\u0126\013\125\014\u0120" +
    "\015\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b\041" +
    "\132\042\u012f\043\133\045\120\001\001\000\002\001\001" +
    "\000\004\012\137\001\001\000\004\061\u012d\001\001\000" +
    "\040\004\116\006\u0123\007\u0126\013\125\014\u0120\015\u0127" +
    "\016\u012a\020\u0121\026\126\034\130\037\u012b\041\132\042" +
    "\u012e\043\133\045\120\001\001\000\002\001\001\000\002" +
    "\001\001\000\040\004\116\006\u0123\007\u0126\013\125\014" +
    "\u0120\015\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b" +
    "\041\132\042\u0131\043\133\045\120\001\001\000\002\001" +
    "\001\000\004\012\137\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\137\001\001\000\002\001\001\000\006" +
    "\062\u0140\063\u013f\001\001\000\040\004\116\006\u0123\007" +
    "\u0126\013\125\014\u0120\015\u0127\016\u012a\020\u0121\026\126" +
    "\034\130\037\u012b\041\132\042\u013d\043\133\045\120\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\040\004\116\006\u0123\007\u0126\013" +
    "\125\014\u0120\015\u0127\016\u012a\020\u0121\026\126\034\130" +
    "\037\u012b\041\132\042\u0141\043\133\045\120\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\040\004\116\006\u0123\007\u0126\013\125\014" +
    "\u0120\015\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b" +
    "\041\132\042\u0154\043\133\045\120\001\001\000\040\004" +
    "\116\006\u0123\007\u0126\013\125\014\u0120\015\u0127\016\u012a" +
    "\020\u0121\026\126\034\130\037\u012b\041\132\042\u0148\043" +
    "\133\045\120\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\022\004\116\013" +
    "\125\026\126\034\130\037\u014c\041\132\043\133\045\120" +
    "\001\001\000\004\012\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\004\116\013\125" +
    "\026\126\034\130\037\u0151\041\132\043\133\045\120\001" +
    "\001\000\004\012\137\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\004\116" +
    "\013\125\026\126\034\130\037\u015a\041\132\043\133\045" +
    "\120\001\001\000\004\012\137\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\004\116\013\125\026\126\034\130" +
    "\037\u0161\041\132\043\133\045\120\001\001\000\004\012" +
    "\137\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\004\116\006\u010b\007" +
    "\u010d\013\125\014\u0108\015\u010f\016\u0115\026\126\032\u0167" +
    "\034\130\037\u0117\040\u0114\041\132\043\133\045\120\001" +
    "\001\000\002\001\001\000\004\012\137\001\001\000\002" +
    "\001\001\000\022\004\116\013\125\026\126\034\130\037" +
    "\u017b\041\132\043\133\045\120\001\001\000\002\001\001" +
    "\000\002\001\001\000\040\004\116\006\u0123\007\u0126\013" +
    "\125\014\u0120\015\u0127\016\u012a\020\u0121\026\126\034\130" +
    "\037\u012b\041\132\042\u016f\043\133\045\120\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\040\004\116\006\u0123\007\u0126\013\125\014" +
    "\u0120\015\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b" +
    "\041\132\042\u0174\043\133\045\120\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\040\004\116\006\u0123\007\u0126\013\125\014\u0120\015" +
    "\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b\041\132" +
    "\042\u0179\043\133\045\120\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\012\137\001\001" +
    "\000\002\001\001\000\040\004\116\006\u0123\007\u0126\013" +
    "\125\014\u0120\015\u0127\016\u012a\020\u0121\026\126\034\130" +
    "\037\u012b\041\132\042\u0183\043\133\045\120\001\001\000" +
    "\040\004\116\006\u0123\007\u0126\013\125\014\u0120\015\u0127" +
    "\016\u012a\020\u0121\026\126\034\130\037\u012b\041\132\042" +
    "\u0180\043\133\045\120\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\004\116" +
    "\006\u0123\007\u0126\013\125\014\u0120\015\u0127\016\u012a\020" +
    "\u0121\026\126\034\130\037\u012b\041\132\042\u0188\043\133" +
    "\045\120\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\040\004\116\006\u0123" +
    "\007\u0126\013\125\014\u0120\015\u0127\016\u012a\020\u0121\026" +
    "\126\034\130\037\u012b\041\132\042\u018d\043\133\045\120" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\027\u0191\001\001\000\002" +
    "\001\001\000\004\027\u0193\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\027\u0197\001\001" +
    "\000\002\001\001\000\012\021\u019f\026\126\035\u01a0\041" +
    "\u01a1\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\004\116\006\u0123\007\u0126\013\125\014\u0120\015\u0127\016" +
    "\u012a\020\u0121\026\126\034\130\037\u012b\041\132\042\u019d" +
    "\043\133\045\120\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\u01a6\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\004\116\013\125\026\126\034\130\037\u01a5" +
    "\041\132\043\133\045\120\001\001\000\004\012\137\001" +
    "\001\000\022\004\116\013\125\026\126\034\130\037\u01a7" +
    "\041\132\043\133\045\120\001\001\000\004\012\137\001" +
    "\001\000\022\004\116\013\125\026\126\034\130\037\u01a9" +
    "\041\132\043\133\045\120\001\001\000\004\012\137\001" +
    "\001\000\022\004\116\013\125\026\126\034\130\037\u01ab" +
    "\041\132\043\133\045\120\001\001\000\004\012\137\001" +
    "\001\000\002\001\001\000\040\004\116\006\u0123\007\u0126" +
    "\013\125\014\u0120\015\u0127\016\u012a\020\u0121\026\126\034" +
    "\130\037\u012b\041\132\042\u01b3\043\133\045\120\001\001" +
    "\000\040\004\116\006\u0123\007\u0126\013\125\014\u0120\015" +
    "\u0127\016\u012a\020\u0121\026\126\034\130\037\u012b\041\132" +
    "\042\u01b0\043\133\045\120\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u01cd\001\001\000\004\056\u01c9\001\001\000\040\004\116" +
    "\006\u010b\007\u010d\013\125\014\u0108\015\u010f\016\u0115\026" +
    "\126\032\u01bd\034\130\037\u0117\040\u0114\041\132\043\133" +
    "\045\120\001\001\000\042\004\116\006\u010b\007\u010d\013" +
    "\125\014\u0108\015\u010f\016\u0115\026\126\027\u01bb\032\u0165" +
    "\034\130\037\u0117\040\u0114\041\132\043\133\045\120\001" +
    "\001\000\004\027\u01bc\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\053\u01c0\001\001\000" +
    "\004\027\u01c2\001\001\000\004\027\u01c1\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\054\u01c5\001\001\000" +
    "\004\027\u01c7\001\001\000\004\027\u01c6\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\u01cb\001\001\000" +
    "\004\027\u01ca\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\055\u01d2\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\027\u01d0\001\001\000\002\001\001\000\004" +
    "\027\u01d4\001\001\000\004\027\u01d3\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\030\u020d" +
    "\031\u020c\001\001\000\004\031\u020b\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\030\u01e7" +
    "\001\001\000\004\030\u01e6\001\001\000\002\001\001\000" +
    "\006\030\u01e4\031\u01e3\001\001\000\006\030\u01e1\031\u01e0" +
    "\001\001\000\002\001\001\000\004\031\u01e2\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\031\u01e5\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u01ec\001\001\000\002\001\001\000\004\011\u01eb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\057\u01ff" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u0208\001\001\000\002\001\001\000\004\011\u020a" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\031\u020e\001\001\000\002\001\001\000\006" +
    "\030\u021e\031\u021d\001\001\000\002\001\001\000\006\030" +
    "\u0213\031\u0212\001\001\000\002\001\001\000\004\031\u0214" +
    "\001\001\000\002\001\001\000\006\030\u021b\031\u021a\001" +
    "\001\000\006\030\u0218\031\u0217\001\001\000\002\001\001" +
    "\000\004\031\u0219\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\031\u021c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\031\u021f\001\001\000\002\001\001\000" +
    "\002\001\001\000\042\004\116\006\u010b\007\u010d\013\125" +
    "\014\u0108\015\u010f\016\u0115\023\u0230\026\126\032\u022e\034" +
    "\130\037\u0117\040\u0114\041\132\043\133\045\120\001\001" +
    "\000\042\004\116\006\u010b\007\u010d\013\125\014\u0108\015" +
    "\u010f\016\u0115\023\u0225\026\126\032\u0223\034\130\037\u0117" +
    "\040\u0114\041\132\043\133\045\120\001\001\000\002\001" +
    "\001\000\004\027\u022b\001\001\000\040\004\116\006\u010b" +
    "\007\u010d\013\125\014\u0108\015\u010f\016\u0115\026\126\032" +
    "\u0226\034\130\037\u0117\040\u0114\041\132\043\133\045\120" +
    "\001\001\000\002\001\001\000\004\027\u0228\001\001\000" +
    "\002\001\001\000\004\027\u022a\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u022d\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\027\u0236\001\001\000\040" +
    "\004\116\006\u010b\007\u010d\013\125\014\u0108\015\u010f\016" +
    "\u0115\026\126\032\u0231\034\130\037\u0117\040\u0114\041\132" +
    "\043\133\045\120\001\001\000\002\001\001\000\004\027" +
    "\u0233\001\001\000\002\001\001\000\004\027\u0235\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\u0238\001" +
    "\001\000\002\001\001\000\012\022\u023b\023\u023c\025\u023a" +
    "\027\u023e\001\001\000\004\027\u0265\001\001\000\010\023" +
    "\u0250\025\u024e\027\u024f\001\001\000\006\025\u0243\027\u0244" +
    "\001\001\000\004\003\u0241\001\001\000\002\001\001\000" +
    "\004\003\u0240\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\003\u024c\001\001\000\004\027\u0248\001\001\000" +
    "\002\001\001\000\004\003\u0246\001\001\000\002\001\001" +
    "\000\004\003\u024b\001\001\000\002\001\001\000\004\003" +
    "\u024a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u0263\001\001\000\004\027\u025f\001" +
    "\001\000\002\001\001\000\006\025\u0252\027\u0253\001\001" +
    "\000\004\003\u025b\001\001\000\004\027\u0257\001\001\000" +
    "\002\001\001\000\004\003\u0255\001\001\000\002\001\001" +
    "\000\004\003\u025a\001\001\000\002\001\001\000\004\003" +
    "\u0259\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u025d\001\001\000\002\001\001\000" +
    "\004\003\u0262\001\001\000\002\001\001\000\004\003\u0261" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u0268\001\001\000\002\001\001\000\004" +
    "\003\u0267\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\u026b\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  public ArrayList<Symbol> errores = new ArrayList<>();
  public ArrayList<String> erroresStr = new ArrayList<>();
  
  public void syntax_error(Symbol s) {
    SyntaxError se = new SyntaxError();
    se.errores = this.errores;
    se.erroresStr = this.erroresStr;
    se.stack = this.stack;
    se.syntaxError(s);
  }
  @Override
  public int error_sync_size() {
    return 2;
  }

  public Symbol getCurToken() {
    return this.cur_token;
  }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // SENTENCIA_FOR ::= ASIGNACION_COMPLEJA P_coma EXPRESION P_coma EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_FOR",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // FOR ::= For error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // FOR ::= For error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // DO_WHILE ::= Do Llave_a Llave_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // DO_WHILE ::= Do Llave_a CUERPO_EC Llave_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // DO_WHILE ::= Do error Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // DO_WHILE ::= Do error CUERPO_EC Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // DO_WHILE ::= Do Llave_a Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // DO_WHILE ::= Do Llave_a CUERPO_EC Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // WHILE ::= While error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // WHILE ::= While error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c Llave_a NT$13 Llave_c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // NT$13 ::= 
            {
              Object RESULT =null;
 Semantico.self().print("HOLA"); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$13",49, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c Llave_a NT$12 CUERPO_EC Llave_c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // NT$12 ::= 
            {
              Object RESULT =null;
 Semantico.self().print("HOLA"); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$12",48, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // IF_ELSE ::= If error Parentesis_c Llave_a Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // IF_ELSE ::= If error Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // IF_ELSE ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // IF_ELSE ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // EXPRESION_BOOLEANA ::= P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_BOOLEANA",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // IF ::= If Parentesis_a EXPRESION Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // IF ::= If Parentesis_a EXPRESION Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // IF ::= If error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // IF ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // IF ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // IF ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // OP_TERNARIO ::= Parentesis_a EXPRESION Parentesis_c Pregunta EXPRESION Dos_Puntos EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_TERNARIO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // CUERPO_EC ::= SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // CUERPO_EC ::= EXPRESION P_coma 
            {
              Object RESULT =null;
		 Semantico.self().expresion_eval(this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // CUERPO_EC ::= error CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // CUERPO_EC ::= error P_coma CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // CUERPO_EC ::= SENTENCIA CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // CUERPO_EC ::= EXPRESION P_coma NT$11 CUERPO_EC 
            {
              Object RESULT =null;
              // propagate RESULT from NT$11
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // NT$11 ::= 
            {
              Object RESULT =null;
 Semantico.self().expresion_eval(this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$11",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // SENTENCIA ::= Return EXPRESION P_coma 
            {
              Object RESULT =null;
		 Semantico.self().expresion_eval(this.parser.getCurToken());  
                              Semantico.self().returnEncontrado(this.parser.getCurToken());
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // SENTENCIA ::= Continue P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // SENTENCIA ::= Break P_coma 
            {
              Object RESULT =null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		 Semantico.self().evalBreakSentencia(b,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // SENTENCIA ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // SENTENCIA ::= DO_WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // SENTENCIA ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // SENTENCIA ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // SENTENCIA ::= IF_ELSE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // ESTRUCTURA_CONTROL ::= Return EXPRESION P_coma 
            {
              Object RESULT =null;
		 Semantico.self().expresion_eval(this.parser.getCurToken()); 
                               Semantico.self().returnEncontrado(this.parser.getCurToken());
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // ESTRUCTURA_CONTROL ::= Continue P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // ESTRUCTURA_CONTROL ::= Break P_coma 
            {
              Object RESULT =null;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		 Semantico.self().evalBreakFuncion(b,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // ESTRUCTURA_CONTROL ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // ESTRUCTURA_CONTROL ::= DO_WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // ESTRUCTURA_CONTROL ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // ESTRUCTURA_CONTROL ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // ESTRUCTURA_CONTROL ::= IF_ELSE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // OP_UNARIO ::= Not 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // OP_UNARIO ::= Menos 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // OP_UNARIO ::= Mas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // OP_ARITMETICO ::= Menos 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.peek()).value;
		 Semantico.self().expresion_guardarOpArit(n); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // OP_ARITMETICO ::= Mas 
            {
              Object RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.peek()).value;
		 Semantico.self().expresion_guardarOpArit(m); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // OP_ARITMETICO ::= Op_Aritmetico 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // EXPRESION_TERM ::= IDENTIFICADOR_CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // EXPRESION_TERM ::= LITERAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // EXPRESION_TERM ::= OP_TERNARIO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // EXPRESION_TERM ::= ASIGNACION_BASICA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // EXPRESION_TERM ::= OP_UNARIO EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // EXPRESION_TERM ::= Parentesis_a EXPRESION Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // EXPRESION ::= EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // EXPRESION ::= EXPRESION Op_logico error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // EXPRESION ::= EXPRESION OP_ARITMETICO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // EXPRESION ::= EXPRESION Op_logico EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // EXPRESION ::= EXPRESION OP_ARITMETICO EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // LITERAL ::= Op_booleano 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // LITERAL ::= String 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // LITERAL ::= Numero 
            {
              Object RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).left;
		int nright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.peek()).value;
		 Semantico.self().expresion_guardarNum(n); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // ARGUMENTOS ::= EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARGUMENTOS",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // ARGUMENTOS ::= EXPRESION Coma ARGUMENTOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARGUMENTOS",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // ATRIBUCION_IGUAL ::= Igual 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.peek()).value;
		 Semantico.self().expresion_guardarOpArit(i); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATRIBUCION_IGUAL",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // ATRIBUCION_IGUAL ::= Op_atribucion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATRIBUCION_IGUAL",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // ASIGNACION_COMPLEJA ::= T_dato Identificador Igual EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_COMPLEJA",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // ASIGNACION_COMPLEJA ::= IDENTIFICADOR_CUERPO ATRIBUCION_IGUAL EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_COMPLEJA",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // ASIGNACION_BASICA ::= IDENTIFICADOR_CUERPO ATRIBUCION_IGUAL EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_BASICA",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // IDENTIFICADOR_CUERPO ::= IDENTIFICADOR_COMPLEJO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_CUERPO",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // IDENTIFICADOR_CUERPO ::= IDENTIFICADOR_COMPLEJO Punto IDENTIFICADOR_CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_CUERPO",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // IDENTIFICADOR_COMPLEJO ::= Identificador 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.peek()).value;
		 Semantico.self().expresion_guardarId(i); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // IDENTIFICADOR_COMPLEJO ::= Identificador Parentesis_a ARGUMENTOS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // IDENTIFICADOR_COMPLEJO ::= Identificador Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // IDENTIFICADOR_COMPLEJO ::= This 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // IDENTIFICADOR_COMPLEJO ::= This Parentesis_a ARGUMENTOS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // IDENTIFICADOR_COMPLEJO ::= This Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // CUERPO ::= ESTRUCTURA_CONTROL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // CUERPO ::= EXPRESION P_coma 
            {
              Object RESULT =null;
		 Semantico.self().expresion_eval(this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // CUERPO ::= error CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // CUERPO ::= error P_coma CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // CUERPO ::= ESTRUCTURA_CONTROL CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // CUERPO ::= EXPRESION P_coma NT$10 CUERPO 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // NT$10 ::= 
            {
              Object RESULT =null;
 Semantico.self().expresion_eval(this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$10",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // MODIFICADORES ::= Visibilidad 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // MODIFICADORES ::= Modificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // MODIFICADORES ::= Visibilidad MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // MODIFICADORES ::= Modificador MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // PARAMETROS ::= error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // PARAMETROS ::= T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // PARAMETROS ::= T_dato error Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // PARAMETROS ::= error Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // PARAMETROS ::= error Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // PARAMETROS ::= error Identificador Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // PARAMETROS ::= T_dato Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // PARAMETROS ::= T_dato Identificador Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // RETURNS ::= Returns error Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // RETURNS ::= Returns error T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // RETURNS ::= Returns Parentesis_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // RETURNS ::= Returns error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // RETURNS ::= Returns error Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // RETURNS ::= Returns error T_dato error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // RETURNS ::= Returns Parentesis_a error Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // RETURNS ::= Returns Parentesis_a T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // RETURNS ::= Returns error T_dato Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // RETURNS ::= Returns Parentesis_a error Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // RETURNS ::= Returns Parentesis_a T_dato Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // RETURNS ::= Returns Parentesis_a T_dato error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // RETURNS ::= Returns error T_dato Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // RETURNS ::= Returns Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // RETURNS ::= Returns Parentesis_a T_dato Identificador NT$9 Parentesis_c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // NT$9 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
 Semantico.self().funcion_tipo(t); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$9",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a Llave_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO Llave_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES Llave_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a Llave_c error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO Llave_c error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES Llave_c error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // FUNCION ::= Function error FUNCION_HEADER error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // FUNCION ::= Function error FUNCION_HEADER error CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // FUNCION ::= Function error FUNCION_HEADER error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // FUNCION ::= Function error FUNCION_HEADER error CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // FUNCION ::= Function Identificador FUNCION_HEADER error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // FUNCION ::= Function Identificador FUNCION_HEADER error CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // FUNCION ::= Function Identificador FUNCION_HEADER error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // FUNCION ::= Function Identificador FUNCION_HEADER error CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // FUNCION ::= Function error FUNCION_HEADER Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // FUNCION ::= Function error FUNCION_HEADER Llave_a CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // FUNCION ::= Function error FUNCION_HEADER Llave_a Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // FUNCION ::= Function error FUNCION_HEADER Llave_a CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO VARIABLES error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a Llave_c 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;
		 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO Llave_c 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;
		 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).value;
		 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;
		 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a Llave_c NT$8 FUNCION 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // NT$8 ::= 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;
 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$8",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO Llave_c NT$7 FUNCION 
            {
              Object RESULT =null;
              // propagate RESULT from NT$7
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // NT$7 ::= 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;
 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$7",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c NT$6 FUNCION 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // NT$6 ::= 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).value;
 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$6",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES Llave_c NT$5 FUNCION 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // NT$5 ::= 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;
 Semantico.self().funcion_nombre(i,this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$5",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // FUNCION_HEADER ::= error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // FUNCION_HEADER ::= error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // FUNCION_HEADER ::= error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // FUNCION_HEADER ::= error PARAMETROS error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // FUNCION_HEADER ::= error PARAMETROS error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // FUNCION_HEADER ::= error PARAMETROS error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // FUNCION_HEADER ::= error PARAMETROS error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // FUNCION_HEADER ::= Parentesis_a error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // FUNCION_HEADER ::= Parentesis_a error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // FUNCION_HEADER ::= Parentesis_a error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // FUNCION_HEADER ::= error Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // FUNCION_HEADER ::= error Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // FUNCION_HEADER ::= error Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // FUNCION_HEADER ::= error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // FUNCION_HEADER ::= Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // FUNCION_HEADER ::= Parentesis_a Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // FUNCION_HEADER ::= Parentesis_a Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // FUNCION_HEADER ::= Parentesis_a Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // ESTRUCTURA ::= Struct error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // ESTRUCTURA ::= Struct error Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // ESTRUCTURA ::= Struct error Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // ESTRUCTURA ::= Struct error Llave_a error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // ESTRUCTURA ::= Struct error Llave_a VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // ESTRUCTURA ::= Struct Identificador error VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // ESTRUCTURA ::= Struct Identificador error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // ESTRUCTURA ::= Struct Identificador error VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // ESTRUCTURA ::= Struct error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // ESTRUCTURA ::= Struct error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // ESTRUCTURA ::= Struct error Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // ESTRUCTURA ::= Struct error VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // ESTRUCTURA ::= Struct Identificador Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ESTRUCTURA ::= Struct Identificador Llave_a error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ESTRUCTURA ::= Struct Identificador error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ESTRUCTURA ::= Struct Identificador error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // ESTRUCTURA ::= Struct Identificador error Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // ESTRUCTURA ::= Struct Identificador error VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // ESTRUCTURA ::= Struct error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ESTRUCTURA ::= Struct error Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // ESTRUCTURA ::= Struct error Llave_a Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // ESTRUCTURA ::= Struct error Llave_a VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // ESTRUCTURA ::= Struct Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // ESTRUCTURA ::= Struct Identificador Llave_a Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // ASIGNACION ::= Igual NT$4 EXPRESION 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		 Semantico.self().expresion_eval(this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // NT$4 ::= 
            {
              Object RESULT =null;
 Semantico.self().variables_expresion(); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$4",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // VARIABLES ::= T_dato error Corchete_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // VARIABLES ::= T_dato Corchete_a error Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // VARIABLES ::= T_dato error Corchete_c Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // VARIABLES ::= T_dato error Corchete_c error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // VARIABLES ::= T_dato Corchete_a error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // VARIABLES ::= T_dato Corchete_a error Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // VARIABLES ::= T_dato error Corchete_c Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // VARIABLES ::= T_dato Corchete_a Corchete_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // VARIABLES ::= T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // VARIABLES ::= T_dato Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // VARIABLES ::= T_dato Corchete_a Corchete_c error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // VARIABLES ::= T_dato error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // VARIABLES ::= T_dato Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // VARIABLES ::= T_dato LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // VARIABLES ::= T_dato Visibilidad LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // VARIABLES ::= T_dato LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // VARIABLES ::= T_dato Visibilidad LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // VARIABLES ::= T_dato error Corchete_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // VARIABLES ::= T_dato error Corchete_c Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // VARIABLES ::= T_dato error Corchete_c error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // VARIABLES ::= T_dato error Corchete_c Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // VARIABLES ::= T_dato Corchete_a error LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // VARIABLES ::= T_dato Corchete_a error LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // VARIABLES ::= T_dato error Corchete_c LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // VARIABLES ::= T_dato error Corchete_c LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // VARIABLES ::= T_dato Corchete_a Corchete_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // VARIABLES ::= T_dato error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // VARIABLES ::= T_dato Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // VARIABLES ::= T_dato Corchete_a Corchete_c error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // VARIABLES ::= T_dato error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // VARIABLES ::= T_dato Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA P_coma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA P_coma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // VARIABLES ::= T_dato LISTA P_coma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).value;
		 Semantico.self().variables_tipo(t); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // VARIABLES ::= T_dato Visibilidad LISTA P_coma 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;
		 Semantico.self().variables_tipo(t); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA P_coma VARIABLES 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // VARIABLES ::= T_dato LISTA P_coma NT$3 VARIABLES 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NT$3 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).value;
 Semantico.self().variables_tipo(t); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$3",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // VARIABLES ::= T_dato Visibilidad LISTA P_coma NT$2 VARIABLES 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$2 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;
 Semantico.self().variables_tipo(t); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$2",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // LISTA ::= Identificador ASIGNACION 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		 Semantico.self().variables_nombre(i , this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // LISTA ::= Identificador ASIGNACION Coma NT$1 LISTA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // NT$1 ::= 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).value;
 Semantico.self().variables_nombre(i , this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$1",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // LISTA ::= Identificador 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.peek()).value;
		 Semantico.self().variables_nombre(i , this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // LISTA ::= Identificador Coma NT$0 LISTA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)).value;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // NT$0 ::= 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object i = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
 Semantico.self().variables_nombre(i , this.parser.getCurToken()); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$0",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ENUMERADOR ::= Enum Identificador error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ENUMERADOR ::= Enum Identificador error LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ENUMERADOR ::= Enum error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ENUMERADOR ::= Enum error Llave_a LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ENUMERADOR ::= Enum Identificador error Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ENUMERADOR ::= Enum Identificador error LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ENUMERADOR ::= Enum error Llave_a Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ENUMERADOR ::= Enum error Llave_a LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ENUMERADOR ::= Enum Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ENUMERADOR ::= Enum Identificador Llave_a LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ENUMERADOR ::= Enum Identificador Llave_a Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ENUMERADOR ::= Enum Identificador Llave_a LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // CONTRATO ::= Contract error Llave_a FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CONTRATO ::= Contract error Llave_a ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CONTRATO ::= Contract error Llave_a ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CONTRATO ::= Contract error Llave_a VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CONTRATO ::= Contract error Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // CONTRATO ::= Contract error Llave_a ENUMERADOR FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CONTRATO ::= Contract error Llave_a ENUMERADOR Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CONTRATO ::= Contract error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CONTRATO ::= Contract error Llave_a FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CONTRATO ::= Contract error Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CONTRATO ::= Contract error Llave_a ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // CONTRATO ::= Contract error Llave_a VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // CONTRATO ::= Contract error Llave_a VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CONTRATO ::= Contract error Llave_a ENUMERADOR FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CONTRATO ::= Contract error Llave_a ENUMERADOR Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CONTRATO ::= Contract error Llave_a Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CONTRATO ::= Contract Identificador Llave_a FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONTRATO ::= Contract Identificador Llave_a VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONTRATO ::= Contract Identificador Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTRATO ::= Contract Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CONTRATO ::= Contract Identificador Llave_a FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CONTRATO ::= Contract Identificador Llave_a VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CONTRATO ::= Contract Identificador Llave_a VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CONTRATO ::= Contract Identificador Llave_a Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= Pragma error CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= Pragma Solidity Caret Numero Numero P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= Pragma Solidity Numero Numero P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

