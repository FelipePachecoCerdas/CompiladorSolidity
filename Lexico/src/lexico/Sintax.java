
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Jul 25 12:06:20 CST 2020
//----------------------------------------------------

package lexico;

import java_cup.runtime.Symbol;
import java.util.Stack;
import java.util.ArrayList;
import java.util.Iterator;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sat Jul 25 12:06:20 CST 2020
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01a8\000\002\002\004\000\002\002\010\000\002\002" +
    "\011\000\002\002\005\000\002\003\007\000\002\003\010" +
    "\000\002\003\011\000\002\003\011\000\002\003\011\000" +
    "\002\003\012\000\002\003\012\000\002\003\012\000\002" +
    "\003\013\000\002\003\010\000\002\003\011\000\002\003" +
    "\011\000\002\003\012\000\002\003\010\000\002\003\011" +
    "\000\002\003\010\000\002\003\006\000\002\003\007\000" +
    "\002\003\010\000\002\003\010\000\002\003\010\000\002" +
    "\003\011\000\002\003\011\000\002\003\011\000\002\003" +
    "\012\000\002\003\007\000\002\003\010\000\002\003\010" +
    "\000\002\003\011\000\002\003\007\000\002\003\010\000" +
    "\002\003\007\000\002\003\007\000\002\003\010\000\002" +
    "\003\011\000\002\003\011\000\002\003\011\000\002\003" +
    "\012\000\002\003\012\000\002\003\012\000\002\003\013" +
    "\000\002\003\010\000\002\003\011\000\002\003\011\000" +
    "\002\003\012\000\002\003\010\000\002\003\011\000\002" +
    "\003\010\000\002\003\006\000\002\003\007\000\002\003" +
    "\010\000\002\003\010\000\002\003\010\000\002\003\011" +
    "\000\002\003\011\000\002\003\011\000\002\003\012\000" +
    "\002\003\007\000\002\003\010\000\002\003\010\000\002" +
    "\003\011\000\002\003\007\000\002\003\010\000\002\003" +
    "\007\000\002\022\010\000\002\022\007\000\002\022\007" +
    "\000\002\022\006\000\002\022\010\000\002\022\007\000" +
    "\002\022\010\000\002\022\007\000\002\022\007\000\002" +
    "\022\006\000\002\022\007\000\002\022\006\000\002\010" +
    "\005\000\002\010\003\000\002\023\007\000\002\023\006" +
    "\000\002\023\011\000\002\023\010\000\002\023\010\000" +
    "\002\023\007\000\002\023\012\000\002\023\011\000\002" +
    "\023\006\000\002\023\005\000\002\023\010\000\002\023" +
    "\007\000\002\023\007\000\002\023\006\000\002\023\011" +
    "\000\002\023\010\000\002\023\007\000\002\023\006\000" +
    "\002\023\011\000\002\023\010\000\002\023\010\000\002" +
    "\023\007\000\002\023\012\000\002\023\011\000\002\023" +
    "\006\000\002\023\005\000\002\023\010\000\002\023\007" +
    "\000\002\023\007\000\002\023\006\000\002\023\011\000" +
    "\002\023\010\000\002\023\011\000\002\023\010\000\002" +
    "\023\012\000\002\023\011\000\002\023\010\000\002\023" +
    "\007\000\002\023\011\000\002\023\010\000\002\023\011" +
    "\000\002\023\010\000\002\023\012\000\002\023\011\000" +
    "\002\023\010\000\002\023\007\000\002\023\011\000\002" +
    "\023\010\000\002\023\011\000\002\023\010\000\002\023" +
    "\012\000\002\023\011\000\002\023\010\000\002\023\007" +
    "\000\002\023\011\000\002\023\010\000\002\023\007\000" +
    "\002\023\006\000\002\023\011\000\002\023\010\000\002" +
    "\023\010\000\002\023\007\000\002\023\012\000\002\023" +
    "\011\000\002\023\006\000\002\023\005\000\002\023\010" +
    "\000\002\023\007\000\002\023\007\000\002\023\006\000" +
    "\002\023\011\000\002\023\010\000\002\023\006\000\002" +
    "\023\005\000\002\023\010\000\002\023\007\000\002\023" +
    "\010\000\002\023\007\000\002\023\012\000\002\023\011" +
    "\000\002\023\005\000\002\023\004\000\002\023\007\000" +
    "\002\023\006\000\002\023\007\000\002\023\006\000\002" +
    "\023\011\000\002\023\010\000\002\023\010\000\002\023" +
    "\010\000\002\023\006\000\002\023\007\000\002\023\012" +
    "\000\002\023\012\000\002\023\010\000\002\023\011\000" +
    "\002\023\007\000\002\023\007\000\002\023\006\000\002" +
    "\023\011\000\002\023\011\000\002\023\007\000\002\023" +
    "\010\000\002\024\004\000\002\025\010\000\002\025\007" +
    "\000\002\025\007\000\002\025\006\000\002\025\010\000" +
    "\002\025\007\000\002\025\007\000\002\025\006\000\002" +
    "\025\010\000\002\025\007\000\002\025\007\000\002\025" +
    "\006\000\002\025\010\000\002\025\007\000\002\025\007" +
    "\000\002\025\006\000\002\025\007\000\002\025\006\000" +
    "\002\025\006\000\002\025\005\000\002\025\010\000\002" +
    "\025\006\000\002\025\007\000\002\025\010\000\002\025" +
    "\007\000\002\025\007\000\002\025\006\000\002\025\005" +
    "\000\002\033\007\000\002\033\006\000\002\033\006\000" +
    "\002\033\005\000\002\033\006\000\002\033\005\000\002" +
    "\033\005\000\002\033\004\000\002\033\005\000\002\033" +
    "\006\000\002\033\006\000\002\033\007\000\002\033\004" +
    "\000\002\033\005\000\002\033\005\000\002\033\006\000" +
    "\002\033\005\000\002\033\006\000\002\033\006\000\002" +
    "\033\007\000\002\033\005\000\002\033\005\000\002\033" +
    "\006\000\002\033\005\000\002\033\006\000\002\033\006" +
    "\000\002\033\007\000\002\033\004\000\002\033\004\000" +
    "\002\033\005\000\002\027\011\000\002\027\012\000\002" +
    "\027\011\000\002\027\010\000\002\027\010\000\002\027" +
    "\011\000\002\027\010\000\002\027\007\000\002\027\011" +
    "\000\002\027\012\000\002\027\011\000\002\027\010\000" +
    "\002\027\010\000\002\027\011\000\002\027\010\000\002" +
    "\027\007\000\002\027\011\000\002\027\012\000\002\027" +
    "\011\000\002\027\010\000\002\027\010\000\002\027\011" +
    "\000\002\027\010\000\002\027\007\000\002\027\011\000" +
    "\002\027\012\000\002\027\011\000\002\027\010\000\002" +
    "\027\010\000\002\027\011\000\002\027\010\000\002\027" +
    "\007\000\002\027\011\000\002\027\012\000\002\027\011" +
    "\000\002\027\010\000\002\027\010\000\002\027\011\000" +
    "\002\027\010\000\002\027\007\000\002\027\011\000\002" +
    "\027\012\000\002\027\011\000\002\027\010\000\002\027" +
    "\010\000\002\027\011\000\002\027\010\000\002\027\007" +
    "\000\002\027\011\000\002\027\012\000\002\027\011\000" +
    "\002\027\007\000\002\027\010\000\002\027\011\000\002" +
    "\027\010\000\002\027\011\000\002\027\012\000\002\027" +
    "\011\000\002\027\007\000\002\027\010\000\002\027\011" +
    "\000\002\027\010\000\002\031\007\000\002\031\005\000" +
    "\002\031\007\000\002\031\007\000\002\031\007\000\002" +
    "\031\007\000\002\031\007\000\002\031\006\000\002\031" +
    "\007\000\002\031\007\000\002\031\006\000\002\031\005" +
    "\000\002\031\005\000\002\031\006\000\002\031\006\000" +
    "\002\011\006\000\002\011\004\000\002\011\006\000\002" +
    "\011\005\000\002\011\004\000\002\011\006\000\002\011" +
    "\004\000\002\011\003\000\002\030\004\000\002\030\004" +
    "\000\002\030\003\000\002\030\003\000\002\032\005\000" +
    "\002\032\004\000\002\032\004\000\002\032\003\000\002" +
    "\026\005\000\002\026\006\000\002\026\003\000\002\026" +
    "\005\000\002\026\006\000\002\026\003\000\002\041\005" +
    "\000\002\041\003\000\002\034\005\000\002\034\005\000" +
    "\002\035\005\000\002\035\006\000\002\044\003\000\002" +
    "\044\003\000\002\036\005\000\002\036\003\000\002\045" +
    "\003\000\002\045\003\000\002\045\003\000\002\037\005" +
    "\000\002\037\005\000\002\037\003\000\002\043\005\000" +
    "\002\043\004\000\002\043\003\000\002\043\003\000\002" +
    "\043\003\000\002\043\003\000\002\012\003\000\002\012" +
    "\003\000\002\012\003\000\002\013\003\000\002\013\003" +
    "\000\002\013\003\000\002\040\003\000\002\040\003\000" +
    "\002\040\003\000\002\040\003\000\002\040\003\000\002" +
    "\040\005\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\004" +
    "\000\002\020\004\000\002\020\005\000\002\042\005\000" +
    "\002\042\004\000\002\042\004\000\002\042\003\000\002" +
    "\004\011\000\002\006\011\000\002\006\010\000\002\006" +
    "\010\000\002\006\007\000\002\006\011\000\002\006\010" +
    "\000\002\017\003\000\002\007\015\000\002\007\014\000" +
    "\002\007\014\000\002\007\013\000\002\007\014\000\002" +
    "\007\013\000\002\007\013\000\002\007\012\000\002\014" +
    "\011\000\002\014\010\000\002\014\010\000\002\014\007" +
    "\000\002\014\011\000\002\014\010\000\002\015\013\000" +
    "\002\015\012\000\002\015\013\000\002\015\012\000\002" +
    "\015\010\000\002\015\007\000\002\016\011\000\002\016" +
    "\010\000\002\016\010\000\002\016\007\000\002\016\011" +
    "\000\002\016\010\000\002\021\007" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02a0\000\004\042\004\001\002\000\006\003\007\043" +
    "\010\001\002\000\004\002\006\001\002\000\004\002\001" +
    "\001\002\000\004\040\016\001\002\000\006\037\011\050" +
    "\012\001\002\000\004\037\u029f\001\002\000\004\037\013" +
    "\001\002\000\004\037\014\001\002\000\004\032\015\001" +
    "\002\000\004\040\016\001\002\000\006\003\020\033\021" +
    "\001\002\000\004\002\uffff\001\002\000\004\025\u026f\001" +
    "\002\000\004\025\022\001\002\000\014\006\026\026\032" +
    "\041\030\044\031\045\023\001\002\000\006\003\u013c\033" +
    "\u013d\001\002\000\006\026\u0137\045\023\001\002\000\012" +
    "\006\026\026\u0120\044\031\045\023\001\002\000\012\003" +
    "\147\027\150\033\112\061\146\001\002\000\010\026\133" +
    "\044\031\045\023\001\002\000\006\003\104\033\105\001" +
    "\002\000\006\003\037\033\040\001\002\000\006\002\uffed" +
    "\040\016\001\002\000\004\026\034\001\002\000\006\002" +
    "\uffde\040\016\001\002\000\004\002\uffee\001\002\000\004" +
    "\002\ufffd\001\002\000\012\006\026\025\065\026\064\044" +
    "\031\001\002\000\006\003\042\025\041\001\002\000\010" +
    "\003\054\006\026\026\053\001\002\000\010\006\026\026" +
    "\043\044\031\001\002\000\010\026\uff3c\044\031\045\uff3c" +
    "\001\002\000\006\026\uff32\045\uff32\001\002\000\006\003" +
    "\047\026\046\001\002\000\010\026\uff3d\044\031\045\uff3d" +
    "\001\002\000\010\026\uff31\044\031\045\uff31\001\002\000" +
    "\006\026\uff33\045\uff33\001\002\000\006\026\uff3f\045\uff3f" +
    "\001\002\000\006\026\uff3e\045\uff3e\001\002\000\010\026" +
    "\uff44\044\031\045\uff44\001\002\000\010\026\uff38\044\031" +
    "\045\uff38\001\002\000\006\003\057\026\056\001\002\000" +
    "\010\026\uff45\044\031\045\uff45\001\002\000\010\026\uff39" +
    "\044\031\045\uff39\001\002\000\006\026\uff3b\045\uff3b\001" +
    "\002\000\006\026\uff47\045\uff47\001\002\000\006\026\uff3a" +
    "\045\uff3a\001\002\000\006\026\uff46\045\uff46\001\002\000" +
    "\010\026\uff34\044\031\045\uff34\001\002\000\010\003\073" +
    "\006\026\026\072\001\002\000\006\026\uff2c\045\uff2c\001" +
    "\002\000\004\026\070\001\002\000\010\026\uff35\044\031" +
    "\045\uff35\001\002\000\006\026\uff37\045\uff37\001\002\000" +
    "\010\026\uff40\044\031\045\uff40\001\002\000\010\026\uff2d" +
    "\044\031\045\uff2d\001\002\000\006\003\076\026\075\001" +
    "\002\000\010\026\uff41\044\031\045\uff41\001\002\000\010" +
    "\026\uff2e\044\031\045\uff2e\001\002\000\006\026\uff30\045" +
    "\uff30\001\002\000\006\026\uff43\045\uff43\001\002\000\006" +
    "\026\uff2f\045\uff2f\001\002\000\006\026\uff42\045\uff42\001" +
    "\002\000\006\026\uff36\045\uff36\001\002\000\004\025\125" +
    "\001\002\000\006\003\107\025\106\001\002\000\006\026" +
    "\120\033\112\001\002\000\006\026\110\033\112\001\002" +
    "\000\014\006\uffb2\026\uffb2\041\030\044\uffb2\045\uffb2\001" +
    "\002\000\004\026\115\001\002\000\014\003\uffb0\016\uffb0" +
    "\026\uffb0\032\uffb0\047\113\001\002\000\004\033\112\001" +
    "\002\000\012\003\uffb1\016\uffb1\026\uffb1\032\uffb1\001\002" +
    "\000\014\006\uffb3\026\uffb3\041\030\044\uffb3\045\uffb3\001" +
    "\002\000\012\006\uffb7\026\uffb7\044\uffb7\045\uffb7\001\002" +
    "\000\012\006\uffb6\026\uffb6\044\uffb6\045\uffb6\001\002\000" +
    "\014\006\uffba\026\uffba\041\030\044\uffba\045\uffba\001\002" +
    "\000\004\026\122\001\002\000\014\006\uffbb\026\uffbb\041" +
    "\030\044\uffbb\045\uffbb\001\002\000\012\006\uffbd\026\uffbd" +
    "\044\uffbd\045\uffbd\001\002\000\012\006\uffbc\026\uffbc\044" +
    "\uffbc\045\uffbc\001\002\000\006\026\126\033\112\001\002" +
    "\000\014\006\uffb4\026\uffb4\041\030\044\uffb4\045\uffb4\001" +
    "\002\000\004\026\130\001\002\000\014\006\uffb5\026\uffb5" +
    "\041\030\044\uffb5\045\uffb5\001\002\000\012\006\uffb9\026" +
    "\uffb9\044\uffb9\045\uffb9\001\002\000\012\006\uffb8\026\uffb8" +
    "\044\uffb8\045\uffb8\001\002\000\006\002\uffe4\040\016\001" +
    "\002\000\006\026\140\045\023\001\002\000\004\026\136" +
    "\001\002\000\006\002\uffe2\040\016\001\002\000\004\002" +
    "\ufff2\001\002\000\006\002\uffe3\040\016\001\002\000\004" +
    "\026\142\001\002\000\006\002\uffe1\040\016\001\002\000" +
    "\004\002\ufff1\001\002\000\004\002\ufff3\001\002\000\004" +
    "\002\ufff4\001\002\000\006\003\u010d\033\112\001\002\000" +
    "\056\003\uff5e\006\026\010\uff5e\012\uff5e\013\uff5e\014\uff5e" +
    "\016\155\022\uff5e\023\uff5e\026\uff5e\030\347\032\346\033" +
    "\uff5e\034\uff5e\035\uff5e\036\uff5e\037\uff5e\044\uff5e\045\uff5e" +
    "\052\uff5e\055\uff5e\056\uff5e\001\002\000\006\003\246\030" +
    "\247\001\002\000\010\003\153\016\155\032\154\001\002" +
    "\000\006\003\242\032\243\001\002\000\050\003\uff6e\006" +
    "\026\010\uff6e\012\uff6e\013\uff6e\014\uff6e\022\uff6e\023\uff6e" +
    "\026\uff6e\033\uff6e\034\uff6e\035\uff6e\036\uff6e\037\uff6e\044" +
    "\uff6e\045\uff6e\052\uff6e\055\uff6e\056\uff6e\001\002\000\050" +
    "\003\uffa6\006\026\010\uffa6\012\uffa6\013\uffa6\014\uffa6\022" +
    "\uffa6\023\uffa6\026\uffa6\033\uffa6\034\uffa6\035\uffa6\036\uffa6" +
    "\037\uffa6\044\uffa6\045\uffa6\052\uffa6\055\uffa6\056\uffa6\001" +
    "\002\000\024\022\163\023\164\033\167\034\176\035\161" +
    "\036\162\037\174\052\157\055\172\001\002\000\024\003" +
    "\ufe97\015\ufe97\017\ufe97\024\ufe97\032\ufe97\034\ufe97\035\ufe97" +
    "\047\ufe97\060\ufe97\001\002\000\034\003\ufeae\015\ufeae\016" +
    "\ufeae\017\ufeae\021\ufeae\023\234\024\ufeae\032\ufeae\034\ufeae" +
    "\035\ufeae\047\ufeae\051\ufeae\060\ufeae\001\002\000\030\003" +
    "\ufe96\015\ufe96\016\210\017\ufe96\021\207\024\ufe96\032\ufe96" +
    "\034\ufe96\035\ufe96\047\ufe96\060\ufe96\001\002\000\024\022" +
    "\ufe90\023\ufe90\033\ufe90\034\ufe90\035\ufe90\036\ufe90\037\ufe90" +
    "\052\ufe90\055\ufe90\001\002\000\024\022\ufe8f\023\ufe8f\033" +
    "\ufe8f\034\ufe8f\035\ufe8f\036\ufe8f\037\ufe8f\052\ufe8f\055\ufe8f" +
    "\001\002\000\030\003\ufe9e\015\ufe9e\016\ufe9e\017\ufe9e\021" +
    "\ufe9e\024\ufe9e\032\ufe9e\034\ufe9e\035\ufe9e\047\ufe9e\060\ufe9e" +
    "\001\002\000\024\022\163\023\164\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\055\172\001\002\000\024" +
    "\022\163\023\164\033\167\034\176\035\161\036\162\037" +
    "\174\052\157\055\172\001\002\000\032\003\ufea9\015\ufea9" +
    "\016\ufea9\017\ufea9\021\ufea9\024\ufea9\032\ufea9\034\ufea9\035" +
    "\ufea9\047\ufea9\051\221\060\ufea9\001\002\000\034\003\ufeab" +
    "\015\ufeab\016\ufeab\017\ufeab\021\ufeab\023\212\024\ufeab\032" +
    "\ufeab\034\ufeab\035\ufeab\047\ufeab\051\ufeab\060\ufeab\001\002" +
    "\000\024\003\ufe98\015\ufe98\017\ufe98\024\ufe98\032\ufe98\034" +
    "\ufe98\035\ufe98\047\ufe98\060\ufe98\001\002\000\030\003\ufe95" +
    "\015\ufe95\016\210\017\ufe95\021\207\024\ufe95\032\ufe95\034" +
    "\ufe95\035\ufe95\047\ufe95\060\ufe95\001\002\000\030\003\ufe9f" +
    "\015\ufe9f\016\ufe9f\017\ufe9f\021\ufe9f\024\ufe9f\032\ufe9f\034" +
    "\ufe9f\035\ufe9f\047\ufe9f\060\ufe9f\001\002\000\024\003\ufe9b" +
    "\015\ufe9b\017\ufe9b\024\ufe9b\032\ufe9b\034\ufe9b\035\ufe9b\047" +
    "\ufe9b\060\ufe9b\001\002\000\030\003\ufea0\015\ufea0\016\ufea0" +
    "\017\ufea0\021\ufea0\024\ufea0\032\ufea0\034\ufea0\035\ufea0\047" +
    "\ufea0\060\ufea0\001\002\000\016\003\uff48\017\202\032\uff48" +
    "\034\200\035\201\060\203\001\002\000\024\022\ufe91\023" +
    "\ufe91\033\ufe91\034\ufe91\035\ufe91\036\ufe91\037\ufe91\052\ufe91" +
    "\055\ufe91\001\002\000\024\022\163\023\164\033\167\034" +
    "\176\035\161\036\162\037\174\052\157\055\172\001\002" +
    "\000\024\022\ufe93\023\ufe93\033\ufe93\034\ufe93\035\ufe93\036" +
    "\ufe93\037\ufe93\052\ufe93\055\ufe93\001\002\000\024\022\ufe92" +
    "\023\ufe92\033\ufe92\034\ufe92\035\ufe92\036\ufe92\037\ufe92\052" +
    "\ufe92\055\ufe92\001\002\000\024\022\163\023\164\033\167" +
    "\034\176\035\161\036\162\037\174\052\157\055\172\001" +
    "\002\000\024\022\ufe94\023\ufe94\033\ufe94\034\ufe94\035\ufe94" +
    "\036\ufe94\037\ufe94\052\ufe94\055\ufe94\001\002\000\024\003" +
    "\ufe9c\015\ufe9c\017\ufe9c\024\ufe9c\032\ufe9c\034\ufe9c\035\ufe9c" +
    "\047\ufe9c\060\ufe9c\001\002\000\024\003\ufe9d\015\ufe9d\017" +
    "\ufe9d\024\ufe9d\032\ufe9d\034\ufe9d\035\ufe9d\047\ufe9d\060\ufe9d" +
    "\001\002\000\024\022\163\023\164\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\055\172\001\002\000\024" +
    "\022\ufea4\023\ufea4\033\ufea4\034\ufea4\035\ufea4\036\ufea4\037" +
    "\ufea4\052\ufea4\055\ufea4\001\002\000\024\022\ufea3\023\ufea3" +
    "\033\ufea3\034\ufea3\035\ufea3\036\ufea3\037\ufea3\052\ufea3\055" +
    "\ufea3\001\002\000\024\003\ufea8\015\ufea8\017\ufea8\024\ufea8" +
    "\032\ufea8\034\ufea8\035\ufea8\047\ufea8\060\ufea8\001\002\000" +
    "\026\022\163\023\164\024\213\033\167\034\176\035\161" +
    "\036\162\037\174\052\157\055\172\001\002\000\032\003" +
    "\ufead\015\ufead\016\ufead\017\ufead\021\ufead\024\ufead\032\ufead" +
    "\034\ufead\035\ufead\047\ufead\051\ufead\060\ufead\001\002\000" +
    "\004\024\220\001\002\000\016\017\202\024\ufea1\034\200" +
    "\035\201\047\216\060\203\001\002\000\024\022\163\023" +
    "\164\033\167\034\176\035\161\036\162\037\174\052\157" +
    "\055\172\001\002\000\004\024\ufea2\001\002\000\032\003" +
    "\ufeac\015\ufeac\016\ufeac\017\ufeac\021\ufeac\024\ufeac\032\ufeac" +
    "\034\ufeac\035\ufeac\047\ufeac\051\ufeac\060\ufeac\001\002\000" +
    "\006\033\167\052\157\001\002\000\030\003\ufeaa\015\ufeaa" +
    "\016\ufeaa\017\ufeaa\021\ufeaa\024\ufeaa\032\ufeaa\034\ufeaa\035" +
    "\ufeaa\047\ufeaa\060\ufeaa\001\002\000\024\003\ufe99\015\ufe99" +
    "\017\ufe99\024\ufe99\032\ufe99\034\ufe99\035\ufe99\047\ufe99\060" +
    "\ufe99\001\002\000\014\017\202\024\225\034\200\035\201" +
    "\060\203\001\002\000\026\003\ufe9a\015\ufe9a\017\ufe9a\024" +
    "\ufe9a\032\ufe9a\034\ufe9a\035\ufe9a\047\ufe9a\060\ufe9a\062\226" +
    "\001\002\000\024\022\163\023\164\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\055\172\001\002\000\014" +
    "\015\230\017\202\034\200\035\201\060\203\001\002\000" +
    "\024\022\163\023\164\033\167\034\176\035\161\036\162" +
    "\037\174\052\157\055\172\001\002\000\024\003\ufe7c\015" +
    "\ufe7c\017\ufe7c\024\ufe7c\032\ufe7c\034\ufe7c\035\ufe7c\047\ufe7c" +
    "\060\ufe7c\001\002\000\024\022\163\023\164\033\167\034" +
    "\176\035\161\036\162\037\174\052\157\055\172\001\002" +
    "\000\024\003\ufea7\015\ufea7\017\ufea7\024\ufea7\032\ufea7\034" +
    "\ufea7\035\ufea7\047\ufea7\060\ufea7\001\002\000\026\022\163" +
    "\023\164\024\235\033\167\034\176\035\161\036\162\037" +
    "\174\052\157\055\172\001\002\000\032\003\ufeb0\015\ufeb0" +
    "\016\ufeb0\017\ufeb0\021\ufeb0\024\ufeb0\032\ufeb0\034\ufeb0\035" +
    "\ufeb0\047\ufeb0\051\ufeb0\060\ufeb0\001\002\000\004\024\237" +
    "\001\002\000\032\003\ufeaf\015\ufeaf\016\ufeaf\017\ufeaf\021" +
    "\ufeaf\024\ufeaf\032\ufeaf\034\ufeaf\035\ufeaf\047\ufeaf\051\ufeaf" +
    "\060\ufeaf\001\002\000\046\003\uffae\010\uffae\012\uffae\013" +
    "\uffae\014\uffae\022\uffae\023\uffae\026\uffae\033\uffae\034\uffae" +
    "\035\uffae\036\uffae\037\uffae\044\uffae\045\uffae\052\uffae\055" +
    "\uffae\056\uffae\001\002\000\046\003\uff76\010\uff76\012\uff76" +
    "\013\uff76\014\uff76\022\uff76\023\uff76\026\uff76\033\uff76\034" +
    "\uff76\035\uff76\036\uff76\037\uff76\044\uff76\045\uff76\052\uff76" +
    "\055\uff76\056\uff76\001\002\000\050\003\uff6a\006\026\010" +
    "\uff6a\012\uff6a\013\uff6a\014\uff6a\022\uff6a\023\uff6a\026\uff6a" +
    "\033\uff6a\034\uff6a\035\uff6a\036\uff6a\037\uff6a\044\uff6a\045" +
    "\uff6a\052\uff6a\055\uff6a\056\uff6a\001\002\000\050\003\uffa2" +
    "\006\026\010\uffa2\012\uffa2\013\uffa2\014\uffa2\022\uffa2\023" +
    "\uffa2\026\uffa2\033\uffa2\034\uffa2\035\uffa2\036\uffa2\037\uffa2" +
    "\044\uffa2\045\uffa2\052\uffa2\055\uffa2\056\uffa2\001\002\000" +
    "\046\003\uffaa\010\uffaa\012\uffaa\013\uffaa\014\uffaa\022\uffaa" +
    "\023\uffaa\026\uffaa\033\uffaa\034\uffaa\035\uffaa\036\uffaa\037" +
    "\uffaa\044\uffaa\045\uffaa\052\uffaa\055\uffaa\056\uffaa\001\002" +
    "\000\046\003\uff72\010\uff72\012\uff72\013\uff72\014\uff72\022" +
    "\uff72\023\uff72\026\uff72\033\uff72\034\uff72\035\uff72\036\uff72" +
    "\037\uff72\044\uff72\045\uff72\052\uff72\055\uff72\056\uff72\001" +
    "\002\000\012\006\026\016\155\033\112\061\320\001\002" +
    "\000\010\003\251\033\112\061\250\001\002\000\006\003" +
    "\274\033\112\001\002\000\054\003\uff5c\006\026\010\uff5c" +
    "\012\uff5c\013\uff5c\014\uff5c\016\155\022\uff5c\023\uff5c\026" +
    "\uff5c\032\265\033\uff5c\034\uff5c\035\uff5c\036\uff5c\037\uff5c" +
    "\044\uff5c\045\uff5c\052\uff5c\055\uff5c\056\uff5c\001\002\000" +
    "\010\003\254\016\155\032\255\001\002\000\006\003\260" +
    "\032\261\001\002\000\050\003\uff6c\006\026\010\uff6c\012" +
    "\uff6c\013\uff6c\014\uff6c\022\uff6c\023\uff6c\026\uff6c\033\uff6c" +
    "\034\uff6c\035\uff6c\036\uff6c\037\uff6c\044\uff6c\045\uff6c\052" +
    "\uff6c\055\uff6c\056\uff6c\001\002\000\050\003\uffa4\006\026" +
    "\010\uffa4\012\uffa4\013\uffa4\014\uffa4\022\uffa4\023\uffa4\026" +
    "\uffa4\033\uffa4\034\uffa4\035\uffa4\036\uffa4\037\uffa4\044\uffa4" +
    "\045\uffa4\052\uffa4\055\uffa4\056\uffa4\001\002\000\046\003" +
    "\uffac\010\uffac\012\uffac\013\uffac\014\uffac\022\uffac\023\uffac" +
    "\026\uffac\033\uffac\034\uffac\035\uffac\036\uffac\037\uffac\044" +
    "\uffac\045\uffac\052\uffac\055\uffac\056\uffac\001\002\000\046" +
    "\003\uff74\010\uff74\012\uff74\013\uff74\014\uff74\022\uff74\023" +
    "\uff74\026\uff74\033\uff74\034\uff74\035\uff74\036\uff74\037\uff74" +
    "\044\uff74\045\uff74\052\uff74\055\uff74\056\uff74\001\002\000" +
    "\050\003\uff68\006\026\010\uff68\012\uff68\013\uff68\014\uff68" +
    "\022\uff68\023\uff68\026\uff68\033\uff68\034\uff68\035\uff68\036" +
    "\uff68\037\uff68\044\uff68\045\uff68\052\uff68\055\uff68\056\uff68" +
    "\001\002\000\050\003\uffa0\006\026\010\uffa0\012\uffa0\013" +
    "\uffa0\014\uffa0\022\uffa0\023\uffa0\026\uffa0\033\uffa0\034\uffa0" +
    "\035\uffa0\036\uffa0\037\uffa0\044\uffa0\045\uffa0\052\uffa0\055" +
    "\uffa0\056\uffa0\001\002\000\046\003\uffa8\010\uffa8\012\uffa8" +
    "\013\uffa8\014\uffa8\022\uffa8\023\uffa8\026\uffa8\033\uffa8\034" +
    "\uffa8\035\uffa8\036\uffa8\037\uffa8\044\uffa8\045\uffa8\052\uffa8" +
    "\055\uffa8\056\uffa8\001\002\000\046\003\uff70\010\uff70\012" +
    "\uff70\013\uff70\014\uff70\022\uff70\023\uff70\026\uff70\033\uff70" +
    "\034\uff70\035\uff70\036\uff70\037\uff70\044\uff70\045\uff70\052" +
    "\uff70\055\uff70\056\uff70\001\002\000\006\003\271\032\270" +
    "\001\002\000\050\003\uff94\006\026\010\uff94\012\uff94\013" +
    "\uff94\014\uff94\022\uff94\023\uff94\026\uff94\033\uff94\034\uff94" +
    "\035\uff94\036\uff94\037\uff94\044\uff94\045\uff94\052\uff94\055" +
    "\uff94\056\uff94\001\002\000\046\003\uff64\010\uff64\012\uff64" +
    "\013\uff64\014\uff64\022\uff64\023\uff64\026\uff64\033\uff64\034" +
    "\uff64\035\uff64\036\uff64\037\uff64\044\uff64\045\uff64\052\uff64" +
    "\055\uff64\056\uff64\001\002\000\046\003\uff9c\010\uff9c\012" +
    "\uff9c\013\uff9c\014\uff9c\022\uff9c\023\uff9c\026\uff9c\033\uff9c" +
    "\034\uff9c\035\uff9c\036\uff9c\037\uff9c\044\uff9c\045\uff9c\052" +
    "\uff9c\055\uff9c\056\uff9c\001\002\000\050\003\uff90\006\026" +
    "\010\uff90\012\uff90\013\uff90\014\uff90\022\uff90\023\uff90\026" +
    "\uff90\033\uff90\034\uff90\035\uff90\036\uff90\037\uff90\044\uff90" +
    "\045\uff90\052\uff90\055\uff90\056\uff90\001\002\000\050\003" +
    "\uff58\006\026\010\uff58\012\uff58\013\uff58\014\uff58\022\uff58" +
    "\023\uff58\026\uff58\033\uff58\034\uff58\035\uff58\036\uff58\037" +
    "\uff58\044\uff58\045\uff58\052\uff58\055\uff58\056\uff58\001\002" +
    "\000\046\003\uff60\010\uff60\012\uff60\013\uff60\014\uff60\022" +
    "\uff60\023\uff60\026\uff60\033\uff60\034\uff60\035\uff60\036\uff60" +
    "\037\uff60\044\uff60\045\uff60\052\uff60\055\uff60\056\uff60\001" +
    "\002\000\046\003\uff98\010\uff98\012\uff98\013\uff98\014\uff98" +
    "\022\uff98\023\uff98\026\uff98\033\uff98\034\uff98\035\uff98\036" +
    "\uff98\037\uff98\044\uff98\045\uff98\052\uff98\055\uff98\056\uff98" +
    "\001\002\000\054\003\uff5d\006\026\010\uff5d\012\uff5d\013" +
    "\uff5d\014\uff5d\016\155\022\uff5d\023\uff5d\026\uff5d\032\310" +
    "\033\uff5d\034\uff5d\035\uff5d\036\uff5d\037\uff5d\044\uff5d\045" +
    "\uff5d\052\uff5d\055\uff5d\056\uff5d\001\002\000\010\003\300" +
    "\016\155\032\277\001\002\000\006\003\304\032\303\001" +
    "\002\000\050\003\uffa5\006\026\010\uffa5\012\uffa5\013\uffa5" +
    "\014\uffa5\022\uffa5\023\uffa5\026\uffa5\033\uffa5\034\uffa5\035" +
    "\uffa5\036\uffa5\037\uffa5\044\uffa5\045\uffa5\052\uffa5\055\uffa5" +
    "\056\uffa5\001\002\000\050\003\uff6d\006\026\010\uff6d\012" +
    "\uff6d\013\uff6d\014\uff6d\022\uff6d\023\uff6d\026\uff6d\033\uff6d" +
    "\034\uff6d\035\uff6d\036\uff6d\037\uff6d\044\uff6d\045\uff6d\052" +
    "\uff6d\055\uff6d\056\uff6d\001\002\000\046\003\uff75\010\uff75" +
    "\012\uff75\013\uff75\014\uff75\022\uff75\023\uff75\026\uff75\033" +
    "\uff75\034\uff75\035\uff75\036\uff75\037\uff75\044\uff75\045\uff75" +
    "\052\uff75\055\uff75\056\uff75\001\002\000\046\003\uffad\010" +
    "\uffad\012\uffad\013\uffad\014\uffad\022\uffad\023\uffad\026\uffad" +
    "\033\uffad\034\uffad\035\uffad\036\uffad\037\uffad\044\uffad\045" +
    "\uffad\052\uffad\055\uffad\056\uffad\001\002\000\050\003\uffa1" +
    "\006\026\010\uffa1\012\uffa1\013\uffa1\014\uffa1\022\uffa1\023" +
    "\uffa1\026\uffa1\033\uffa1\034\uffa1\035\uffa1\036\uffa1\037\uffa1" +
    "\044\uffa1\045\uffa1\052\uffa1\055\uffa1\056\uffa1\001\002\000" +
    "\050\003\uff69\006\026\010\uff69\012\uff69\013\uff69\014\uff69" +
    "\022\uff69\023\uff69\026\uff69\033\uff69\034\uff69\035\uff69\036" +
    "\uff69\037\uff69\044\uff69\045\uff69\052\uff69\055\uff69\056\uff69" +
    "\001\002\000\046\003\uff71\010\uff71\012\uff71\013\uff71\014" +
    "\uff71\022\uff71\023\uff71\026\uff71\033\uff71\034\uff71\035\uff71" +
    "\036\uff71\037\uff71\044\uff71\045\uff71\052\uff71\055\uff71\056" +
    "\uff71\001\002\000\046\003\uffa9\010\uffa9\012\uffa9\013\uffa9" +
    "\014\uffa9\022\uffa9\023\uffa9\026\uffa9\033\uffa9\034\uffa9\035" +
    "\uffa9\036\uffa9\037\uffa9\044\uffa9\045\uffa9\052\uffa9\055\uffa9" +
    "\056\uffa9\001\002\000\006\003\314\032\313\001\002\000" +
    "\050\003\uff95\006\026\010\uff95\012\uff95\013\uff95\014\uff95" +
    "\022\uff95\023\uff95\026\uff95\033\uff95\034\uff95\035\uff95\036" +
    "\uff95\037\uff95\044\uff95\045\uff95\052\uff95\055\uff95\056\uff95" +
    "\001\002\000\046\003\uff65\010\uff65\012\uff65\013\uff65\014" +
    "\uff65\022\uff65\023\uff65\026\uff65\033\uff65\034\uff65\035\uff65" +
    "\036\uff65\037\uff65\044\uff65\045\uff65\052\uff65\055\uff65\056" +
    "\uff65\001\002\000\046\003\uff9d\010\uff9d\012\uff9d\013\uff9d" +
    "\014\uff9d\022\uff9d\023\uff9d\026\uff9d\033\uff9d\034\uff9d\035" +
    "\uff9d\036\uff9d\037\uff9d\044\uff9d\045\uff9d\052\uff9d\055\uff9d" +
    "\056\uff9d\001\002\000\050\003\uff91\006\026\010\uff91\012" +
    "\uff91\013\uff91\014\uff91\022\uff91\023\uff91\026\uff91\033\uff91" +
    "\034\uff91\035\uff91\036\uff91\037\uff91\044\uff91\045\uff91\052" +
    "\uff91\055\uff91\056\uff91\001\002\000\050\003\uff59\006\026" +
    "\010\uff59\012\uff59\013\uff59\014\uff59\022\uff59\023\uff59\026" +
    "\uff59\033\uff59\034\uff59\035\uff59\036\uff59\037\uff59\044\uff59" +
    "\045\uff59\052\uff59\055\uff59\056\uff59\001\002\000\046\003" +
    "\uff61\010\uff61\012\uff61\013\uff61\014\uff61\022\uff61\023\uff61" +
    "\026\uff61\033\uff61\034\uff61\035\uff61\036\uff61\037\uff61\044" +
    "\uff61\045\uff61\052\uff61\055\uff61\056\uff61\001\002\000\046" +
    "\003\uff99\010\uff99\012\uff99\013\uff99\014\uff99\022\uff99\023" +
    "\uff99\026\uff99\033\uff99\034\uff99\035\uff99\036\uff99\037\uff99" +
    "\044\uff99\045\uff99\052\uff99\055\uff99\056\uff99\001\002\000" +
    "\004\003\343\001\002\000\006\003\330\033\112\001\002" +
    "\000\006\016\155\032\324\001\002\000\046\003\uff55\010" +
    "\uff55\012\uff55\013\uff55\014\uff55\022\uff55\023\uff55\026\uff55" +
    "\033\uff55\034\uff55\035\uff55\036\uff55\037\uff55\044\uff55\045" +
    "\uff55\052\uff55\055\uff55\056\uff55\001\002\000\004\032\326" +
    "\001\002\000\050\003\uff82\006\026\010\uff82\012\uff82\013" +
    "\uff82\014\uff82\022\uff82\023\uff82\026\uff82\033\uff82\034\uff82" +
    "\035\uff82\036\uff82\037\uff82\044\uff82\045\uff82\052\uff82\055" +
    "\uff82\056\uff82\001\002\000\046\003\uff86\010\uff86\012\uff86" +
    "\013\uff86\014\uff86\022\uff86\023\uff86\026\uff86\033\uff86\034" +
    "\uff86\035\uff86\036\uff86\037\uff86\044\uff86\045\uff86\052\uff86" +
    "\055\uff86\056\uff86\001\002\000\050\003\uff80\006\026\010" +
    "\uff80\012\uff80\013\uff80\014\uff80\022\uff80\023\uff80\026\uff80" +
    "\033\uff80\034\uff80\035\uff80\036\uff80\037\uff80\044\uff80\045" +
    "\uff80\052\uff80\055\uff80\056\uff80\001\002\000\046\003\uff84" +
    "\010\uff84\012\uff84\013\uff84\014\uff84\022\uff84\023\uff84\026" +
    "\uff84\033\uff84\034\uff84\035\uff84\036\uff84\037\uff84\044\uff84" +
    "\045\uff84\052\uff84\055\uff84\056\uff84\001\002\000\052\003" +
    "\uff4e\006\026\010\uff4e\012\uff4e\013\uff4e\014\uff4e\016\155" +
    "\022\uff4e\023\uff4e\026\uff4e\033\uff4e\034\uff4e\035\uff4e\036" +
    "\uff4e\037\uff4e\044\uff4e\045\uff4e\052\uff4e\055\uff4e\056\uff4e" +
    "\001\002\000\006\016\155\032\333\001\002\000\004\032" +
    "\335\001\002\000\050\003\uff83\006\026\010\uff83\012\uff83" +
    "\013\uff83\014\uff83\022\uff83\023\uff83\026\uff83\033\uff83\034" +
    "\uff83\035\uff83\036\uff83\037\uff83\044\uff83\045\uff83\052\uff83" +
    "\055\uff83\056\uff83\001\002\000\046\003\uff87\010\uff87\012" +
    "\uff87\013\uff87\014\uff87\022\uff87\023\uff87\026\uff87\033\uff87" +
    "\034\uff87\035\uff87\036\uff87\037\uff87\044\uff87\045\uff87\052" +
    "\uff87\055\uff87\056\uff87\001\002\000\050\003\uff81\006\026" +
    "\010\uff81\012\uff81\013\uff81\014\uff81\022\uff81\023\uff81\026" +
    "\uff81\033\uff81\034\uff81\035\uff81\036\uff81\037\uff81\044\uff81" +
    "\045\uff81\052\uff81\055\uff81\056\uff81\001\002\000\046\003" +
    "\uff85\010\uff85\012\uff85\013\uff85\014\uff85\022\uff85\023\uff85" +
    "\026\uff85\033\uff85\034\uff85\035\uff85\036\uff85\037\uff85\044" +
    "\uff85\045\uff85\052\uff85\055\uff85\056\uff85\001\002\000\004" +
    "\003\341\001\002\000\046\003\uff56\010\uff56\012\uff56\013" +
    "\uff56\014\uff56\022\uff56\023\uff56\026\uff56\033\uff56\034\uff56" +
    "\035\uff56\036\uff56\037\uff56\044\uff56\045\uff56\052\uff56\055" +
    "\uff56\056\uff56\001\002\000\050\003\uff4b\006\026\010\uff4b" +
    "\012\uff4b\013\uff4b\014\uff4b\022\uff4b\023\uff4b\026\uff4b\033" +
    "\uff4b\034\uff4b\035\uff4b\036\uff4b\037\uff4b\044\uff4b\045\uff4b" +
    "\052\uff4b\055\uff4b\056\uff4b\001\002\000\046\003\uff52\010" +
    "\uff52\012\uff52\013\uff52\014\uff52\022\uff52\023\uff52\026\uff52" +
    "\033\uff52\034\uff52\035\uff52\036\uff52\037\uff52\044\uff52\045" +
    "\uff52\052\uff52\055\uff52\056\uff52\001\002\000\050\003\uff4a" +
    "\006\026\010\uff4a\012\uff4a\013\uff4a\014\uff4a\022\uff4a\023" +
    "\uff4a\026\uff4a\033\uff4a\034\uff4a\035\uff4a\036\uff4a\037\uff4a" +
    "\044\uff4a\045\uff4a\052\uff4a\055\uff4a\056\uff4a\001\002\000" +
    "\046\003\uff51\010\uff51\012\uff51\013\uff51\014\uff51\022\uff51" +
    "\023\uff51\026\uff51\033\uff51\034\uff51\035\uff51\036\uff51\037" +
    "\uff51\044\uff51\045\uff51\052\uff51\055\uff51\056\uff51\001\002" +
    "\000\006\003\u0109\032\u010a\001\002\000\050\003\uff96\006" +
    "\026\010\uff96\012\uff96\013\uff96\014\uff96\022\uff96\023\uff96" +
    "\026\uff96\033\uff96\034\uff96\035\uff96\036\uff96\037\uff96\044" +
    "\uff96\045\uff96\052\uff96\055\uff96\056\uff96\001\002\000\010" +
    "\003\352\033\112\061\351\001\002\000\046\003\uff66\010" +
    "\uff66\012\uff66\013\uff66\014\uff66\022\uff66\023\uff66\026\uff66" +
    "\033\uff66\034\uff66\035\uff66\036\uff66\037\uff66\044\uff66\045" +
    "\uff66\052\uff66\055\uff66\056\uff66\001\002\000\006\003\371" +
    "\033\112\001\002\000\054\003\uff4d\006\026\010\uff4d\012" +
    "\uff4d\013\uff4d\014\uff4d\016\155\022\uff4d\023\uff4d\026\uff4d" +
    "\032\362\033\uff4d\034\uff4d\035\uff4d\036\uff4d\037\uff4d\044" +
    "\uff4d\045\uff4d\052\uff4d\055\uff4d\056\uff4d\001\002\000\006" +
    "\016\155\032\355\001\002\000\004\032\357\001\002\000" +
    "\050\003\uff8a\006\026\010\uff8a\012\uff8a\013\uff8a\014\uff8a" +
    "\022\uff8a\023\uff8a\026\uff8a\033\uff8a\034\uff8a\035\uff8a\036" +
    "\uff8a\037\uff8a\044\uff8a\045\uff8a\052\uff8a\055\uff8a\056\uff8a" +
    "\001\002\000\046\003\uff8e\010\uff8e\012\uff8e\013\uff8e\014" +
    "\uff8e\022\uff8e\023\uff8e\026\uff8e\033\uff8e\034\uff8e\035\uff8e" +
    "\036\uff8e\037\uff8e\044\uff8e\045\uff8e\052\uff8e\055\uff8e\056" +
    "\uff8e\001\002\000\050\003\uff88\006\026\010\uff88\012\uff88" +
    "\013\uff88\014\uff88\022\uff88\023\uff88\026\uff88\033\uff88\034" +
    "\uff88\035\uff88\036\uff88\037\uff88\044\uff88\045\uff88\052\uff88" +
    "\055\uff88\056\uff88\001\002\000\046\003\uff8c\010\uff8c\012" +
    "\uff8c\013\uff8c\014\uff8c\022\uff8c\023\uff8c\026\uff8c\033\uff8c" +
    "\034\uff8c\035\uff8c\036\uff8c\037\uff8c\044\uff8c\045\uff8c\052" +
    "\uff8c\055\uff8c\056\uff8c\001\002\000\006\003\366\032\365" +
    "\001\002\000\050\003\uff7a\006\026\010\uff7a\012\uff7a\013" +
    "\uff7a\014\uff7a\022\uff7a\023\uff7a\026\uff7a\033\uff7a\034\uff7a" +
    "\035\uff7a\036\uff7a\037\uff7a\044\uff7a\045\uff7a\052\uff7a\055" +
    "\uff7a\056\uff7a\001\002\000\046\003\uff54\010\uff54\012\uff54" +
    "\013\uff54\014\uff54\022\uff54\023\uff54\026\uff54\033\uff54\034" +
    "\uff54\035\uff54\036\uff54\037\uff54\044\uff54\045\uff54\052\uff54" +
    "\055\uff54\056\uff54\001\002\000\046\003\uff7e\010\uff7e\012" +
    "\uff7e\013\uff7e\014\uff7e\022\uff7e\023\uff7e\026\uff7e\033\uff7e" +
    "\034\uff7e\035\uff7e\036\uff7e\037\uff7e\044\uff7e\045\uff7e\052" +
    "\uff7e\055\uff7e\056\uff7e\001\002\000\050\003\uff78\006\026" +
    "\010\uff78\012\uff78\013\uff78\014\uff78\022\uff78\023\uff78\026" +
    "\uff78\033\uff78\034\uff78\035\uff78\036\uff78\037\uff78\044\uff78" +
    "\045\uff78\052\uff78\055\uff78\056\uff78\001\002\000\050\003" +
    "\uff49\006\026\010\uff49\012\uff49\013\uff49\014\uff49\022\uff49" +
    "\023\uff49\026\uff49\033\uff49\034\uff49\035\uff49\036\uff49\037" +
    "\uff49\044\uff49\045\uff49\052\uff49\055\uff49\056\uff49\001\002" +
    "\000\046\003\uff50\010\uff50\012\uff50\013\uff50\014\uff50\022" +
    "\uff50\023\uff50\026\uff50\033\uff50\034\uff50\035\uff50\036\uff50" +
    "\037\uff50\044\uff50\045\uff50\052\uff50\055\uff50\056\uff50\001" +
    "\002\000\046\003\uff7c\010\uff7c\012\uff7c\013\uff7c\014\uff7c" +
    "\022\uff7c\023\uff7c\026\uff7c\033\uff7c\034\uff7c\035\uff7c\036" +
    "\uff7c\037\uff7c\044\uff7c\045\uff7c\052\uff7c\055\uff7c\056\uff7c" +
    "\001\002\000\054\003\uff4f\006\026\010\uff4f\012\uff4f\013" +
    "\uff4f\014\uff4f\016\155\022\uff4f\023\uff4f\026\uff4f\032\u0101" +
    "\033\uff4f\034\uff4f\035\uff4f\036\uff4f\037\uff4f\044\uff4f\045" +
    "\uff4f\052\uff4f\055\uff4f\056\uff4f\001\002\000\006\016\155" +
    "\032\374\001\002\000\004\032\376\001\002\000\050\003" +
    "\uff8b\006\026\010\uff8b\012\uff8b\013\uff8b\014\uff8b\022\uff8b" +
    "\023\uff8b\026\uff8b\033\uff8b\034\uff8b\035\uff8b\036\uff8b\037" +
    "\uff8b\044\uff8b\045\uff8b\052\uff8b\055\uff8b\056\uff8b\001\002" +
    "\000\046\003\uff8f\010\uff8f\012\uff8f\013\uff8f\014\uff8f\022" +
    "\uff8f\023\uff8f\026\uff8f\033\uff8f\034\uff8f\035\uff8f\036\uff8f" +
    "\037\uff8f\044\uff8f\045\uff8f\052\uff8f\055\uff8f\056\uff8f\001" +
    "\002\000\050\003\uff89\006\026\010\uff89\012\uff89\013\uff89" +
    "\014\uff89\022\uff89\023\uff89\026\uff89\033\uff89\034\uff89\035" +
    "\uff89\036\uff89\037\uff89\044\uff89\045\uff89\052\uff89\055\uff89" +
    "\056\uff89\001\002\000\046\003\uff8d\010\uff8d\012\uff8d\013" +
    "\uff8d\014\uff8d\022\uff8d\023\uff8d\026\uff8d\033\uff8d\034\uff8d" +
    "\035\uff8d\036\uff8d\037\uff8d\044\uff8d\045\uff8d\052\uff8d\055" +
    "\uff8d\056\uff8d\001\002\000\006\003\u0105\032\u0104\001\002" +
    "\000\050\003\uff7b\006\026\010\uff7b\012\uff7b\013\uff7b\014" +
    "\uff7b\022\uff7b\023\uff7b\026\uff7b\033\uff7b\034\uff7b\035\uff7b" +
    "\036\uff7b\037\uff7b\044\uff7b\045\uff7b\052\uff7b\055\uff7b\056" +
    "\uff7b\001\002\000\046\003\uff57\010\uff57\012\uff57\013\uff57" +
    "\014\uff57\022\uff57\023\uff57\026\uff57\033\uff57\034\uff57\035" +
    "\uff57\036\uff57\037\uff57\044\uff57\045\uff57\052\uff57\055\uff57" +
    "\056\uff57\001\002\000\046\003\uff7f\010\uff7f\012\uff7f\013" +
    "\uff7f\014\uff7f\022\uff7f\023\uff7f\026\uff7f\033\uff7f\034\uff7f" +
    "\035\uff7f\036\uff7f\037\uff7f\044\uff7f\045\uff7f\052\uff7f\055" +
    "\uff7f\056\uff7f\001\002\000\050\003\uff79\006\026\010\uff79" +
    "\012\uff79\013\uff79\014\uff79\022\uff79\023\uff79\026\uff79\033" +
    "\uff79\034\uff79\035\uff79\036\uff79\037\uff79\044\uff79\045\uff79" +
    "\052\uff79\055\uff79\056\uff79\001\002\000\050\003\uff4c\006" +
    "\026\010\uff4c\012\uff4c\013\uff4c\014\uff4c\022\uff4c\023\uff4c" +
    "\026\uff4c\033\uff4c\034\uff4c\035\uff4c\036\uff4c\037\uff4c\044" +
    "\uff4c\045\uff4c\052\uff4c\055\uff4c\056\uff4c\001\002\000\046" +
    "\003\uff53\010\uff53\012\uff53\013\uff53\014\uff53\022\uff53\023" +
    "\uff53\026\uff53\033\uff53\034\uff53\035\uff53\036\uff53\037\uff53" +
    "\044\uff53\045\uff53\052\uff53\055\uff53\056\uff53\001\002\000" +
    "\046\003\uff7d\010\uff7d\012\uff7d\013\uff7d\014\uff7d\022\uff7d" +
    "\023\uff7d\026\uff7d\033\uff7d\034\uff7d\035\uff7d\036\uff7d\037" +
    "\uff7d\044\uff7d\045\uff7d\052\uff7d\055\uff7d\056\uff7d\001\002" +
    "\000\046\003\uff9e\010\uff9e\012\uff9e\013\uff9e\014\uff9e\022" +
    "\uff9e\023\uff9e\026\uff9e\033\uff9e\034\uff9e\035\uff9e\036\uff9e" +
    "\037\uff9e\044\uff9e\045\uff9e\052\uff9e\055\uff9e\056\uff9e\001" +
    "\002\000\050\003\uff5a\006\026\010\uff5a\012\uff5a\013\uff5a" +
    "\014\uff5a\022\uff5a\023\uff5a\026\uff5a\033\uff5a\034\uff5a\035" +
    "\uff5a\036\uff5a\037\uff5a\044\uff5a\045\uff5a\052\uff5a\055\uff5a" +
    "\056\uff5a\001\002\000\050\003\uff92\006\026\010\uff92\012" +
    "\uff92\013\uff92\014\uff92\022\uff92\023\uff92\026\uff92\033\uff92" +
    "\034\uff92\035\uff92\036\uff92\037\uff92\044\uff92\045\uff92\052" +
    "\uff92\055\uff92\056\uff92\001\002\000\046\003\uff9a\010\uff9a" +
    "\012\uff9a\013\uff9a\014\uff9a\022\uff9a\023\uff9a\026\uff9a\033" +
    "\uff9a\034\uff9a\035\uff9a\036\uff9a\037\uff9a\044\uff9a\045\uff9a" +
    "\052\uff9a\055\uff9a\056\uff9a\001\002\000\046\003\uff62\010" +
    "\uff62\012\uff62\013\uff62\014\uff62\022\uff62\023\uff62\026\uff62" +
    "\033\uff62\034\uff62\035\uff62\036\uff62\037\uff62\044\uff62\045" +
    "\uff62\052\uff62\055\uff62\056\uff62\001\002\000\054\003\uff5f" +
    "\006\026\010\uff5f\012\uff5f\013\uff5f\014\uff5f\016\155\022" +
    "\uff5f\023\uff5f\026\uff5f\032\u0119\033\uff5f\034\uff5f\035\uff5f" +
    "\036\uff5f\037\uff5f\044\uff5f\045\uff5f\052\uff5f\055\uff5f\056" +
    "\uff5f\001\002\000\010\003\u0111\016\155\032\u0110\001\002" +
    "\000\006\003\u0115\032\u0114\001\002\000\050\003\uffa7\006" +
    "\026\010\uffa7\012\uffa7\013\uffa7\014\uffa7\022\uffa7\023\uffa7" +
    "\026\uffa7\033\uffa7\034\uffa7\035\uffa7\036\uffa7\037\uffa7\044" +
    "\uffa7\045\uffa7\052\uffa7\055\uffa7\056\uffa7\001\002\000\050" +
    "\003\uff6f\006\026\010\uff6f\012\uff6f\013\uff6f\014\uff6f\022" +
    "\uff6f\023\uff6f\026\uff6f\033\uff6f\034\uff6f\035\uff6f\036\uff6f" +
    "\037\uff6f\044\uff6f\045\uff6f\052\uff6f\055\uff6f\056\uff6f\001" +
    "\002\000\046\003\uff77\010\uff77\012\uff77\013\uff77\014\uff77" +
    "\022\uff77\023\uff77\026\uff77\033\uff77\034\uff77\035\uff77\036" +
    "\uff77\037\uff77\044\uff77\045\uff77\052\uff77\055\uff77\056\uff77" +
    "\001\002\000\046\003\uffaf\010\uffaf\012\uffaf\013\uffaf\014" +
    "\uffaf\022\uffaf\023\uffaf\026\uffaf\033\uffaf\034\uffaf\035\uffaf" +
    "\036\uffaf\037\uffaf\044\uffaf\045\uffaf\052\uffaf\055\uffaf\056" +
    "\uffaf\001\002\000\050\003\uffa3\006\026\010\uffa3\012\uffa3" +
    "\013\uffa3\014\uffa3\022\uffa3\023\uffa3\026\uffa3\033\uffa3\034" +
    "\uffa3\035\uffa3\036\uffa3\037\uffa3\044\uffa3\045\uffa3\052\uffa3" +
    "\055\uffa3\056\uffa3\001\002\000\050\003\uff6b\006\026\010" +
    "\uff6b\012\uff6b\013\uff6b\014\uff6b\022\uff6b\023\uff6b\026\uff6b" +
    "\033\uff6b\034\uff6b\035\uff6b\036\uff6b\037\uff6b\044\uff6b\045" +
    "\uff6b\052\uff6b\055\uff6b\056\uff6b\001\002\000\046\003\uff73" +
    "\010\uff73\012\uff73\013\uff73\014\uff73\022\uff73\023\uff73\026" +
    "\uff73\033\uff73\034\uff73\035\uff73\036\uff73\037\uff73\044\uff73" +
    "\045\uff73\052\uff73\055\uff73\056\uff73\001\002\000\046\003" +
    "\uffab\010\uffab\012\uffab\013\uffab\014\uffab\022\uffab\023\uffab" +
    "\026\uffab\033\uffab\034\uffab\035\uffab\036\uffab\037\uffab\044" +
    "\uffab\045\uffab\052\uffab\055\uffab\056\uffab\001\002\000\006" +
    "\003\u011d\032\u011c\001\002\000\050\003\uff97\006\026\010" +
    "\uff97\012\uff97\013\uff97\014\uff97\022\uff97\023\uff97\026\uff97" +
    "\033\uff97\034\uff97\035\uff97\036\uff97\037\uff97\044\uff97\045" +
    "\uff97\052\uff97\055\uff97\056\uff97\001\002\000\046\003\uff67" +
    "\010\uff67\012\uff67\013\uff67\014\uff67\022\uff67\023\uff67\026" +
    "\uff67\033\uff67\034\uff67\035\uff67\036\uff67\037\uff67\044\uff67" +
    "\045\uff67\052\uff67\055\uff67\056\uff67\001\002\000\046\003" +
    "\uff9f\010\uff9f\012\uff9f\013\uff9f\014\uff9f\022\uff9f\023\uff9f" +
    "\026\uff9f\033\uff9f\034\uff9f\035\uff9f\036\uff9f\037\uff9f\044" +
    "\uff9f\045\uff9f\052\uff9f\055\uff9f\056\uff9f\001\002\000\050" +
    "\003\uff93\006\026\010\uff93\012\uff93\013\uff93\014\uff93\022" +
    "\uff93\023\uff93\026\uff93\033\uff93\034\uff93\035\uff93\036\uff93" +
    "\037\uff93\044\uff93\045\uff93\052\uff93\055\uff93\056\uff93\001" +
    "\002\000\050\003\uff5b\006\026\010\uff5b\012\uff5b\013\uff5b" +
    "\014\uff5b\022\uff5b\023\uff5b\026\uff5b\033\uff5b\034\uff5b\035" +
    "\uff5b\036\uff5b\037\uff5b\044\uff5b\045\uff5b\052\uff5b\055\uff5b" +
    "\056\uff5b\001\002\000\046\003\uff63\010\uff63\012\uff63\013" +
    "\uff63\014\uff63\022\uff63\023\uff63\026\uff63\033\uff63\034\uff63" +
    "\035\uff63\036\uff63\037\uff63\044\uff63\045\uff63\052\uff63\055" +
    "\uff63\056\uff63\001\002\000\046\003\uff9b\010\uff9b\012\uff9b" +
    "\013\uff9b\014\uff9b\022\uff9b\023\uff9b\026\uff9b\033\uff9b\034" +
    "\uff9b\035\uff9b\036\uff9b\037\uff9b\044\uff9b\045\uff9b\052\uff9b" +
    "\055\uff9b\056\uff9b\001\002\000\006\002\uffec\040\016\001" +
    "\002\000\006\026\u0131\045\023\001\002\000\004\026\u012f" +
    "\001\002\000\010\026\u0124\044\031\045\023\001\002\000" +
    "\006\002\uffeb\040\016\001\002\000\006\026\u0129\045\023" +
    "\001\002\000\004\026\u0127\001\002\000\006\002\uffe7\040" +
    "\016\001\002\000\004\002\ufff7\001\002\000\006\002\uffe8" +
    "\040\016\001\002\000\004\026\u012b\001\002\000\006\002" +
    "\uffe5\040\016\001\002\000\004\002\ufff5\001\002\000\004" +
    "\002\ufff8\001\002\000\004\002\ufffb\001\002\000\006\002" +
    "\uffe9\040\016\001\002\000\004\002\ufff9\001\002\000\006" +
    "\002\uffea\040\016\001\002\000\004\026\u0133\001\002\000" +
    "\006\002\uffe6\040\016\001\002\000\004\002\ufff6\001\002" +
    "\000\004\002\ufffa\001\002\000\004\002\ufffc\001\002\000" +
    "\006\002\uffe0\040\016\001\002\000\004\026\u0139\001\002" +
    "\000\006\002\uffdf\040\016\001\002\000\004\002\uffef\001" +
    "\002\000\004\002\ufff0\001\002\000\006\003\u013f\023\u013e" +
    "\001\002\000\006\003\u013f\023\u013e\001\002\000\010\003" +
    "\u0236\006\u0200\024\u0238\001\002\000\016\003\u0202\006\u0200" +
    "\024\u01fe\046\u0204\057\u0201\061\u0203\001\002\000\006\003" +
    "\u0142\025\u0141\001\002\000\044\003\u01ed\006\026\010\u014b" +
    "\012\u014d\013\u0150\014\u0143\022\163\023\164\026\u01eb\033" +
    "\167\034\176\035\161\036\162\037\174\052\157\055\172" +
    "\056\u014c\001\002\000\044\006\026\010\u014b\012\u014d\013" +
    "\u0150\014\u0143\022\163\023\164\026\u0147\033\167\034\176" +
    "\035\161\036\162\037\174\045\023\052\157\055\172\056" +
    "\u014c\001\002\000\006\003\u01ce\023\u01cd\001\002\000\042" +
    "\003\ufe8c\010\ufe8c\012\ufe8c\013\ufe8c\014\ufe8c\022\ufe8c\023" +
    "\ufe8c\026\ufe8c\033\ufe8c\034\ufe8c\035\ufe8c\036\ufe8c\037\ufe8c" +
    "\052\ufe8c\055\ufe8c\056\ufe8c\001\002\000\006\003\u01ca\026" +
    "\u01c9\001\002\000\042\003\ufe8d\010\ufe8d\012\ufe8d\013\ufe8d" +
    "\014\ufe8d\022\ufe8d\023\ufe8d\026\ufe8d\033\ufe8d\034\ufe8d\035" +
    "\ufe8d\036\ufe8d\037\ufe8d\052\ufe8d\055\ufe8d\056\ufe8d\001\002" +
    "\000\006\026\ufef6\045\023\001\002\000\042\003\ufe8e\010" +
    "\ufe8e\012\ufe8e\013\ufe8e\014\ufe8e\022\ufe8e\023\ufe8e\026\ufe8e" +
    "\033\ufe8e\034\ufe8e\035\ufe8e\036\ufe8e\037\ufe8e\052\ufe8e\055" +
    "\ufe8e\056\ufe8e\001\002\000\042\003\u01c1\010\u014b\012\u014d" +
    "\013\u0150\014\u0143\022\163\023\164\026\u01c0\033\167\034" +
    "\176\035\161\036\162\037\174\052\157\055\172\056\u014c" +
    "\001\002\000\042\003\ufe8b\010\ufe8b\012\ufe8b\013\ufe8b\014" +
    "\ufe8b\022\ufe8b\023\ufe8b\026\ufe8b\033\ufe8b\034\ufe8b\035\ufe8b" +
    "\036\ufe8b\037\ufe8b\052\ufe8b\055\ufe8b\056\ufe8b\001\002\000" +
    "\006\003\u019b\023\u019a\001\002\000\024\022\163\023\164" +
    "\033\167\034\176\035\161\036\162\037\174\052\157\055" +
    "\172\001\002\000\006\003\u0179\025\u0178\001\002\000\042" +
    "\003\ufeb1\010\u014b\012\u014d\013\u0150\014\u0143\022\163\023" +
    "\164\026\ufeb1\033\167\034\176\035\161\036\162\037\174" +
    "\052\157\055\172\056\u014c\001\002\000\042\003\ufe8a\010" +
    "\ufe8a\012\ufe8a\013\ufe8a\014\ufe8a\022\ufe8a\023\ufe8a\026\ufe8a" +
    "\033\ufe8a\034\ufe8a\035\ufe8a\036\ufe8a\037\ufe8a\052\ufe8a\055" +
    "\ufe8a\056\ufe8a\001\002\000\006\003\u0156\023\u0155\001\002" +
    "\000\014\017\202\032\u0153\034\200\035\201\060\203\001" +
    "\002\000\004\026\ufeda\001\002\000\042\003\ufeb2\010\u014b" +
    "\012\u014d\013\u0150\014\u0143\022\163\023\164\026\ufeb2\033" +
    "\167\034\176\035\161\036\162\037\174\052\157\055\172" +
    "\056\u014c\001\002\000\006\003\ufeb4\026\ufeb4\001\002\000" +
    "\024\022\163\023\164\033\167\034\176\035\161\036\162" +
    "\037\174\052\157\055\172\001\002\000\004\024\u0157\001" +
    "\002\000\004\025\u0158\001\002\000\044\010\u014b\012\u014d" +
    "\013\u0150\014\u0143\022\163\023\164\026\u015e\033\167\034" +
    "\176\035\161\036\162\037\174\052\157\053\u015c\054\u0159" +
    "\055\172\056\u0162\001\002\000\004\032\u016c\001\002\000" +
    "\044\010\ufe86\012\ufe86\013\ufe86\014\ufe86\022\ufe86\023\ufe86" +
    "\026\ufe86\033\ufe86\034\ufe86\035\ufe86\036\ufe86\037\ufe86\052" +
    "\ufe86\053\ufe86\054\ufe86\055\ufe86\056\ufe86\001\002\000\044" +
    "\010\u014b\012\u014d\013\u0150\014\u0143\022\163\023\164\026" +
    "\ufe7d\033\167\034\176\035\161\036\162\037\174\052\157" +
    "\053\u015c\054\u0159\055\172\056\u0162\001\002\000\004\032" +
    "\u016a\001\002\000\044\010\ufe87\012\ufe87\013\ufe87\014\ufe87" +
    "\022\ufe87\023\ufe87\026\ufe87\033\ufe87\034\ufe87\035\ufe87\036" +
    "\ufe87\037\ufe87\052\ufe87\053\ufe87\054\ufe87\055\ufe87\056\ufe87" +
    "\001\002\000\046\003\ufe69\010\ufe69\012\ufe69\013\ufe69\014" +
    "\ufe69\022\ufe69\023\ufe69\026\ufe69\033\ufe69\034\ufe69\035\ufe69" +
    "\036\ufe69\037\ufe69\052\ufe69\053\ufe69\054\ufe69\055\ufe69\056" +
    "\ufe69\001\002\000\004\026\u0169\001\002\000\044\010\ufe88" +
    "\012\ufe88\013\ufe88\014\ufe88\022\ufe88\023\ufe88\026\ufe88\033" +
    "\ufe88\034\ufe88\035\ufe88\036\ufe88\037\ufe88\052\ufe88\053\ufe88" +
    "\054\ufe88\055\ufe88\056\ufe88\001\002\000\044\010\ufe85\012" +
    "\ufe85\013\ufe85\014\ufe85\022\ufe85\023\ufe85\026\ufe85\033\ufe85" +
    "\034\ufe85\035\ufe85\036\ufe85\037\ufe85\052\ufe85\053\ufe85\054" +
    "\ufe85\055\ufe85\056\ufe85\001\002\000\024\022\163\023\164" +
    "\033\167\034\176\035\161\036\162\037\174\052\157\055" +
    "\172\001\002\000\044\010\ufe84\012\ufe84\013\ufe84\014\ufe84" +
    "\022\ufe84\023\ufe84\026\ufe84\033\ufe84\034\ufe84\035\ufe84\036" +
    "\ufe84\037\ufe84\052\ufe84\053\ufe84\054\ufe84\055\ufe84\056\ufe84" +
    "\001\002\000\014\017\202\032\u0165\034\200\035\201\060" +
    "\203\001\002\000\044\010\u014b\012\u014d\013\u0150\014\u0143" +
    "\022\163\023\164\026\ufe7e\033\167\034\176\035\161\036" +
    "\162\037\174\052\157\053\u015c\054\u0159\055\172\056\u0162" +
    "\001\002\000\004\026\ufe80\001\002\000\014\017\202\032" +
    "\u0168\034\200\035\201\060\203\001\002\000\044\010\ufe81" +
    "\012\ufe81\013\ufe81\014\ufe81\022\ufe81\023\ufe81\026\ufe81\033" +
    "\ufe81\034\ufe81\035\ufe81\036\ufe81\037\ufe81\052\ufe81\053\ufe81" +
    "\054\ufe81\055\ufe81\056\ufe81\001\002\000\046\003\ufe6a\010" +
    "\ufe6a\012\ufe6a\013\ufe6a\014\ufe6a\022\ufe6a\023\ufe6a\026\ufe6a" +
    "\033\ufe6a\034\ufe6a\035\ufe6a\036\ufe6a\037\ufe6a\052\ufe6a\053" +
    "\ufe6a\054\ufe6a\055\ufe6a\056\ufe6a\001\002\000\044\010\ufe83" +
    "\012\ufe83\013\ufe83\014\ufe83\022\ufe83\023\ufe83\026\ufe83\033" +
    "\ufe83\034\ufe83\035\ufe83\036\ufe83\037\ufe83\052\ufe83\053\ufe83" +
    "\054\ufe83\055\ufe83\056\ufe83\001\002\000\004\026\ufe7f\001" +
    "\002\000\044\010\ufe82\012\ufe82\013\ufe82\014\ufe82\022\ufe82" +
    "\023\ufe82\026\ufe82\033\ufe82\034\ufe82\035\ufe82\036\ufe82\037" +
    "\ufe82\052\ufe82\053\ufe82\054\ufe82\055\ufe82\056\ufe82\001\002" +
    "\000\014\017\202\024\u016e\034\200\035\201\060\203\001" +
    "\002\000\006\003\u0170\025\u016f\001\002\000\044\010\u014b" +
    "\012\u014d\013\u0150\014\u0143\022\163\023\164\026\u0174\033" +
    "\167\034\176\035\161\036\162\037\174\052\157\053\u015c" +
    "\054\u0159\055\172\056\u0162\001\002\000\044\010\u014b\012" +
    "\u014d\013\u0150\014\u0143\022\163\023\164\026\u0171\033\167" +
    "\034\176\035\161\036\162\037\174\052\157\053\u015c\054" +
    "\u0159\055\172\056\u0162\001\002\000\046\003\ufe67\010\ufe67" +
    "\012\ufe67\013\ufe67\014\ufe67\022\ufe67\023\ufe67\026\ufe67\033" +
    "\ufe67\034\ufe67\035\ufe67\036\ufe67\037\ufe67\052\ufe67\053\ufe67" +
    "\054\ufe67\055\ufe67\056\ufe67\001\002\000\004\026\u0173\001" +
    "\002\000\046\003\ufe68\010\ufe68\012\ufe68\013\ufe68\014\ufe68" +
    "\022\ufe68\023\ufe68\026\ufe68\033\ufe68\034\ufe68\035\ufe68\036" +
    "\ufe68\037\ufe68\052\ufe68\053\ufe68\054\ufe68\055\ufe68\056\ufe68" +
    "\001\002\000\046\003\ufe6b\010\ufe6b\012\ufe6b\013\ufe6b\014" +
    "\ufe6b\022\ufe6b\023\ufe6b\026\ufe6b\033\ufe6b\034\ufe6b\035\ufe6b" +
    "\036\ufe6b\037\ufe6b\052\ufe6b\053\ufe6b\054\ufe6b\055\ufe6b\056" +
    "\ufe6b\001\002\000\004\026\u0176\001\002\000\046\003\ufe6c" +
    "\010\ufe6c\012\ufe6c\013\ufe6c\014\ufe6c\022\ufe6c\023\ufe6c\026" +
    "\ufe6c\033\ufe6c\034\ufe6c\035\ufe6c\036\ufe6c\037\ufe6c\052\ufe6c" +
    "\053\ufe6c\054\ufe6c\055\ufe6c\056\ufe6c\001\002\000\006\003" +
    "\ufeb3\026\ufeb3\001\002\000\044\010\u014b\012\u014d\013\u0150" +
    "\014\u0143\022\163\023\164\026\u0187\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\053\u015c\054\u0159\055\172" +
    "\056\u0162\001\002\000\044\010\u014b\012\u014d\013\u0150\014" +
    "\u0143\022\163\023\164\026\u017a\033\167\034\176\035\161" +
    "\036\162\037\174\052\157\053\u015c\054\u0159\055\172\056" +
    "\u0162\001\002\000\004\013\u0182\001\002\000\004\026\u017c" +
    "\001\002\000\004\013\u017d\001\002\000\004\023\u017e\001" +
    "\002\000\024\022\163\023\164\033\167\034\176\035\161" +
    "\036\162\037\174\052\157\055\172\001\002\000\014\017" +
    "\202\024\u0180\034\200\035\201\060\203\001\002\000\004" +
    "\032\u0181\001\002\000\046\003\ufe64\010\ufe64\012\ufe64\013" +
    "\ufe64\014\ufe64\022\ufe64\023\ufe64\026\ufe64\033\ufe64\034\ufe64" +
    "\035\ufe64\036\ufe64\037\ufe64\052\ufe64\053\ufe64\054\ufe64\055" +
    "\ufe64\056\ufe64\001\002\000\004\023\u0183\001\002\000\024" +
    "\022\163\023\164\033\167\034\176\035\161\036\162\037" +
    "\174\052\157\055\172\001\002\000\014\017\202\024\u0185" +
    "\034\200\035\201\060\203\001\002\000\004\032\u0186\001" +
    "\002\000\046\003\ufe63\010\ufe63\012\ufe63\013\ufe63\014\ufe63" +
    "\022\ufe63\023\ufe63\026\ufe63\033\ufe63\034\ufe63\035\ufe63\036" +
    "\ufe63\037\ufe63\052\ufe63\053\ufe63\054\ufe63\055\ufe63\056\ufe63" +
    "\001\002\000\006\003\u0192\013\u0191\001\002\000\004\026" +
    "\u0189\001\002\000\006\003\u018a\013\u018b\001\002\000\004" +
    "\032\u0190\001\002\000\004\023\u018c\001\002\000\024\022" +
    "\163\023\164\033\167\034\176\035\161\036\162\037\174" +
    "\052\157\055\172\001\002\000\014\017\202\024\u018e\034" +
    "\200\035\201\060\203\001\002\000\004\032\u018f\001\002" +
    "\000\046\003\ufe66\010\ufe66\012\ufe66\013\ufe66\014\ufe66\022" +
    "\ufe66\023\ufe66\026\ufe66\033\ufe66\034\ufe66\035\ufe66\036\ufe66" +
    "\037\ufe66\052\ufe66\053\ufe66\054\ufe66\055\ufe66\056\ufe66\001" +
    "\002\000\046\003\ufe62\010\ufe62\012\ufe62\013\ufe62\014\ufe62" +
    "\022\ufe62\023\ufe62\026\ufe62\033\ufe62\034\ufe62\035\ufe62\036" +
    "\ufe62\037\ufe62\052\ufe62\053\ufe62\054\ufe62\055\ufe62\056\ufe62" +
    "\001\002\000\004\023\u0194\001\002\000\004\032\u0193\001" +
    "\002\000\046\003\ufe61\010\ufe61\012\ufe61\013\ufe61\014\ufe61" +
    "\022\ufe61\023\ufe61\026\ufe61\033\ufe61\034\ufe61\035\ufe61\036" +
    "\ufe61\037\ufe61\052\ufe61\053\ufe61\054\ufe61\055\ufe61\056\ufe61" +
    "\001\002\000\024\022\163\023\164\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\055\172\001\002\000\014" +
    "\017\202\024\u0196\034\200\035\201\060\203\001\002\000" +
    "\004\032\u0197\001\002\000\046\003\ufe65\010\ufe65\012\ufe65" +
    "\013\ufe65\014\ufe65\022\ufe65\023\ufe65\026\ufe65\033\ufe65\034" +
    "\ufe65\035\ufe65\036\ufe65\037\ufe65\052\ufe65\053\ufe65\054\ufe65" +
    "\055\ufe65\056\ufe65\001\002\000\014\017\202\032\u0199\034" +
    "\200\035\201\060\203\001\002\000\042\003\ufe89\010\ufe89" +
    "\012\ufe89\013\ufe89\014\ufe89\022\ufe89\023\ufe89\026\ufe89\033" +
    "\ufe89\034\ufe89\035\ufe89\036\ufe89\037\ufe89\052\ufe89\055\ufe89" +
    "\056\ufe89\001\002\000\024\022\163\023\164\033\167\034" +
    "\176\035\161\036\162\037\174\052\157\055\172\001\002" +
    "\000\004\024\u019c\001\002\000\004\025\u019d\001\002\000" +
    "\044\010\u014b\012\u014d\013\u0150\014\u0143\022\163\023\164" +
    "\026\u019e\033\167\034\176\035\161\036\162\037\174\052" +
    "\157\053\u015c\054\u0159\055\172\056\u0162\001\002\000\050" +
    "\003\ufe78\010\ufe78\011\u01a6\012\ufe78\013\ufe78\014\ufe78\022" +
    "\ufe78\023\ufe78\026\ufe78\033\ufe78\034\ufe78\035\ufe78\036\ufe78" +
    "\037\ufe78\052\ufe78\053\ufe78\054\ufe78\055\ufe78\056\ufe78\001" +
    "\002\000\004\026\u01a0\001\002\000\050\003\ufe79\010\ufe79" +
    "\011\u01a1\012\ufe79\013\ufe79\014\ufe79\022\ufe79\023\ufe79\026" +
    "\ufe79\033\ufe79\034\ufe79\035\ufe79\036\ufe79\037\ufe79\052\ufe79" +
    "\053\ufe79\054\ufe79\055\ufe79\056\ufe79\001\002\000\004\025" +
    "\u01a2\001\002\000\044\010\u014b\012\u014d\013\u0150\014\u0143" +
    "\022\163\023\164\026\u01a3\033\167\034\176\035\161\036" +
    "\162\037\174\052\157\053\u015c\054\u0159\055\172\056\u0162" +
    "\001\002\000\046\003\ufe6f\010\ufe6f\012\ufe6f\013\ufe6f\014" +
    "\ufe6f\022\ufe6f\023\ufe6f\026\ufe6f\033\ufe6f\034\ufe6f\035\ufe6f" +
    "\036\ufe6f\037\ufe6f\052\ufe6f\053\ufe6f\054\ufe6f\055\ufe6f\056" +
    "\ufe6f\001\002\000\004\026\u01a5\001\002\000\046\003\ufe70" +
    "\010\ufe70\012\ufe70\013\ufe70\014\ufe70\022\ufe70\023\ufe70\026" +
    "\ufe70\033\ufe70\034\ufe70\035\ufe70\036\ufe70\037\ufe70\052\ufe70" +
    "\053\ufe70\054\ufe70\055\ufe70\056\ufe70\001\002\000\004\025" +
    "\u01a7\001\002\000\044\010\u014b\012\u014d\013\u0150\014\u0143" +
    "\022\163\023\164\026\u01a8\033\167\034\176\035\161\036" +
    "\162\037\174\052\157\053\u015c\054\u0159\055\172\056\u0162" +
    "\001\002\000\046\003\ufe6d\010\ufe6d\012\ufe6d\013\ufe6d\014" +
    "\ufe6d\022\ufe6d\023\ufe6d\026\ufe6d\033\ufe6d\034\ufe6d\035\ufe6d" +
    "\036\ufe6d\037\ufe6d\052\ufe6d\053\ufe6d\054\ufe6d\055\ufe6d\056" +
    "\ufe6d\001\002\000\004\026\u01aa\001\002\000\046\003\ufe6e" +
    "\010\ufe6e\012\ufe6e\013\ufe6e\014\ufe6e\022\ufe6e\023\ufe6e\026" +
    "\ufe6e\033\ufe6e\034\ufe6e\035\ufe6e\036\ufe6e\037\ufe6e\052\ufe6e" +
    "\053\ufe6e\054\ufe6e\055\ufe6e\056\ufe6e\001\002\000\014\017" +
    "\202\024\u01ac\034\200\035\201\060\203\001\002\000\006" +
    "\003\u01ae\025\u01ad\001\002\000\044\010\u014b\012\u014d\013" +
    "\u0150\014\u0143\022\163\023\164\026\u01b3\033\167\034\176" +
    "\035\161\036\162\037\174\052\157\053\u015c\054\u0159\055" +
    "\172\056\u0162\001\002\000\044\010\u014b\012\u014d\013\u0150" +
    "\014\u0143\022\163\023\164\026\u01af\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\053\u015c\054\u0159\055\172" +
    "\056\u0162\001\002\000\046\003\ufe76\010\ufe76\012\ufe76\013" +
    "\ufe76\014\ufe76\022\ufe76\023\ufe76\026\ufe76\033\ufe76\034\ufe76" +
    "\035\ufe76\036\ufe76\037\ufe76\052\ufe76\053\ufe76\054\ufe76\055" +
    "\ufe76\056\ufe76\001\002\000\004\026\u01b1\001\002\000\046" +
    "\003\ufe77\010\ufe77\012\ufe77\013\ufe77\014\ufe77\022\ufe77\023" +
    "\ufe77\026\ufe77\033\ufe77\034\ufe77\035\ufe77\036\ufe77\037\ufe77" +
    "\052\ufe77\053\ufe77\054\ufe77\055\ufe77\056\ufe77\001\002\000" +
    "\004\026\u01b9\001\002\000\050\003\ufe7a\010\ufe7a\011\u01b4" +
    "\012\ufe7a\013\ufe7a\014\ufe7a\022\ufe7a\023\ufe7a\026\ufe7a\033" +
    "\ufe7a\034\ufe7a\035\ufe7a\036\ufe7a\037\ufe7a\052\ufe7a\053\ufe7a" +
    "\054\ufe7a\055\ufe7a\056\ufe7a\001\002\000\004\025\u01b5\001" +
    "\002\000\044\010\u014b\012\u014d\013\u0150\014\u0143\022\163" +
    "\023\164\026\u01b7\033\167\034\176\035\161\036\162\037" +
    "\174\052\157\053\u015c\054\u0159\055\172\056\u0162\001\002" +
    "\000\004\026\u01b8\001\002\000\046\003\ufe71\010\ufe71\012" +
    "\ufe71\013\ufe71\014\ufe71\022\ufe71\023\ufe71\026\ufe71\033\ufe71" +
    "\034\ufe71\035\ufe71\036\ufe71\037\ufe71\052\ufe71\053\ufe71\054" +
    "\ufe71\055\ufe71\056\ufe71\001\002\000\046\003\ufe72\010\ufe72" +
    "\012\ufe72\013\ufe72\014\ufe72\022\ufe72\023\ufe72\026\ufe72\033" +
    "\ufe72\034\ufe72\035\ufe72\036\ufe72\037\ufe72\052\ufe72\053\ufe72" +
    "\054\ufe72\055\ufe72\056\ufe72\001\002\000\050\003\ufe7b\010" +
    "\ufe7b\011\u01ba\012\ufe7b\013\ufe7b\014\ufe7b\022\ufe7b\023\ufe7b" +
    "\026\ufe7b\033\ufe7b\034\ufe7b\035\ufe7b\036\ufe7b\037\ufe7b\052" +
    "\ufe7b\053\ufe7b\054\ufe7b\055\ufe7b\056\ufe7b\001\002\000\004" +
    "\025\u01bb\001\002\000\044\010\u014b\012\u014d\013\u0150\014" +
    "\u0143\022\163\023\164\026\u01bc\033\167\034\176\035\161" +
    "\036\162\037\174\052\157\053\u015c\054\u0159\055\172\056" +
    "\u0162\001\002\000\046\003\ufe73\010\ufe73\012\ufe73\013\ufe73" +
    "\014\ufe73\022\ufe73\023\ufe73\026\ufe73\033\ufe73\034\ufe73\035" +
    "\ufe73\036\ufe73\037\ufe73\052\ufe73\053\ufe73\054\ufe73\055\ufe73" +
    "\056\ufe73\001\002\000\004\026\u01be\001\002\000\046\003" +
    "\ufe74\010\ufe74\012\ufe74\013\ufe74\014\ufe74\022\ufe74\023\ufe74" +
    "\026\ufe74\033\ufe74\034\ufe74\035\ufe74\036\ufe74\037\ufe74\052" +
    "\ufe74\053\ufe74\054\ufe74\055\ufe74\056\ufe74\001\002\000\006" +
    "\003\u01c5\026\u01c4\001\002\000\006\026\ufef9\045\023\001" +
    "\002\000\006\026\ufed9\045\023\001\002\000\004\026\ufedd" +
    "\001\002\000\004\026\ufefd\001\002\000\006\026\ufef8\045" +
    "\023\001\002\000\006\026\ufed8\045\023\001\002\000\004" +
    "\026\ufedc\001\002\000\004\026\ufefc\001\002\000\004\026" +
    "\ufefa\001\002\000\006\026\ufef7\045\023\001\002\000\006" +
    "\026\ufed7\045\023\001\002\000\004\026\ufedb\001\002\000" +
    "\004\026\ufefb\001\002\000\010\006\u01d7\033\167\052\157" +
    "\001\002\000\004\024\u01cf\001\002\000\004\025\u01d0\001" +
    "\002\000\044\010\u014b\012\u014d\013\u0150\014\u0143\022\163" +
    "\023\164\026\u01d1\033\167\034\176\035\161\036\162\037" +
    "\174\052\157\053\u015c\054\u0159\055\172\056\u0162\001\002" +
    "\000\046\003\ufe5d\010\ufe5d\012\ufe5d\013\ufe5d\014\ufe5d\022" +
    "\ufe5d\023\ufe5d\026\ufe5d\033\ufe5d\034\ufe5d\035\ufe5d\036\ufe5d" +
    "\037\ufe5d\052\ufe5d\053\ufe5d\054\ufe5d\055\ufe5d\056\ufe5d\001" +
    "\002\000\004\026\u01d3\001\002\000\046\003\ufe5e\010\ufe5e" +
    "\012\ufe5e\013\ufe5e\014\ufe5e\022\ufe5e\023\ufe5e\026\ufe5e\033" +
    "\ufe5e\034\ufe5e\035\ufe5e\036\ufe5e\037\ufe5e\052\ufe5e\053\ufe5e" +
    "\054\ufe5e\055\ufe5e\056\ufe5e\001\002\000\004\024\u01e1\001" +
    "\002\000\004\032\u01dd\001\002\000\006\016\210\021\207" +
    "\001\002\000\004\033\u01d8\001\002\000\004\016\u01d9\001" +
    "\002\000\024\022\163\023\164\033\167\034\176\035\161" +
    "\036\162\037\174\052\157\055\172\001\002\000\014\017" +
    "\202\032\ufea5\034\200\035\201\060\203\001\002\000\024" +
    "\022\163\023\164\033\167\034\176\035\161\036\162\037" +
    "\174\052\157\055\172\001\002\000\014\017\202\032\ufea6" +
    "\034\200\035\201\060\203\001\002\000\024\022\163\023" +
    "\164\033\167\034\176\035\161\036\162\037\174\052\157" +
    "\055\172\001\002\000\014\017\202\032\u01df\034\200\035" +
    "\201\060\203\001\002\000\024\022\163\023\164\033\167" +
    "\034\176\035\161\036\162\037\174\052\157\055\172\001" +
    "\002\000\014\017\202\024\ufe5a\034\200\035\201\060\203" +
    "\001\002\000\006\003\u01e3\025\u01e2\001\002\000\044\010" +
    "\u014b\012\u014d\013\u0150\014\u0143\022\163\023\164\026\u01e7" +
    "\033\167\034\176\035\161\036\162\037\174\052\157\053" +
    "\u015c\054\u0159\055\172\056\u0162\001\002\000\044\010\u014b" +
    "\012\u014d\013\u0150\014\u0143\022\163\023\164\026\u01e4\033" +
    "\167\034\176\035\161\036\162\037\174\052\157\053\u015c" +
    "\054\u0159\055\172\056\u0162\001\002\000\046\003\ufe5b\010" +
    "\ufe5b\012\ufe5b\013\ufe5b\014\ufe5b\022\ufe5b\023\ufe5b\026\ufe5b" +
    "\033\ufe5b\034\ufe5b\035\ufe5b\036\ufe5b\037\ufe5b\052\ufe5b\053" +
    "\ufe5b\054\ufe5b\055\ufe5b\056\ufe5b\001\002\000\004\026\u01e6" +
    "\001\002\000\046\003\ufe5c\010\ufe5c\012\ufe5c\013\ufe5c\014" +
    "\ufe5c\022\ufe5c\023\ufe5c\026\ufe5c\033\ufe5c\034\ufe5c\035\ufe5c" +
    "\036\ufe5c\037\ufe5c\052\ufe5c\053\ufe5c\054\ufe5c\055\ufe5c\056" +
    "\ufe5c\001\002\000\046\003\ufe5f\010\ufe5f\012\ufe5f\013\ufe5f" +
    "\014\ufe5f\022\ufe5f\023\ufe5f\026\ufe5f\033\ufe5f\034\ufe5f\035" +
    "\ufe5f\036\ufe5f\037\ufe5f\052\ufe5f\053\ufe5f\054\ufe5f\055\ufe5f" +
    "\056\ufe5f\001\002\000\004\026\u01e9\001\002\000\046\003" +
    "\ufe60\010\ufe60\012\ufe60\013\ufe60\014\ufe60\022\ufe60\023\ufe60" +
    "\026\ufe60\033\ufe60\034\ufe60\035\ufe60\036\ufe60\037\ufe60\052" +
    "\ufe60\053\ufe60\054\ufe60\055\ufe60\056\ufe60\001\002\000\006" +
    "\003\u01fa\026\u01f9\001\002\000\006\026\uff06\045\023\001" +
    "\002\000\042\003\u01f1\010\u014b\012\u014d\013\u0150\014\u0143" +
    "\022\163\023\164\026\u01f0\033\167\034\176\035\161\036" +
    "\162\037\174\052\157\055\172\056\u014c\001\002\000\006" +
    "\026\ufeee\045\023\001\002\000\004\026\ufef2\001\002\000" +
    "\006\003\u01f5\026\u01f4\001\002\000\006\026\uff09\045\023" +
    "\001\002\000\006\026\ufef1\045\023\001\002\000\004\026" +
    "\ufef5\001\002\000\004\026\uff0d\001\002\000\006\026\uff08" +
    "\045\023\001\002\000\006\026\ufef0\045\023\001\002\000" +
    "\004\026\ufef4\001\002\000\004\026\uff0c\001\002\000\004" +
    "\026\uff0a\001\002\000\006\026\uff07\045\023\001\002\000" +
    "\006\026\ufeef\045\023\001\002\000\004\026\ufef3\001\002" +
    "\000\004\026\uff0b\001\002\000\006\003\uff0f\025\uff0f\001" +
    "\002\000\014\003\uff1f\025\uff1f\046\u0204\057\u0201\061\u0203" +
    "\001\002\000\010\003\uff10\025\uff10\057\u0201\001\002\000" +
    "\006\003\u022c\033\u022d\001\002\000\006\003\u0216\023\u0215" +
    "\001\002\000\012\003\ufeb9\024\ufeb9\033\u0211\047\u0210\001" +
    "\002\000\014\003\ufeb5\025\ufeb5\046\u0204\057\ufeb5\061\u0203" +
    "\001\002\000\014\003\ufeb6\025\ufeb6\046\u0204\057\ufeb6\061" +
    "\u0203\001\002\000\006\003\u0206\024\u0207\001\002\000\014" +
    "\003\uff14\025\uff14\046\u0204\057\u0201\061\u0203\001\002\000" +
    "\014\003\uff23\025\uff23\046\u0204\057\u0201\061\u0203\001\002" +
    "\000\006\003\uff21\025\uff21\001\002\000\010\003\uff22\025" +
    "\uff22\057\u0201\001\002\000\006\003\uff20\025\uff20\001\002" +
    "\000\006\003\uff12\025\uff12\001\002\000\010\003\uff13\025" +
    "\uff13\057\u0201\001\002\000\006\003\uff11\025\uff11\001\002" +
    "\000\010\003\ufeb8\025\ufeb8\057\ufeb8\001\002\000\010\003" +
    "\ufeb7\025\ufeb7\057\ufeb7\001\002\000\006\003\u0202\006\u0200" +
    "\001\002\000\010\003\ufebc\024\ufebc\047\u0212\001\002\000" +
    "\006\003\u0202\006\u0200\001\002\000\006\003\ufebe\024\ufebe" +
    "\001\002\000\006\003\ufebd\024\ufebd\001\002\000\010\003" +
    "\u0221\006\u0222\024\u0223\001\002\000\010\006\u0218\024\u0219" +
    "\033\u0217\001\002\000\006\003\u021f\024\u0220\001\002\000" +
    "\006\003\u021a\033\u021b\001\002\000\006\003\ufec4\025\ufec4" +
    "\001\002\000\010\003\ufec2\024\u021e\025\ufec2\001\002\000" +
    "\006\003\u021c\024\u021d\001\002\000\006\003\ufec9\025\ufec9" +
    "\001\002\000\006\003\ufecd\025\ufecd\001\002\000\006\003" +
    "\ufec6\025\ufec6\001\002\000\006\003\ufec1\025\ufec1\001\002" +
    "\000\006\003\ufec5\025\ufec5\001\002\000\010\003\ufec3\025" +
    "\ufec3\033\u0229\001\002\000\006\003\u0224\033\u0225\001\002" +
    "\000\006\003\ufece\025\ufece\001\002\000\010\003\ufec8\024" +
    "\u0228\025\ufec8\001\002\000\006\003\u0226\024\u0227\001\002" +
    "\000\006\003\ufecb\025\ufecb\001\002\000\006\003\ufecf\025" +
    "\ufecf\001\002\000\006\003\ufecc\025\ufecc\001\002\000\006" +
    "\003\u022a\024\u022b\001\002\000\006\003\ufec7\025\ufec7\001" +
    "\002\000\006\003\ufeca\025\ufeca\001\002\000\010\003\ufeba" +
    "\024\ufeba\047\u0230\001\002\000\010\003\ufebf\024\ufebf\047" +
    "\u022e\001\002\000\006\003\u0202\006\u0200\001\002\000\006" +
    "\003\ufec0\024\ufec0\001\002\000\006\003\u0202\006\u0200\001" +
    "\002\000\006\003\ufebb\024\ufebb\001\002\000\006\003\uff0e" +
    "\025\uff0e\001\002\000\006\003\uff1d\025\uff1d\001\002\000" +
    "\010\003\uff1e\025\uff1e\057\u0201\001\002\000\006\003\uff1c" +
    "\025\uff1c\001\002\000\020\003\ufeb9\024\ufeb9\033\u0211\046" +
    "\u0204\047\u0210\057\u0201\061\u0203\001\002\000\006\003\u023c" +
    "\024\u023d\001\002\000\014\003\uff24\025\uff24\046\u0204\057" +
    "\u0201\061\u0203\001\002\000\006\003\uff25\025\uff25\001\002" +
    "\000\010\003\uff26\025\uff26\057\u0201\001\002\000\006\003" +
    "\uff27\025\uff27\001\002\000\014\003\uff1b\025\uff1b\046\u0204" +
    "\057\u0201\061\u0203\001\002\000\014\003\uff28\025\uff28\046" +
    "\u0204\057\u0201\061\u0203\001\002\000\006\003\uff29\025\uff29" +
    "\001\002\000\010\003\uff2a\025\uff2a\057\u0201\001\002\000" +
    "\006\003\uff2b\025\uff2b\001\002\000\006\003\uff19\025\uff19" +
    "\001\002\000\010\003\uff1a\025\uff1a\057\u0201\001\002\000" +
    "\006\003\uff18\025\uff18\001\002\000\006\003\uff16\025\uff16" +
    "\001\002\000\010\003\uff17\025\uff17\057\u0201\001\002\000" +
    "\006\003\uff15\025\uff15\001\002\000\006\003\u0249\025\u0248" +
    "\001\002\000\044\003\u025f\006\026\010\u014b\012\u014d\013" +
    "\u0150\014\u0143\022\163\023\164\026\u025d\033\167\034\176" +
    "\035\161\036\162\037\174\052\157\055\172\056\u014c\001" +
    "\002\000\044\006\026\010\u014b\012\u014d\013\u0150\014\u0143" +
    "\022\163\023\164\026\u024b\033\167\034\176\035\161\036" +
    "\162\037\174\045\023\052\157\055\172\056\u014c\001\002" +
    "\000\006\003\u0259\026\u0258\001\002\000\006\026\ufee6\045" +
    "\023\001\002\000\042\003\u0250\010\u014b\012\u014d\013\u0150" +
    "\014\u0143\022\163\023\164\026\u024f\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\055\172\056\u014c\001\002" +
    "\000\004\026\ufed3\001\002\000\006\003\u0254\026\u0253\001" +
    "\002\000\006\026\ufee9\045\023\001\002\000\006\026\ufed2" +
    "\045\023\001\002\000\004\026\ufed6\001\002\000\004\026" +
    "\ufeed\001\002\000\006\026\ufee8\045\023\001\002\000\006" +
    "\026\ufed1\045\023\001\002\000\004\026\ufed5\001\002\000" +
    "\004\026\ufeec\001\002\000\004\026\ufeea\001\002\000\006" +
    "\026\ufee7\045\023\001\002\000\006\026\ufed0\045\023\001" +
    "\002\000\004\026\ufed4\001\002\000\004\026\ufeeb\001\002" +
    "\000\006\003\u026c\026\u026b\001\002\000\006\026\ufefe\045" +
    "\023\001\002\000\042\003\u0263\010\u014b\012\u014d\013\u0150" +
    "\014\u0143\022\163\023\164\026\u0262\033\167\034\176\035" +
    "\161\036\162\037\174\052\157\055\172\056\u014c\001\002" +
    "\000\006\026\ufede\045\023\001\002\000\004\026\ufee2\001" +
    "\002\000\006\003\u0267\026\u0266\001\002\000\006\026\uff01" +
    "\045\023\001\002\000\006\026\ufee1\045\023\001\002\000" +
    "\004\026\ufee5\001\002\000\004\026\uff05\001\002\000\006" +
    "\026\uff00\045\023\001\002\000\006\026\ufee0\045\023\001" +
    "\002\000\004\026\ufee4\001\002\000\004\026\uff04\001\002" +
    "\000\004\026\uff02\001\002\000\006\026\ufeff\045\023\001" +
    "\002\000\006\026\ufedf\045\023\001\002\000\004\026\ufee3" +
    "\001\002\000\004\026\uff03\001\002\000\014\006\026\026" +
    "\u0273\041\030\044\031\045\023\001\002\000\006\026\u029a" +
    "\045\023\001\002\000\012\006\026\026\u0283\044\031\045" +
    "\023\001\002\000\010\026\u0278\044\031\045\023\001\002" +
    "\000\006\002\uffcd\040\016\001\002\000\004\026\u0275\001" +
    "\002\000\006\002\uffbe\040\016\001\002\000\004\002\uffce" +
    "\001\002\000\004\002\uffdd\001\002\000\006\002\uffc4\040" +
    "\016\001\002\000\006\026\u027d\045\023\001\002\000\004" +
    "\026\u027b\001\002\000\006\002\uffc2\040\016\001\002\000" +
    "\004\002\uffd2\001\002\000\006\002\uffc3\040\016\001\002" +
    "\000\004\026\u027f\001\002\000\006\002\uffc1\040\016\001" +
    "\002\000\004\002\uffd1\001\002\000\004\002\uffd3\001\002" +
    "\000\004\002\uffd4\001\002\000\006\002\uffcc\040\016\001" +
    "\002\000\006\026\u0294\045\023\001\002\000\004\026\u0292" +
    "\001\002\000\010\026\u0287\044\031\045\023\001\002\000" +
    "\006\002\uffcb\040\016\001\002\000\006\026\u028c\045\023" +
    "\001\002\000\004\026\u028a\001\002\000\006\002\uffc7\040" +
    "\016\001\002\000\004\002\uffd7\001\002\000\006\002\uffc8" +
    "\040\016\001\002\000\004\026\u028e\001\002\000\006\002" +
    "\uffc5\040\016\001\002\000\004\002\uffd5\001\002\000\004" +
    "\002\uffd8\001\002\000\004\002\uffdb\001\002\000\006\002" +
    "\uffc9\040\016\001\002\000\004\002\uffd9\001\002\000\006" +
    "\002\uffca\040\016\001\002\000\004\026\u0296\001\002\000" +
    "\006\002\uffc6\040\016\001\002\000\004\002\uffd6\001\002" +
    "\000\004\002\uffda\001\002\000\004\002\uffdc\001\002\000" +
    "\006\002\uffc0\040\016\001\002\000\004\026\u029c\001\002" +
    "\000\006\002\uffbf\040\016\001\002\000\004\002\uffcf\001" +
    "\002\000\004\002\uffd0\001\002\000\004\032\u02a0\001\002" +
    "\000\004\040\016\001\002\000\004\002\000\001\002\000" +
    "\004\002\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02a0\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u02a1\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\016\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\022\024\023\026\025\023\027\032" +
    "\001\001\000\002\001\001\000\004\027\u0137\001\001\000" +
    "\010\023\u0122\025\u0120\027\u0121\001\001\000\004\010\150" +
    "\001\001\000\006\025\133\027\134\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\035\001\001\000\002" +
    "\001\001\000\004\003\034\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\066\025\065\001\001\000\002" +
    "\001\001\000\004\023\054\001\001\000\006\023\044\025" +
    "\043\001\001\000\004\025\051\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\025\050\001\001\000\004\025" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\062\001\001\000\004\025\061\001" +
    "\001\000\002\001\001\000\004\025\060\001\001\000\004" +
    "\025\057\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\025\102\001\001" +
    "\000\004\023\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\070\001\001\000\002\001\001\000\004" +
    "\025\101\001\001\000\004\025\100\001\001\000\002\001" +
    "\001\000\004\025\077\001\001\000\004\025\076\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\120\001\001\000\004\010\110\001" +
    "\001\000\004\022\116\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\113\001\001\000\002\001\001\000" +
    "\004\022\115\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\022\123\001\001\000\002\001\001\000\004\022" +
    "\122\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\126\001\001\000\004\022\131\001\001\000\002\001" +
    "\001\000\004\022\130\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\144\001\001\000\004\027\140\001" +
    "\001\000\002\001\001\000\004\003\136\001\001\000\002" +
    "\001\001\000\004\003\143\001\001\000\002\001\001\000" +
    "\004\003\142\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\u010d\001\001\000\006\023" +
    "\347\024\344\001\001\000\002\001\001\000\004\024\151" +
    "\001\001\000\002\001\001\000\004\023\240\001\001\000" +
    "\004\023\237\001\001\000\022\004\155\013\164\026\165" +
    "\034\167\037\174\041\170\043\172\045\157\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\044\231\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\004\155\013\164\026\165\034\167\037\223\041\170" +
    "\043\172\045\157\001\001\000\020\004\155\013\164\026" +
    "\165\034\167\041\170\043\222\045\157\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\044" +
    "\205\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\176\001\001\000\002\001\001\000" +
    "\020\004\155\013\164\026\165\034\167\041\170\043\204" +
    "\045\157\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\004\155\013\164\026\165\034\167\041\170\043\203" +
    "\045\157\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\004\155\013\164\026\165\034\167" +
    "\041\170\043\210\045\157\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\004\155\013\164" +
    "\026\165\034\167\036\213\037\214\041\170\043\172\045" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\176\001\001\000\024\004\155\013\164\026\165\034" +
    "\167\036\216\037\214\041\170\043\172\045\157\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\026\165\041" +
    "\221\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\176\001\001\000\002\001\001\000\022\004\155\013" +
    "\164\026\165\034\167\037\226\041\170\043\172\045\157" +
    "\001\001\000\004\012\176\001\001\000\020\004\155\013" +
    "\164\026\165\034\167\041\170\043\230\045\157\001\001" +
    "\000\002\001\001\000\020\004\155\013\164\026\165\034" +
    "\167\041\170\043\232\045\157\001\001\000\002\001\001" +
    "\000\024\004\155\013\164\026\165\034\167\036\235\037" +
    "\214\041\170\043\172\045\157\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\244\001\001\000\004\023\243" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\010" +
    "\320\023\321\024\316\001\001\000\004\010\251\001\001" +
    "\000\004\010\274\001\001\000\006\023\265\024\263\001" +
    "\001\000\004\024\252\001\001\000\002\001\001\000\004" +
    "\023\256\001\001\000\004\023\255\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\023\262\001\001\000\004" +
    "\023\261\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\266\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\272\001\001\000\004\023" +
    "\271\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\023\310\024\306\001\001\000\004\024\275\001\001\000" +
    "\002\001\001\000\004\023\301\001\001\000\004\023\300" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\305\001\001\000\004\023\304\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\311\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\315" +
    "\001\001\000\004\023\314\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\330\001\001" +
    "\000\004\024\322\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\023\324\001\001\000\002\001\001\000\004" +
    "\023\326\001\001\000\002\001\001\000\006\023\337\024" +
    "\336\001\001\000\004\024\331\001\001\000\002\001\001" +
    "\000\004\023\333\001\001\000\002\001\001\000\004\023" +
    "\335\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\341\001\001\000\002\001\001\000" +
    "\004\023\343\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\u0107\001\001\000\004\010\352\001\001\000" +
    "\002\001\001\000\004\010\371\001\001\000\006\023\362" +
    "\024\360\001\001\000\004\024\353\001\001\000\002\001" +
    "\001\000\004\023\355\001\001\000\002\001\001\000\004" +
    "\023\357\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\363\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\367\001\001\000\004\023\366\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\023\u0101\024\377" +
    "\001\001\000\004\024\372\001\001\000\002\001\001\000" +
    "\004\023\374\001\001\000\002\001\001\000\004\023\376" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u0102\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\u0106\001\001\000\004\023\u0105\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\u010b" +
    "\001\001\000\004\023\u010a\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\u0119\024\u0117\001\001\000\004" +
    "\024\u010e\001\001\000\002\001\001\000\004\023\u0112\001" +
    "\001\000\004\023\u0111\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\u0116\001\001\000\004\023\u0115\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\u011a\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\023\u011e\001\001\000\004\023\u011d\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\u0135\001" +
    "\001\000\004\027\u0131\001\001\000\002\001\001\000\006" +
    "\025\u0124\027\u0125\001\001\000\004\003\u012d\001\001\000" +
    "\004\027\u0129\001\001\000\002\001\001\000\004\003\u0127" +
    "\001\001\000\002\001\001\000\004\003\u012c\001\001\000" +
    "\002\001\001\000\004\003\u012b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\u012f\001" +
    "\001\000\002\001\001\000\004\003\u0134\001\001\000\002" +
    "\001\001\000\004\003\u0133\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u013a\001\001" +
    "\000\002\001\001\000\004\003\u0139\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\033\u0246\001\001\000\004" +
    "\033\u013f\001\001\000\004\011\u0236\001\001\000\010\011" +
    "\u0204\030\u01fe\031\u01fc\001\001\000\002\001\001\000\042" +
    "\004\155\006\u0145\007\u0147\013\164\014\u0143\015\u0149\016" +
    "\u014e\023\u01eb\026\165\032\u01e9\034\167\037\u0150\040\u014d" +
    "\041\170\043\172\045\157\001\001\000\044\004\155\006" +
    "\u0145\007\u0147\013\164\014\u0143\015\u0149\016\u014e\023\u0148" +
    "\026\165\027\u0151\032\u0144\034\167\037\u0150\040\u014d\041" +
    "\170\043\172\045\157\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\027" +
    "\u01c7\001\001\000\002\001\001\000\040\004\155\006\u0145" +
    "\007\u0147\013\164\014\u0143\015\u0149\016\u014e\026\165\032" +
    "\u01be\034\167\037\u0150\040\u014d\041\170\043\172\045\157" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\004" +
    "\155\013\164\026\165\034\167\037\u0197\041\170\043\172" +
    "\045\157\001\001\000\002\001\001\000\040\004\155\006" +
    "\u0145\007\u0147\013\164\014\u0143\015\u0149\016\u014e\026\165" +
    "\032\u0176\034\167\037\u0150\040\u014d\041\170\043\172\045" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\176\001\001\000\002\001\001\000\040\004\155\006" +
    "\u0145\007\u0147\013\164\014\u0143\015\u0149\016\u014e\026\165" +
    "\032\u0153\034\167\037\u0150\040\u014d\041\170\043\172\045" +
    "\157\001\001\000\002\001\001\000\022\004\155\013\164" +
    "\026\165\034\167\037\u016c\041\170\043\172\045\157\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\004\155" +
    "\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162\020" +
    "\u015a\026\165\034\167\037\u0163\041\170\042\u015e\043\172" +
    "\045\157\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\004\155\006\u015c\007\u015f\013\164\014\u0159\015\u0160" +
    "\016\u0162\020\u015a\026\165\034\167\037\u0163\041\170\042" +
    "\u016a\043\172\045\157\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\004\155\013\164\026\165" +
    "\034\167\037\u0166\041\170\043\172\045\157\001\001\000" +
    "\002\001\001\000\004\012\176\001\001\000\040\004\155" +
    "\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162\020" +
    "\u015a\026\165\034\167\037\u0163\041\170\042\u0165\043\172" +
    "\045\157\001\001\000\002\001\001\000\004\012\176\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\012\176\001" +
    "\001\000\002\001\001\000\040\004\155\006\u015c\007\u015f" +
    "\013\164\014\u0159\015\u0160\016\u0162\020\u015a\026\165\034" +
    "\167\037\u0163\041\170\042\u0174\043\172\045\157\001\001" +
    "\000\040\004\155\006\u015c\007\u015f\013\164\014\u0159\015" +
    "\u0160\016\u0162\020\u015a\026\165\034\167\037\u0163\041\170" +
    "\042\u0171\043\172\045\157\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\040\004" +
    "\155\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162" +
    "\020\u015a\026\165\034\167\037\u0163\041\170\042\u0187\043" +
    "\172\045\157\001\001\000\040\004\155\006\u015c\007\u015f" +
    "\013\164\014\u0159\015\u0160\016\u0162\020\u015a\026\165\034" +
    "\167\037\u0163\041\170\042\u017a\043\172\045\157\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\004\155\013\164\026\165\034\167" +
    "\037\u017e\041\170\043\172\045\157\001\001\000\004\012" +
    "\176\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\004\155\013\164\026\165\034\167\037" +
    "\u0183\041\170\043\172\045\157\001\001\000\004\012\176" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\004\155\013\164\026\165\034" +
    "\167\037\u018c\041\170\043\172\045\157\001\001\000\004" +
    "\012\176\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\004\155\013\164\026\165\034\167\037" +
    "\u0194\041\170\043\172\045\157\001\001\000\004\012\176" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\012" +
    "\176\001\001\000\002\001\001\000\022\004\155\013\164" +
    "\026\165\034\167\037\u01aa\041\170\043\172\045\157\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\004\155" +
    "\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162\020" +
    "\u015a\026\165\034\167\037\u0163\041\170\042\u019e\043\172" +
    "\045\157\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\040\004\155\006\u015c" +
    "\007\u015f\013\164\014\u0159\015\u0160\016\u0162\020\u015a\026" +
    "\165\034\167\037\u0163\041\170\042\u01a3\043\172\045\157" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\040\004\155\006\u015c\007\u015f" +
    "\013\164\014\u0159\015\u0160\016\u0162\020\u015a\026\165\034" +
    "\167\037\u0163\041\170\042\u01a8\043\172\045\157\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\012\176\001\001\000\002\001\001\000\040\004\155" +
    "\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162\020" +
    "\u015a\026\165\034\167\037\u0163\041\170\042\u01b1\043\172" +
    "\045\157\001\001\000\040\004\155\006\u015c\007\u015f\013" +
    "\164\014\u0159\015\u0160\016\u0162\020\u015a\026\165\034\167" +
    "\037\u0163\041\170\042\u01af\043\172\045\157\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\040\004" +
    "\155\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162" +
    "\020\u015a\026\165\034\167\037\u0163\041\170\042\u01b5\043" +
    "\172\045\157\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\004\155\006\u015c\007\u015f\013\164\014\u0159\015\u0160" +
    "\016\u0162\020\u015a\026\165\034\167\037\u0163\041\170\042" +
    "\u01bc\043\172\045\157\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\027" +
    "\u01c2\001\001\000\004\027\u01c1\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u01c6\001\001\000\004\027" +
    "\u01c5\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u01cb\001\001\000\004\027\u01ca\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\021\u01d3" +
    "\026\165\035\u01d4\041\u01d5\001\001\000\002\001\001\000" +
    "\002\001\001\000\040\004\155\006\u015c\007\u015f\013\164" +
    "\014\u0159\015\u0160\016\u0162\020\u015a\026\165\034\167\037" +
    "\u0163\041\170\042\u01d1\043\172\045\157\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\044\u01da\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\004\155\013\164\026" +
    "\165\034\167\037\u01d9\041\170\043\172\045\157\001\001" +
    "\000\004\012\176\001\001\000\022\004\155\013\164\026" +
    "\165\034\167\037\u01db\041\170\043\172\045\157\001\001" +
    "\000\004\012\176\001\001\000\022\004\155\013\164\026" +
    "\165\034\167\037\u01dd\041\170\043\172\045\157\001\001" +
    "\000\004\012\176\001\001\000\022\004\155\013\164\026" +
    "\165\034\167\037\u01df\041\170\043\172\045\157\001\001" +
    "\000\004\012\176\001\001\000\002\001\001\000\040\004" +
    "\155\006\u015c\007\u015f\013\164\014\u0159\015\u0160\016\u0162" +
    "\020\u015a\026\165\034\167\037\u0163\041\170\042\u01e7\043" +
    "\172\045\157\001\001\000\040\004\155\006\u015c\007\u015f" +
    "\013\164\014\u0159\015\u0160\016\u0162\020\u015a\026\165\034" +
    "\167\037\u0163\041\170\042\u01e4\043\172\045\157\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u01f7\001\001\000\040\004\155\006" +
    "\u0145\007\u0147\013\164\014\u0143\015\u0149\016\u014e\026\165" +
    "\032\u01ee\034\167\037\u0150\040\u014d\041\170\043\172\045" +
    "\157\001\001\000\004\027\u01ed\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u01f2\001\001\000\004\027" +
    "\u01f1\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\u01f6\001\001\000\004\027\u01f5\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u01fb" +
    "\001\001\000\004\027\u01fa\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\030\u0233\031\u0232" +
    "\001\001\000\004\031\u0231\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\030\u020e\001\001" +
    "\000\004\030\u020d\001\001\000\002\001\001\000\006\030" +
    "\u020b\031\u020a\001\001\000\006\030\u0208\031\u0207\001\001" +
    "\000\002\001\001\000\004\031\u0209\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\031\u020c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u0213\001\001\000\002\001\001\000\004\011\u0212\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u022e\001\001\000\002\001" +
    "\001\000\004\011\u0230\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\u0234\001\001\000" +
    "\002\001\001\000\006\030\u0244\031\u0243\001\001\000\002" +
    "\001\001\000\006\030\u0239\031\u0238\001\001\000\002\001" +
    "\001\000\004\031\u023a\001\001\000\002\001\001\000\006" +
    "\030\u0241\031\u0240\001\001\000\006\030\u023e\031\u023d\001" +
    "\001\000\002\001\001\000\004\031\u023f\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\u0242\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\031\u0245\001\001" +
    "\000\002\001\001\000\002\001\001\000\042\004\155\006" +
    "\u0145\007\u0147\013\164\014\u0143\015\u0149\016\u014e\023\u025d" +
    "\026\165\032\u025b\034\167\037\u0150\040\u014d\041\170\043" +
    "\172\045\157\001\001\000\044\004\155\006\u0145\007\u0147" +
    "\013\164\014\u0143\015\u0149\016\u014e\023\u024b\026\165\027" +
    "\u024c\032\u0249\034\167\037\u0150\040\u014d\041\170\043\172" +
    "\045\157\001\001\000\002\001\001\000\004\027\u0256\001" +
    "\001\000\040\004\155\006\u0145\007\u0147\013\164\014\u0143" +
    "\015\u0149\016\u014e\026\165\032\u024d\034\167\037\u0150\040" +
    "\u014d\041\170\043\172\045\157\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u0251\001\001\000\004\027" +
    "\u0250\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\u0255\001\001\000\004\027\u0254\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u025a" +
    "\001\001\000\004\027\u0259\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\027\u0269\001\001" +
    "\000\040\004\155\006\u0145\007\u0147\013\164\014\u0143\015" +
    "\u0149\016\u014e\026\165\032\u0260\034\167\037\u0150\040\u014d" +
    "\041\170\043\172\045\157\001\001\000\004\027\u025f\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u0264" +
    "\001\001\000\004\027\u0263\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\027\u0268\001\001\000\004\027\u0267" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\027\u026d\001\001\000\004\027\u026c\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\022\u0270\023" +
    "\u0271\025\u026f\027\u0273\001\001\000\004\027\u029a\001\001" +
    "\000\010\023\u0285\025\u0283\027\u0284\001\001\000\006\025" +
    "\u0278\027\u0279\001\001\000\004\003\u0276\001\001\000\002" +
    "\001\001\000\004\003\u0275\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\u0281\001\001\000\004\027\u027d" +
    "\001\001\000\002\001\001\000\004\003\u027b\001\001\000" +
    "\002\001\001\000\004\003\u0280\001\001\000\002\001\001" +
    "\000\004\003\u027f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0298\001\001\000\004" +
    "\027\u0294\001\001\000\002\001\001\000\006\025\u0287\027" +
    "\u0288\001\001\000\004\003\u0290\001\001\000\004\027\u028c" +
    "\001\001\000\002\001\001\000\004\003\u028a\001\001\000" +
    "\002\001\001\000\004\003\u028f\001\001\000\002\001\001" +
    "\000\004\003\u028e\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0292\001\001\000\002" +
    "\001\001\000\004\003\u0297\001\001\000\002\001\001\000" +
    "\004\003\u0296\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\u029d\001\001\000\002\001" +
    "\001\000\004\003\u029c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\u02a0\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  public ArrayList<Symbol> errores = new ArrayList<>();
  public ArrayList<String> erroresStr = new ArrayList<>();
  
  public void syntax_error(Symbol s) {
    System.out.println("ERROR EN " + s.value + " " + Integer.toString(s.right + 1) + ": " + Integer.toString(s.left + 1) );
    String cadena = "";
    for (int i = this.stack.size() - 1; i > 0; i--) {
      Symbol sp = this.stack.get(i);
       
      System.out.println(sp.value + " " + Integer.toString(sp.right + 1) + ": " + Integer.toString(sp.left + 1) );
      cadena = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena;
      System.out.println(cadena );
        if(sym.T_dato == sp.sym){
              String cadena2= cadena;
              for(int j = i-1; j > 0; j--){                
                  sp = this.stack.get(j);
                  cadena2 = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena2;
                  if ("struct".equals(sp.value)) {
                      Symbol sp3 = (this.stack.get(j+1).value == null ? this.stack.get(j+2) : this.stack.get(j+1));
                      cadena =sp.value+" "+sp3.value+" ... "+ cadena + "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Variable_Struct");
                      break;
                  }
                  if("(".equals(sp.value)){
                      for(int k = j-1; k > 0; k--){ 
                          sp = this.stack.get(k);
                          cadena2 = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena2;
                          if ("function".equals(sp.value)) {
                              
                              cadena2 += "~" + s.value + "~ ...";
                              Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena2);
                              errores.add(sp2);
                              erroresStr.add("Parametro_Function");
                              break;
                          }
                          if ("returns".equals(sp.value)) {
                              for(int l=k-1;l>0; l--){
                              sp = this.stack.get(l);
                              cadena2 = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena2;
                                if ("function".equals(sp.value)) {                             
                                    cadena2 += "~" + s.value + "~ ...";
                                    Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena2);
                                    errores.add(sp2);
                                    erroresStr.add("Returns_Function");
                                    break;
                                }
                             }
                             break;
                          }
                      }
                      break;
                  }
                  if ("returns".equals(sp.value)) {
                              for(int k=j-1;k>0; k--){
                              sp = this.stack.get(k);
                              cadena2 = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena2;
                                if ("function".equals(sp.value)) {                             
                                    cadena2 += "~" + s.value + "~ ...";
                                    Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena2);
                                    errores.add(sp2);
                                    erroresStr.add("Returns_Function");
                                    break;
                                }
                             }
                             
                             break;
                          }

                  if ("contract".equals(sp.value)){
                      Symbol sp3 = (this.stack.get(j+1).value == null ? this.stack.get(j+2) : this.stack.get(j+1));
                      cadena =sp.value+" "+sp3.value+" ... "+ cadena + "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Variable_Contract");
                      break;
                  }
                  if ("function".equals(sp.value)){
                      Symbol sp3 = (this.stack.get(j+1).value == null ? this.stack.get(j+2) : this.stack.get(j+1));
                      cadena =sp.value+" "+sp3.value+" ... "+ cadena + "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Variable_Function");
                      break;
                  }
              }
              break;  
        }
        if ("returns".equals(sp.value)) {
        System.out.println("Es aquí la verdad");
            for(int j=i-1;j>0; j--){
                sp = this.stack.get(j);
                cadena = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena;
                  if ("function".equals(sp.value)) {   
                        System.out.println(cadena);
                      cadena += "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Returns_Function");
                      break;
                  }
               }
               System.out.println("Toy aquí");
               break;
        }
      if ("enum".equals(sp.value)) {
        System.out.println("Soy un error de enum xd");
        //System.out.println("Soy un error de enum xd");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Enum"+" (" + Integer.toString(sp.right+1) + ")");
        break;
      }
      if ("struct".equals(sp.value)) {
        //System.out.println("Soy un error de struct chama");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Struct");
        break;
      }
      if ("function".equals(sp.value)) {
        System.out.println("Soy un error de function chama");
        cadena += "~" + s.value + "~ ...";
        System.out.println(cadena);
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Function");
        break;
      }
      if ("pragma".equals(sp.value)) {
        //System.out.println("Soy un error de inicio");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Inicio");
        break;
      }
      if ("contract".equals(sp.value)) {
        //System.out.println("Soy un error de inicio");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Inicio");
        break;
      }
      if ("if".equals(sp.value)) {
        //System.out.println("Soy un error de if");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);

        errores.add(sp2);
        erroresStr.add("If");
        

        break;
      }
      if ("for".equals(sp.value)) {
        //System.out.println("Soy un error de for");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("For");

        break;
      }
      if ("while".equals(sp.value)) {
        //System.out.println("Soy un error de while");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("While");

        break;
      }
      if ("do".equals(sp.value)) {
        //System.out.println("Soy un error de do");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Do");

        break;
      }
        }
  }
  @Override
  public int error_sync_size() {
    return 2;
  }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // SENTENCIA_FOR ::= ASIGNACION_COMPLEJA P_coma EXPRESION P_coma EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_FOR",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // FOR ::= For error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // FOR ::= For error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // DO_WHILE ::= Do Llave_a Llave_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // DO_WHILE ::= Do Llave_a CUERPO_EC Llave_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // DO_WHILE ::= Do error Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // DO_WHILE ::= Do error CUERPO_EC Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // DO_WHILE ::= Do Llave_a Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // DO_WHILE ::= Do Llave_a CUERPO_EC Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // WHILE ::= While error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // WHILE ::= While error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // IF_ELSE ::= If error Parentesis_c Llave_a Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // IF_ELSE ::= If error Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // IF_ELSE ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // IF_ELSE ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // EXPRESION_BOOLEANA ::= P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_BOOLEANA",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // IF ::= If Parentesis_a EXPRESION Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // IF ::= If Parentesis_a EXPRESION Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // IF ::= If error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // IF ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // IF ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // IF ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // OP_TERNARIO ::= Parentesis_a EXPRESION Parentesis_c Pregunta EXPRESION Dos_Puntos EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_TERNARIO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // CUERPO_EC ::= SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // CUERPO_EC ::= EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // CUERPO_EC ::= SENTENCIA CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // CUERPO_EC ::= EXPRESION P_coma CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // SENTENCIA ::= Return EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // SENTENCIA ::= Continue P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // SENTENCIA ::= Break P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // SENTENCIA ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // SENTENCIA ::= DO_WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // SENTENCIA ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // SENTENCIA ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // SENTENCIA ::= IF_ELSE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // ESTRUCTURA_CONTROL ::= Return EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // ESTRUCTURA_CONTROL ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // ESTRUCTURA_CONTROL ::= DO_WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // ESTRUCTURA_CONTROL ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // ESTRUCTURA_CONTROL ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // ESTRUCTURA_CONTROL ::= IF_ELSE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // OP_UNARIO ::= Not 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // OP_UNARIO ::= Menos 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // OP_UNARIO ::= Mas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // OP_ARITMETICO ::= Menos 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // OP_ARITMETICO ::= Mas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // OP_ARITMETICO ::= Op_Aritmetico 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // EXPRESION_TERM ::= IDENTIFICADOR_CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // EXPRESION_TERM ::= LITERAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // EXPRESION_TERM ::= OP_TERNARIO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // EXPRESION_TERM ::= ASIGNACION_BASICA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // EXPRESION_TERM ::= OP_UNARIO EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // EXPRESION_TERM ::= Parentesis_a EXPRESION Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // EXPRESION ::= EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // EXPRESION ::= EXPRESION Op_logico EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // EXPRESION ::= EXPRESION OP_ARITMETICO EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // LITERAL ::= Op_booleano 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // LITERAL ::= String 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // LITERAL ::= Numero 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // ARGUMENTOS ::= EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARGUMENTOS",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // ARGUMENTOS ::= EXPRESION Coma ARGUMENTOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARGUMENTOS",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ATRIBUCION_IGUAL ::= Igual 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATRIBUCION_IGUAL",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ATRIBUCION_IGUAL ::= Op_atribucion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATRIBUCION_IGUAL",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ASIGNACION_COMPLEJA ::= T_dato Identificador Igual EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_COMPLEJA",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ASIGNACION_COMPLEJA ::= IDENTIFICADOR_CUERPO ATRIBUCION_IGUAL EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_COMPLEJA",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ASIGNACION_BASICA ::= LITERAL ATRIBUCION_IGUAL EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_BASICA",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ASIGNACION_BASICA ::= IDENTIFICADOR_CUERPO ATRIBUCION_IGUAL EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_BASICA",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // IDENTIFICADOR_CUERPO ::= IDENTIFICADOR_COMPLEJO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_CUERPO",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // IDENTIFICADOR_CUERPO ::= IDENTIFICADOR_COMPLEJO Punto IDENTIFICADOR_CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_CUERPO",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // IDENTIFICADOR_COMPLEJO ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // IDENTIFICADOR_COMPLEJO ::= Identificador Parentesis_a ARGUMENTOS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // IDENTIFICADOR_COMPLEJO ::= Identificador Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // IDENTIFICADOR_COMPLEJO ::= This 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // IDENTIFICADOR_COMPLEJO ::= This Parentesis_a ARGUMENTOS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // IDENTIFICADOR_COMPLEJO ::= This Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // CUERPO ::= ESTRUCTURA_CONTROL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // CUERPO ::= EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // CUERPO ::= ESTRUCTURA_CONTROL CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // CUERPO ::= EXPRESION P_coma CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // MODIFICADORES ::= Visibilidad 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // MODIFICADORES ::= Modificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // MODIFICADORES ::= Visibilidad MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // MODIFICADORES ::= Modificador MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // PARAMETROS ::= error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // PARAMETROS ::= T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // PARAMETROS ::= T_dato error Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // PARAMETROS ::= error Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // PARAMETROS ::= error Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // PARAMETROS ::= error Identificador Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // PARAMETROS ::= T_dato Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // PARAMETROS ::= T_dato Identificador Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // RETURNS ::= Returns error Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // RETURNS ::= Returns error T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // RETURNS ::= Returns Parentesis_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // RETURNS ::= Returns error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // RETURNS ::= Returns error Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // RETURNS ::= Returns error T_dato error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // RETURNS ::= Returns Parentesis_a error Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // RETURNS ::= Returns Parentesis_a T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // RETURNS ::= Returns error T_dato Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // RETURNS ::= Returns Parentesis_a error Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // RETURNS ::= Returns Parentesis_a T_dato Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // RETURNS ::= Returns Parentesis_a T_dato error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // RETURNS ::= Returns error T_dato Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // RETURNS ::= Returns Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // RETURNS ::= Returns Parentesis_a T_dato Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // FUNCION ::= Function error FUNCION_HEADER error CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // FUNCION ::= Function error FUNCION_HEADER error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // FUNCION ::= Function error FUNCION_HEADER error CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // FUNCION ::= Function Identificador FUNCION_HEADER error CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // FUNCION ::= Function Identificador FUNCION_HEADER error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // FUNCION ::= Function Identificador FUNCION_HEADER error CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // FUNCION ::= Function error FUNCION_HEADER Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // FUNCION ::= Function error FUNCION_HEADER Llave_a CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // FUNCION ::= Function error FUNCION_HEADER Llave_a error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // FUNCION ::= Function error FUNCION_HEADER Llave_a CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // FUNCION ::= Function error FUNCION_HEADER error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // FUNCION ::= Function error FUNCION_HEADER error CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // FUNCION ::= Function error FUNCION_HEADER error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // FUNCION ::= Function error FUNCION_HEADER error CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // FUNCION ::= Function error FUNCION_HEADER error VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // FUNCION ::= Function Identificador FUNCION_HEADER error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // FUNCION ::= Function Identificador FUNCION_HEADER error CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // FUNCION ::= Function Identificador FUNCION_HEADER error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // FUNCION ::= Function Identificador FUNCION_HEADER error CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // FUNCION ::= Function Identificador FUNCION_HEADER error VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // FUNCION ::= Function error FUNCION_HEADER Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // FUNCION ::= Function error FUNCION_HEADER Llave_a CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // FUNCION ::= Function error FUNCION_HEADER Llave_a Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // FUNCION ::= Function error FUNCION_HEADER Llave_a CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // FUNCION ::= Function error FUNCION_HEADER Llave_a VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // FUNCION ::= Function Identificador FUNCION_HEADER Llave_a VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // FUNCION_HEADER ::= error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // FUNCION_HEADER ::= error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // FUNCION_HEADER ::= error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // FUNCION_HEADER ::= error PARAMETROS error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // FUNCION_HEADER ::= error PARAMETROS error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // FUNCION_HEADER ::= error PARAMETROS error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // FUNCION_HEADER ::= error PARAMETROS error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // FUNCION_HEADER ::= Parentesis_a error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // FUNCION_HEADER ::= Parentesis_a error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // FUNCION_HEADER ::= Parentesis_a error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // FUNCION_HEADER ::= Parentesis_a PARAMETROS error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // FUNCION_HEADER ::= error Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // FUNCION_HEADER ::= error Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // FUNCION_HEADER ::= error Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // FUNCION_HEADER ::= error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // FUNCION_HEADER ::= error PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // FUNCION_HEADER ::= Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // FUNCION_HEADER ::= Parentesis_a Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // FUNCION_HEADER ::= Parentesis_a Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // FUNCION_HEADER ::= Parentesis_a Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // FUNCION_HEADER ::= Parentesis_a PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // ESTRUCTURA ::= Struct error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // ESTRUCTURA ::= Struct error Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // ESTRUCTURA ::= Struct error Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // ESTRUCTURA ::= Struct error Llave_a error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // ESTRUCTURA ::= Struct error Llave_a VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // ESTRUCTURA ::= Struct Identificador error VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // ESTRUCTURA ::= Struct Identificador error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // ESTRUCTURA ::= Struct Identificador error VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // ESTRUCTURA ::= Struct error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // ESTRUCTURA ::= Struct error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // ESTRUCTURA ::= Struct error Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // ESTRUCTURA ::= Struct error VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // ESTRUCTURA ::= Struct Identificador Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // ESTRUCTURA ::= Struct Identificador Llave_a error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // ESTRUCTURA ::= Struct Identificador error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // ESTRUCTURA ::= Struct Identificador error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // ESTRUCTURA ::= Struct Identificador error Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // ESTRUCTURA ::= Struct Identificador error VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // ESTRUCTURA ::= Struct error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // ESTRUCTURA ::= Struct error Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // ESTRUCTURA ::= Struct error Llave_a Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // ESTRUCTURA ::= Struct error Llave_a VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // ESTRUCTURA ::= Struct Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // ESTRUCTURA ::= Struct Identificador Llave_a Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // ASIGNACION ::= Igual EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // VARIABLES ::= T_dato error Corchete_c error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // VARIABLES ::= T_dato Corchete_a error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // VARIABLES ::= T_dato Corchete_a error Visibilidad error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // VARIABLES ::= T_dato error Corchete_c Visibilidad error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // VARIABLES ::= T_dato error Corchete_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // VARIABLES ::= T_dato Corchete_a error Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // VARIABLES ::= T_dato error Corchete_c Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // VARIABLES ::= T_dato error Corchete_c error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // VARIABLES ::= T_dato Corchete_a error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // VARIABLES ::= T_dato Corchete_a error Visibilidad error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // VARIABLES ::= T_dato error Corchete_c Visibilidad error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // VARIABLES ::= T_dato error Corchete_c error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // VARIABLES ::= T_dato Corchete_a error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // VARIABLES ::= T_dato Corchete_a error Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // VARIABLES ::= T_dato error Corchete_c Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // VARIABLES ::= T_dato Corchete_a Corchete_c error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // VARIABLES ::= T_dato error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // VARIABLES ::= T_dato Visibilidad error ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // VARIABLES ::= T_dato Corchete_a Corchete_c error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // VARIABLES ::= T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // VARIABLES ::= T_dato Visibilidad error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // VARIABLES ::= T_dato Corchete_a Corchete_c error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // VARIABLES ::= T_dato error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // VARIABLES ::= T_dato Visibilidad error ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // VARIABLES ::= T_dato Corchete_a Corchete_c error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // VARIABLES ::= T_dato error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // VARIABLES ::= T_dato Visibilidad error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // VARIABLES ::= T_dato LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // VARIABLES ::= T_dato LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // VARIABLES ::= T_dato Visibilidad LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // VARIABLES ::= T_dato LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // VARIABLES ::= T_dato LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // VARIABLES ::= T_dato Visibilidad LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // VARIABLES ::= T_dato error Corchete_c error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // VARIABLES ::= T_dato error Corchete_c Visibilidad error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // VARIABLES ::= T_dato error Corchete_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // VARIABLES ::= T_dato error Corchete_c Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // VARIABLES ::= T_dato error Corchete_c error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // VARIABLES ::= T_dato error Corchete_c Visibilidad error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // VARIABLES ::= T_dato error Corchete_c error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // VARIABLES ::= T_dato error Corchete_c Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // VARIABLES ::= T_dato Corchete_a error LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // VARIABLES ::= T_dato Corchete_a error LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // VARIABLES ::= T_dato Corchete_a error LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // VARIABLES ::= T_dato Corchete_a error LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // VARIABLES ::= T_dato error Corchete_c LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // VARIABLES ::= T_dato error Corchete_c LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // VARIABLES ::= T_dato error Corchete_c LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // VARIABLES ::= T_dato error Corchete_c LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // VARIABLES ::= T_dato Corchete_a Corchete_c error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // VARIABLES ::= T_dato error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // VARIABLES ::= T_dato Visibilidad error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // VARIABLES ::= T_dato Corchete_a Corchete_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // VARIABLES ::= T_dato error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // VARIABLES ::= T_dato Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // VARIABLES ::= T_dato Corchete_a Corchete_c error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // VARIABLES ::= T_dato error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // VARIABLES ::= T_dato Visibilidad error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // VARIABLES ::= T_dato Corchete_a Corchete_c error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // VARIABLES ::= T_dato error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // VARIABLES ::= T_dato Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // VARIABLES ::= T_dato LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // VARIABLES ::= T_dato LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // VARIABLES ::= T_dato Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // VARIABLES ::= T_dato LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // VARIABLES ::= T_dato LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // VARIABLES ::= T_dato Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // LISTA ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // LISTA ::= Identificador Coma LISTA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ENUMERADOR ::= Enum Identificador error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ENUMERADOR ::= Enum Identificador error LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ENUMERADOR ::= Enum error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ENUMERADOR ::= Enum error Llave_a LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ENUMERADOR ::= Enum Identificador error Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ENUMERADOR ::= Enum Identificador error LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ENUMERADOR ::= Enum error Llave_a Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ENUMERADOR ::= Enum error Llave_a LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ENUMERADOR ::= Enum Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ENUMERADOR ::= Enum Identificador Llave_a LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ENUMERADOR ::= Enum Identificador Llave_a Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ENUMERADOR ::= Enum Identificador Llave_a LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // CONTRATO ::= Contract error Llave_a FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CONTRATO ::= Contract error Llave_a ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CONTRATO ::= Contract error Llave_a ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CONTRATO ::= Contract error Llave_a VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CONTRATO ::= Contract error Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // CONTRATO ::= Contract error Llave_a ENUMERADOR FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CONTRATO ::= Contract error Llave_a ENUMERADOR Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CONTRATO ::= Contract error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CONTRATO ::= Contract error Llave_a FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CONTRATO ::= Contract error Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CONTRATO ::= Contract error Llave_a ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // CONTRATO ::= Contract error Llave_a VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // CONTRATO ::= Contract error Llave_a VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CONTRATO ::= Contract error Llave_a ENUMERADOR FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CONTRATO ::= Contract error Llave_a ENUMERADOR Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CONTRATO ::= Contract error Llave_a Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CONTRATO ::= Contract Identificador Llave_a FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONTRATO ::= Contract Identificador Llave_a VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONTRATO ::= Contract Identificador Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTRATO ::= Contract Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CONTRATO ::= Contract Identificador Llave_a FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CONTRATO ::= Contract Identificador Llave_a VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CONTRATO ::= Contract Identificador Llave_a VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CONTRATO ::= Contract Identificador Llave_a Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= Pragma error CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= Pragma Solidity Caret Numero Numero P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= Pragma Solidity Numero Numero P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

