
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
<<<<<<< Updated upstream
// Fri Jul 24 18:56:25 CST 2020
=======
// Fri Jul 24 17:51:32 CST 2020
>>>>>>> Stashed changes
//----------------------------------------------------

package lexico;

import java_cup.runtime.Symbol;
import java.util.Stack;
import java.util.ArrayList;
import java.util.Iterator;

/** CUP v0.11a beta 20060608 generated parser.
<<<<<<< Updated upstream
  * @version Fri Jul 24 18:56:25 CST 2020
=======
  * @version Fri Jul 24 17:51:32 CST 2020
>>>>>>> Stashed changes
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u013e\000\002\002\004\000\002\002\010\000\002\002" +
    "\011\000\002\002\006\000\002\002\012\000\002\003\007" +
    "\000\002\003\010\000\002\003\011\000\002\003\011\000" +
    "\002\003\011\000\002\003\012\000\002\003\012\000\002" +
    "\003\012\000\002\003\013\000\002\003\010\000\002\003" +
    "\011\000\002\003\011\000\002\003\012\000\002\003\010" +
    "\000\002\003\011\000\002\003\010\000\002\003\006\000" +
    "\002\003\007\000\002\003\010\000\002\003\010\000\002" +
    "\003\010\000\002\003\011\000\002\003\011\000\002\003" +
    "\011\000\002\003\012\000\002\003\007\000\002\003\010" +
    "\000\002\003\010\000\002\003\011\000\002\003\007\000" +
    "\002\003\010\000\002\003\007\000\002\003\007\000\002" +
    "\003\010\000\002\003\011\000\002\003\011\000\002\003" +
    "\011\000\002\003\012\000\002\003\012\000\002\003\012" +
    "\000\002\003\013\000\002\003\010\000\002\003\011\000" +
    "\002\003\011\000\002\003\012\000\002\003\010\000\002" +
    "\003\011\000\002\003\010\000\002\003\006\000\002\003" +
    "\007\000\002\003\010\000\002\003\010\000\002\003\010" +
    "\000\002\003\011\000\002\003\011\000\002\003\011\000" +
    "\002\003\012\000\002\003\007\000\002\003\010\000\002" +
    "\003\010\000\002\003\011\000\002\003\007\000\002\003" +
    "\010\000\002\003\007\000\002\022\010\000\002\022\007" +
    "\000\002\022\007\000\002\022\006\000\002\022\010\000" +
    "\002\022\007\000\002\022\010\000\002\022\007\000\002" +
    "\022\007\000\002\022\006\000\002\022\007\000\002\022" +
    "\006\000\002\010\005\000\002\010\003\000\002\023\007" +
    "\000\002\023\006\000\002\023\011\000\002\023\010\000" +
    "\002\023\010\000\002\023\007\000\002\023\012\000\002" +
    "\023\011\000\002\023\006\000\002\023\005\000\002\023" +
    "\010\000\002\023\007\000\002\023\007\000\002\023\006" +
    "\000\002\023\011\000\002\023\010\000\002\023\007\000" +
    "\002\023\006\000\002\023\011\000\002\023\010\000\002" +
    "\023\010\000\002\023\007\000\002\023\012\000\002\023" +
    "\011\000\002\023\006\000\002\023\005\000\002\023\010" +
    "\000\002\023\007\000\002\023\007\000\002\023\006\000" +
    "\002\023\011\000\002\023\017\000\002\023\010\000\002" +
    "\023\012\000\002\023\011\000\002\023\010\000\002\023" +
    "\007\000\002\023\011\000\002\023\010\000\002\023\011" +
    "\000\002\023\010\000\002\023\012\000\002\023\011\000" +
    "\002\023\010\000\002\023\007\000\002\023\011\000\002" +
    "\023\010\000\002\023\007\000\002\023\006\000\002\023" +
    "\011\000\002\023\010\000\002\023\010\000\002\023\007" +
    "\000\002\023\012\000\002\023\011\000\002\023\006\000" +
    "\002\023\005\000\002\023\010\000\002\023\007\000\002" +
    "\023\007\000\002\023\006\000\002\023\011\000\002\023" +
    "\010\000\002\024\004\000\002\025\010\000\002\025\007" +
    "\000\002\025\010\000\002\025\010\000\002\025\007\000" +
    "\002\025\007\000\002\025\010\000\002\025\007\000\002" +
    "\033\006\000\002\033\007\000\002\033\007\000\002\033" +
    "\010\000\002\033\006\000\002\033\007\000\002\033\007" +
    "\000\002\033\010\000\002\033\006\000\002\033\007\000" +
    "\002\033\007\000\002\033\010\000\002\033\006\000\002" +
    "\033\007\000\002\033\007\000\002\033\010\000\002\033" +
    "\005\000\002\033\006\000\002\033\006\000\002\033\007" +
    "\000\002\033\005\000\002\033\006\000\002\033\006\000" +
    "\002\033\007\000\002\033\005\000\002\033\006\000\002" +
    "\033\006\000\002\033\007\000\002\033\006\000\002\033" +
    "\006\000\002\033\007\000\002\027\010\000\002\027\011" +
    "\000\002\027\010\000\002\027\007\000\002\027\007\000" +
    "\002\027\010\000\002\027\007\000\002\027\006\000\002" +
    "\027\010\000\002\027\011\000\002\027\010\000\002\027" +
    "\007\000\002\027\007\000\002\027\010\000\002\027\007" +
    "\000\002\027\006\000\002\027\010\000\002\027\011\000" +
    "\002\027\010\000\002\027\007\000\002\027\007\000\002" +
    "\027\010\000\002\027\007\000\002\027\006\000\002\031" +
    "\007\000\002\031\007\000\002\031\007\000\002\031\007" +
    "\000\002\031\005\000\002\011\006\000\002\011\004\000" +
    "\002\011\006\000\002\011\005\000\002\011\004\000\002" +
    "\011\006\000\002\011\004\000\002\011\003\000\002\030" +
    "\004\000\002\030\004\000\002\030\003\000\002\030\003" +
    "\000\002\032\005\000\002\032\004\000\002\032\004\000" +
    "\002\032\003\000\002\026\005\000\002\026\006\000\002" +
    "\026\003\000\002\026\005\000\002\026\006\000\002\026" +
    "\003\000\002\041\005\000\002\041\003\000\002\034\005" +
    "\000\002\034\005\000\002\035\005\000\002\035\006\000" +
    "\002\044\003\000\002\044\003\000\002\036\005\000\002" +
    "\036\003\000\002\045\003\000\002\045\003\000\002\045" +
    "\003\000\002\037\005\000\002\037\005\000\002\037\003" +
    "\000\002\043\005\000\002\043\004\000\002\043\003\000" +
    "\002\043\003\000\002\043\003\000\002\043\003\000\002" +
    "\012\003\000\002\012\003\000\002\012\003\000\002\013" +
    "\003\000\002\013\003\000\002\013\003\000\002\040\003" +
    "\000\002\040\003\000\002\040\003\000\002\040\003\000" +
    "\002\040\003\000\002\040\005\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\004\000\002\020\004\000\002\020\005" +
    "\000\002\042\005\000\002\042\004\000\002\042\004\000" +
    "\002\042\003\000\002\004\011\000\002\006\011\000\002" +
    "\006\010\000\002\006\010\000\002\006\007\000\002\006" +
    "\011\000\002\006\010\000\002\017\003\000\002\007\015" +
    "\000\002\007\014\000\002\007\014\000\002\007\013\000" +
    "\002\007\014\000\002\007\013\000\002\007\013\000\002" +
    "\007\012\000\002\014\011\000\002\014\010\000\002\014" +
    "\010\000\002\014\007\000\002\014\011\000\002\014\010" +
    "\000\002\015\013\000\002\015\012\000\002\015\013\000" +
    "\002\015\012\000\002\015\010\000\002\015\007\000\002" +
    "\016\011\000\002\016\010\000\002\016\010\000\002\016" +
    "\007\000\002\016\011\000\002\016\010\000\002\021\007" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0236\000\004\042\004\001\002\000\006\003\007\043" +
    "\010\001\002\000\004\002\006\001\002\000\004\002\001" +
    "\001\002\000\004\032\u0237\001\002\000\006\037\011\050" +
    "\012\001\002\000\004\037\u0234\001\002\000\004\037\013" +
    "\001\002\000\004\037\014\001\002\000\004\032\015\001" +
    "\002\000\006\003\016\040\017\001\002\000\004\040\017" +
    "\001\002\000\006\003\021\033\022\001\002\000\004\002" +
    "\uffff\001\002\000\004\025\u0203\001\002\000\004\025\023" +
    "\001\002\000\014\006\027\026\033\041\031\044\032\045" +
    "\024\001\002\000\006\003\u0107\033\u0109\001\002\000\006" +
    "\026\u0102\045\024\001\002\000\012\006\027\026\353\044" +
    "\032\045\024\001\002\000\012\003\123\027\124\033\066" +
    "\061\122\001\002\000\010\026\107\044\032\045\024\001" +
    "\002\000\006\003\060\033\061\001\002\000\006\003\040" +
    "\033\041\001\002\000\006\002\uffec\040\017\001\002\000" +
    "\004\026\035\001\002\000\006\002\uffdd\040\017\001\002" +
    "\000\004\002\uffed\001\002\000\004\002\ufffc\001\002\000" +
    "\004\025\054\001\002\000\006\003\043\025\042\001\002" +
    "\000\004\006\027\001\002\000\004\006\027\001\002\000" +
    "\004\026\045\001\002\000\010\026\uff69\044\032\045\uff69" +
    "\001\002\000\006\026\uff6b\045\uff6b\001\002\000\006\003" +
    "\051\026\050\001\002\000\010\026\uff6d\044\032\045\uff6d" +
    "\001\002\000\010\026\uff67\044\032\045\uff67\001\002\000" +
    "\006\026\uff68\045\uff68\001\002\000\006\026\uff6e\045\uff6e" +
    "\001\002\000\004\006\027\001\002\000\004\026\056\001" +
    "\002\000\010\026\uff6a\044\032\045\uff6a\001\002\000\006" +
    "\026\uff6c\045\uff6c\001\002\000\004\025\101\001\002\000" +
    "\006\003\063\025\062\001\002\000\006\026\074\033\066" +
    "\001\002\000\006\026\064\033\066\001\002\000\014\006" +
    "\uffb1\026\uffb1\041\031\044\uffb1\045\uffb1\001\002\000\004" +
    "\026\071\001\002\000\014\003\uffaf\016\uffaf\026\uffaf\032" +
    "\uffaf\047\067\001\002\000\004\033\066\001\002\000\012" +
    "\003\uffb0\016\uffb0\026\uffb0\032\uffb0\001\002\000\014\006" +
    "\uffb2\026\uffb2\041\031\044\uffb2\045\uffb2\001\002\000\012" +
    "\006\uffb6\026\uffb6\044\uffb6\045\uffb6\001\002\000\012\006" +
    "\uffb5\026\uffb5\044\uffb5\045\uffb5\001\002\000\014\006\uffb9" +
    "\026\uffb9\041\031\044\uffb9\045\uffb9\001\002\000\004\026" +
    "\076\001\002\000\014\006\uffba\026\uffba\041\031\044\uffba" +
    "\045\uffba\001\002\000\012\006\uffbc\026\uffbc\044\uffbc\045" +
    "\uffbc\001\002\000\012\006\uffbb\026\uffbb\044\uffbb\045\uffbb" +
    "\001\002\000\006\026\102\033\066\001\002\000\014\006" +
    "\uffb3\026\uffb3\041\031\044\uffb3\045\uffb3\001\002\000\004" +
    "\026\104\001\002\000\014\006\uffb4\026\uffb4\041\031\044" +
    "\uffb4\045\uffb4\001\002\000\012\006\uffb8\026\uffb8\044\uffb8" +
    "\045\uffb8\001\002\000\012\006\uffb7\026\uffb7\044\uffb7\045" +
    "\uffb7\001\002\000\006\002\uffe3\040\017\001\002\000\006" +
    "\026\114\045\024\001\002\000\004\026\112\001\002\000" +
    "\006\002\uffe1\040\017\001\002\000\004\002\ufff1\001\002" +
    "\000\006\002\uffe2\040\017\001\002\000\004\026\116\001" +
    "\002\000\006\002\uffe0\040\017\001\002\000\004\002\ufff0" +
    "\001\002\000\004\002\ufff2\001\002\000\004\002\ufff3\001" +
    "\002\000\006\003\333\033\066\001\002\000\010\016\131" +
    "\030\327\032\251\001\002\000\006\003\222\030\223\001" +
    "\002\000\010\003\130\016\131\032\127\001\002\000\006" +
    "\003\217\032\216\001\002\000\050\003\uffa5\006\027\010" +
    "\uffa5\012\uffa5\013\uffa5\014\uffa5\022\uffa5\023\uffa5\026\uffa5" +
    "\033\uffa5\034\uffa5\035\uffa5\036\uffa5\037\uffa5\044\uffa5\045" +
    "\uffa5\052\uffa5\055\uffa5\056\uffa5\001\002\000\050\003\uff76" +
    "\006\027\010\uff76\012\uff76\013\uff76\014\uff76\022\uff76\023" +
    "\uff76\026\uff76\033\uff76\034\uff76\035\uff76\036\uff76\037\uff76" +
    "\044\uff76\045\uff76\052\uff76\055\uff76\056\uff76\001\002\000" +
    "\024\022\137\023\140\033\143\034\152\035\135\036\136" +
    "\037\150\052\133\055\146\001\002\000\024\003\uff01\015" +
    "\uff01\017\uff01\024\uff01\032\uff01\034\uff01\035\uff01\047\uff01" +
    "\060\uff01\001\002\000\034\003\uff18\015\uff18\016\uff18\017" +
    "\uff18\021\uff18\023\210\024\uff18\032\uff18\034\uff18\035\uff18" +
    "\047\uff18\051\uff18\060\uff18\001\002\000\030\003\uff00\015" +
    "\uff00\016\164\017\uff00\021\163\024\uff00\032\uff00\034\uff00" +
    "\035\uff00\047\uff00\060\uff00\001\002\000\024\022\ufefa\023" +
    "\ufefa\033\ufefa\034\ufefa\035\ufefa\036\ufefa\037\ufefa\052\ufefa" +
    "\055\ufefa\001\002\000\024\022\ufef9\023\ufef9\033\ufef9\034" +
    "\ufef9\035\ufef9\036\ufef9\037\ufef9\052\ufef9\055\ufef9\001\002" +
    "\000\030\003\uff08\015\uff08\016\uff08\017\uff08\021\uff08\024" +
    "\uff08\032\uff08\034\uff08\035\uff08\047\uff08\060\uff08\001\002" +
    "\000\024\022\137\023\140\033\143\034\152\035\135\036" +
    "\136\037\150\052\133\055\146\001\002\000\024\022\137" +
    "\023\140\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\055\146\001\002\000\032\003\uff13\015\uff13\016\uff13" +
    "\017\uff13\021\uff13\024\uff13\032\uff13\034\uff13\035\uff13\047" +
    "\uff13\051\175\060\uff13\001\002\000\034\003\uff15\015\uff15" +
    "\016\uff15\017\uff15\021\uff15\023\166\024\uff15\032\uff15\034" +
    "\uff15\035\uff15\047\uff15\051\uff15\060\uff15\001\002\000\024" +
    "\003\uff02\015\uff02\017\uff02\024\uff02\032\uff02\034\uff02\035" +
    "\uff02\047\uff02\060\uff02\001\002\000\030\003\ufeff\015\ufeff" +
    "\016\164\017\ufeff\021\163\024\ufeff\032\ufeff\034\ufeff\035" +
    "\ufeff\047\ufeff\060\ufeff\001\002\000\030\003\uff09\015\uff09" +
    "\016\uff09\017\uff09\021\uff09\024\uff09\032\uff09\034\uff09\035" +
    "\uff09\047\uff09\060\uff09\001\002\000\024\003\uff05\015\uff05" +
    "\017\uff05\024\uff05\032\uff05\034\uff05\035\uff05\047\uff05\060" +
    "\uff05\001\002\000\030\003\uff0a\015\uff0a\016\uff0a\017\uff0a" +
    "\021\uff0a\024\uff0a\032\uff0a\034\uff0a\035\uff0a\047\uff0a\060" +
    "\uff0a\001\002\000\016\003\uff6f\017\156\032\uff6f\034\154" +
    "\035\155\060\157\001\002\000\024\022\ufefb\023\ufefb\033" +
    "\ufefb\034\ufefb\035\ufefb\036\ufefb\037\ufefb\052\ufefb\055\ufefb" +
    "\001\002\000\024\022\137\023\140\033\143\034\152\035" +
    "\135\036\136\037\150\052\133\055\146\001\002\000\024" +
    "\022\ufefd\023\ufefd\033\ufefd\034\ufefd\035\ufefd\036\ufefd\037" +
    "\ufefd\052\ufefd\055\ufefd\001\002\000\024\022\ufefc\023\ufefc" +
    "\033\ufefc\034\ufefc\035\ufefc\036\ufefc\037\ufefc\052\ufefc\055" +
    "\ufefc\001\002\000\024\022\137\023\140\033\143\034\152" +
    "\035\135\036\136\037\150\052\133\055\146\001\002\000" +
    "\024\022\ufefe\023\ufefe\033\ufefe\034\ufefe\035\ufefe\036\ufefe" +
    "\037\ufefe\052\ufefe\055\ufefe\001\002\000\024\003\uff06\015" +
    "\uff06\017\uff06\024\uff06\032\uff06\034\uff06\035\uff06\047\uff06" +
    "\060\uff06\001\002\000\024\003\uff07\015\uff07\017\uff07\024" +
    "\uff07\032\uff07\034\uff07\035\uff07\047\uff07\060\uff07\001\002" +
    "\000\024\022\137\023\140\033\143\034\152\035\135\036" +
    "\136\037\150\052\133\055\146\001\002\000\024\022\uff0e" +
    "\023\uff0e\033\uff0e\034\uff0e\035\uff0e\036\uff0e\037\uff0e\052" +
    "\uff0e\055\uff0e\001\002\000\024\022\uff0d\023\uff0d\033\uff0d" +
    "\034\uff0d\035\uff0d\036\uff0d\037\uff0d\052\uff0d\055\uff0d\001" +
    "\002\000\024\003\uff12\015\uff12\017\uff12\024\uff12\032\uff12" +
    "\034\uff12\035\uff12\047\uff12\060\uff12\001\002\000\026\022" +
    "\137\023\140\024\167\033\143\034\152\035\135\036\136" +
    "\037\150\052\133\055\146\001\002\000\032\003\uff17\015" +
    "\uff17\016\uff17\017\uff17\021\uff17\024\uff17\032\uff17\034\uff17" +
    "\035\uff17\047\uff17\051\uff17\060\uff17\001\002\000\004\024" +
    "\174\001\002\000\016\017\156\024\uff0b\034\154\035\155" +
    "\047\172\060\157\001\002\000\024\022\137\023\140\033" +
    "\143\034\152\035\135\036\136\037\150\052\133\055\146" +
    "\001\002\000\004\024\uff0c\001\002\000\032\003\uff16\015" +
    "\uff16\016\uff16\017\uff16\021\uff16\024\uff16\032\uff16\034\uff16" +
    "\035\uff16\047\uff16\051\uff16\060\uff16\001\002\000\006\033" +
    "\143\052\133\001\002\000\030\003\uff14\015\uff14\016\uff14" +
    "\017\uff14\021\uff14\024\uff14\032\uff14\034\uff14\035\uff14\047" +
    "\uff14\060\uff14\001\002\000\024\003\uff03\015\uff03\017\uff03" +
    "\024\uff03\032\uff03\034\uff03\035\uff03\047\uff03\060\uff03\001" +
    "\002\000\014\017\156\024\201\034\154\035\155\060\157" +
    "\001\002\000\026\003\uff04\015\uff04\017\uff04\024\uff04\032" +
    "\uff04\034\uff04\035\uff04\047\uff04\060\uff04\062\202\001\002" +
    "\000\024\022\137\023\140\033\143\034\152\035\135\036" +
    "\136\037\150\052\133\055\146\001\002\000\014\015\204" +
    "\017\156\034\154\035\155\060\157\001\002\000\024\022" +
    "\137\023\140\033\143\034\152\035\135\036\136\037\150" +
    "\052\133\055\146\001\002\000\024\003\ufee6\015\ufee6\017" +
    "\ufee6\024\ufee6\032\ufee6\034\ufee6\035\ufee6\047\ufee6\060\ufee6" +
    "\001\002\000\024\022\137\023\140\033\143\034\152\035" +
    "\135\036\136\037\150\052\133\055\146\001\002\000\024" +
    "\003\uff11\015\uff11\017\uff11\024\uff11\032\uff11\034\uff11\035" +
    "\uff11\047\uff11\060\uff11\001\002\000\026\022\137\023\140" +
    "\024\211\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\055\146\001\002\000\032\003\uff1a\015\uff1a\016\uff1a" +
    "\017\uff1a\021\uff1a\024\uff1a\032\uff1a\034\uff1a\035\uff1a\047" +
    "\uff1a\051\uff1a\060\uff1a\001\002\000\004\024\213\001\002" +
    "\000\032\003\uff19\015\uff19\016\uff19\017\uff19\021\uff19\024" +
    "\uff19\032\uff19\034\uff19\035\uff19\047\uff19\051\uff19\060\uff19" +
    "\001\002\000\046\003\uff7e\010\uff7e\012\uff7e\013\uff7e\014" +
    "\uff7e\022\uff7e\023\uff7e\026\uff7e\033\uff7e\034\uff7e\035\uff7e" +
    "\036\uff7e\037\uff7e\044\uff7e\045\uff7e\052\uff7e\055\uff7e\056" +
    "\uff7e\001\002\000\046\003\uffad\010\uffad\012\uffad\013\uffad" +
    "\014\uffad\022\uffad\023\uffad\026\uffad\033\uffad\034\uffad\035" +
    "\uffad\036\uffad\037\uffad\044\uffad\045\uffad\052\uffad\055\uffad" +
    "\056\uffad\001\002\000\050\003\uffa1\006\027\010\uffa1\012" +
    "\uffa1\013\uffa1\014\uffa1\022\uffa1\023\uffa1\026\uffa1\033\uffa1" +
    "\034\uffa1\035\uffa1\036\uffa1\037\uffa1\044\uffa1\045\uffa1\052" +
    "\uffa1\055\uffa1\056\uffa1\001\002\000\050\003\uff72\006\027" +
    "\010\uff72\012\uff72\013\uff72\014\uff72\022\uff72\023\uff72\026" +
    "\uff72\033\uff72\034\uff72\035\uff72\036\uff72\037\uff72\044\uff72" +
    "\045\uff72\052\uff72\055\uff72\056\uff72\001\002\000\046\003" +
    "\uff7a\010\uff7a\012\uff7a\013\uff7a\014\uff7a\022\uff7a\023\uff7a" +
    "\026\uff7a\033\uff7a\034\uff7a\035\uff7a\036\uff7a\037\uff7a\044" +
    "\uff7a\045\uff7a\052\uff7a\055\uff7a\056\uff7a\001\002\000\046" +
    "\003\uffa9\010\uffa9\012\uffa9\013\uffa9\014\uffa9\022\uffa9\023" +
    "\uffa9\026\uffa9\033\uffa9\034\uffa9\035\uffa9\036\uffa9\037\uffa9" +
    "\044\uffa9\045\uffa9\052\uffa9\055\uffa9\056\uffa9\001\002\000" +
    "\006\033\066\061\312\001\002\000\010\003\225\033\066" +
    "\061\224\001\002\000\006\003\272\033\066\001\002\000" +
    "\006\016\131\032\241\001\002\000\010\003\230\016\131" +
    "\032\231\001\002\000\006\003\235\032\234\001\002\000" +
    "\050\003\uff74\006\027\010\uff74\012\uff74\013\uff74\014\uff74" +
    "\022\uff74\023\uff74\026\uff74\033\uff74\034\uff74\035\uff74\036" +
    "\uff74\037\uff74\044\uff74\045\uff74\052\uff74\055\uff74\056\uff74" +
    "\001\002\000\050\003\uffa3\006\027\010\uffa3\012\uffa3\013" +
    "\uffa3\014\uffa3\022\uffa3\023\uffa3\026\uffa3\033\uffa3\034\uffa3" +
    "\035\uffa3\036\uffa3\037\uffa3\044\uffa3\045\uffa3\052\uffa3\055" +
    "\uffa3\056\uffa3\001\002\000\046\003\uffab\010\uffab\012\uffab" +
    "\013\uffab\014\uffab\022\uffab\023\uffab\026\uffab\033\uffab\034" +
    "\uffab\035\uffab\036\uffab\037\uffab\044\uffab\045\uffab\052\uffab" +
    "\055\uffab\056\uffab\001\002\000\046\003\uff7c\010\uff7c\012" +
    "\uff7c\013\uff7c\014\uff7c\022\uff7c\023\uff7c\026\uff7c\033\uff7c" +
    "\034\uff7c\035\uff7c\036\uff7c\037\uff7c\044\uff7c\045\uff7c\052" +
    "\uff7c\055\uff7c\056\uff7c\001\002\000\050\003\uff9f\006\027" +
    "\010\uff9f\012\uff9f\013\uff9f\014\uff9f\022\uff9f\023\uff9f\026" +
    "\uff9f\033\uff9f\034\uff9f\035\uff9f\036\uff9f\037\uff9f\044\uff9f" +
    "\045\uff9f\052\uff9f\055\uff9f\056\uff9f\001\002\000\050\003" +
    "\uff70\006\027\010\uff70\012\uff70\013\uff70\014\uff70\022\uff70" +
    "\023\uff70\026\uff70\033\uff70\034\uff70\035\uff70\036\uff70\037" +
    "\uff70\044\uff70\045\uff70\052\uff70\055\uff70\056\uff70\001\002" +
    "\000\046\003\uff78\010\uff78\012\uff78\013\uff78\014\uff78\022" +
    "\uff78\023\uff78\026\uff78\033\uff78\034\uff78\035\uff78\036\uff78" +
    "\037\uff78\044\uff78\045\uff78\052\uff78\055\uff78\056\uff78\001" +
    "\002\000\046\003\uffa7\010\uffa7\012\uffa7\013\uffa7\014\uffa7" +
    "\022\uffa7\023\uffa7\026\uffa7\033\uffa7\034\uffa7\035\uffa7\036" +
    "\uffa7\037\uffa7\044\uffa7\045\uffa7\052\uffa7\055\uffa7\056\uffa7" +
    "\001\002\000\004\032\243\001\002\000\050\003\uff93\006" +
    "\027\010\uff93\012\uff93\013\uff93\014\uff93\022\uff93\023\uff93" +
    "\026\uff93\033\uff93\034\uff93\035\uff93\036\uff93\037\uff93\044" +
    "\uff93\045\uff93\052\uff93\055\uff93\056\uff93\001\002\000\046" +
    "\003\uff9b\010\uff9b\012\uff9b\013\uff9b\014\uff9b\022\uff9b\023" +
    "\uff9b\026\uff9b\033\uff9b\034\uff9b\035\uff9b\036\uff9b\037\uff9b" +
    "\044\uff9b\045\uff9b\052\uff9b\055\uff9b\056\uff9b\001\002\000" +
    "\004\006\245\001\002\000\046\003\uff97\010\uff97\012\uff97" +
    "\013\uff97\014\uff97\022\uff97\023\uff97\026\uff97\033\uff97\034" +
    "\uff97\035\uff97\036\uff97\037\uff97\044\uff97\045\uff97\052\uff97" +
    "\055\uff97\056\uff97\001\002\000\012\003\246\027\124\033" +
    "\066\061\122\001\002\000\010\016\131\030\250\032\251" +
    "\001\002\000\004\032\270\001\002\000\006\033\066\061" +
    "\253\001\002\000\050\003\uff95\006\027\010\uff95\012\uff95" +
    "\013\uff95\014\uff95\022\uff95\023\uff95\026\uff95\033\uff95\034" +
    "\uff95\035\uff95\036\uff95\037\uff95\044\uff95\045\uff95\052\uff95" +
    "\055\uff95\056\uff95\001\002\000\046\003\uff9d\010\uff9d\012" +
    "\uff9d\013\uff9d\014\uff9d\022\uff9d\023\uff9d\026\uff9d\033\uff9d" +
    "\034\uff9d\035\uff9d\036\uff9d\037\uff9d\044\uff9d\045\uff9d\052" +
    "\uff9d\055\uff9d\056\uff9d\001\002\000\004\033\066\001\002" +
    "\000\006\016\131\032\256\001\002\000\004\032\260\001" +
    "\002\000\050\003\uff8a\006\027\010\uff8a\012\uff8a\013\uff8a" +
    "\014\uff8a\022\uff8a\023\uff8a\026\uff8a\033\uff8a\034\uff8a\035" +
    "\uff8a\036\uff8a\037\uff8a\044\uff8a\045\uff8a\052\uff8a\055\uff8a" +
    "\056\uff8a\001\002\000\046\003\uff8e\010\uff8e\012\uff8e\013" +
    "\uff8e\014\uff8e\022\uff8e\023\uff8e\026\uff8e\033\uff8e\034\uff8e" +
    "\035\uff8e\036\uff8e\037\uff8e\044\uff8e\045\uff8e\052\uff8e\055" +
    "\uff8e\056\uff8e\001\002\000\050\003\uff88\006\027\010\uff88" +
    "\012\uff88\013\uff88\014\uff88\022\uff88\023\uff88\026\uff88\033" +
    "\uff88\034\uff88\035\uff88\036\uff88\037\uff88\044\uff88\045\uff88" +
    "\052\uff88\055\uff88\056\uff88\001\002\000\046\003\uff8c\010" +
    "\uff8c\012\uff8c\013\uff8c\014\uff8c\022\uff8c\023\uff8c\026\uff8c" +
    "\033\uff8c\034\uff8c\035\uff8c\036\uff8c\037\uff8c\044\uff8c\045" +
    "\uff8c\052\uff8c\055\uff8c\056\uff8c\001\002\000\006\016\131" +
    "\032\264\001\002\000\004\032\266\001\002\000\050\003" +
    "\uff8b\006\027\010\uff8b\012\uff8b\013\uff8b\014\uff8b\022\uff8b" +
    "\023\uff8b\026\uff8b\033\uff8b\034\uff8b\035\uff8b\036\uff8b\037" +
    "\uff8b\044\uff8b\045\uff8b\052\uff8b\055\uff8b\056\uff8b\001\002" +
    "\000\046\003\uff8f\010\uff8f\012\uff8f\013\uff8f\014\uff8f\022" +
    "\uff8f\023\uff8f\026\uff8f\033\uff8f\034\uff8f\035\uff8f\036\uff8f" +
    "\037\uff8f\044\uff8f\045\uff8f\052\uff8f\055\uff8f\056\uff8f\001" +
    "\002\000\050\003\uff89\006\027\010\uff89\012\uff89\013\uff89" +
    "\014\uff89\022\uff89\023\uff89\026\uff89\033\uff89\034\uff89\035" +
    "\uff89\036\uff89\037\uff89\044\uff89\045\uff89\052\uff89\055\uff89" +
    "\056\uff89\001\002\000\046\003\uff8d\010\uff8d\012\uff8d\013" +
    "\uff8d\014\uff8d\022\uff8d\023\uff8d\026\uff8d\033\uff8d\034\uff8d" +
    "\035\uff8d\036\uff8d\037\uff8d\044\uff8d\045\uff8d\052\uff8d\055" +
    "\uff8d\056\uff8d\001\002\000\050\003\uff91\006\027\010\uff91" +
    "\012\uff91\013\uff91\014\uff91\022\uff91\023\uff91\026\uff91\033" +
    "\uff91\034\uff91\035\uff91\036\uff91\037\uff91\044\uff91\045\uff91" +
    "\052\uff91\055\uff91\056\uff91\001\002\000\046\003\uff99\010" +
    "\uff99\012\uff99\013\uff99\014\uff99\022\uff99\023\uff99\026\uff99" +
    "\033\uff99\034\uff99\035\uff99\036\uff99\037\uff99\044\uff99\045" +
    "\uff99\052\uff99\055\uff99\056\uff99\001\002\000\006\016\131" +
    "\032\306\001\002\000\010\003\276\016\131\032\275\001" +
    "\002\000\006\003\301\032\302\001\002\000\050\003\uffa4" +
    "\006\027\010\uffa4\012\uffa4\013\uffa4\014\uffa4\022\uffa4\023" +
    "\uffa4\026\uffa4\033\uffa4\034\uffa4\035\uffa4\036\uffa4\037\uffa4" +
    "\044\uffa4\045\uffa4\052\uffa4\055\uffa4\056\uffa4\001\002\000" +
    "\050\003\uff75\006\027\010\uff75\012\uff75\013\uff75\014\uff75" +
    "\022\uff75\023\uff75\026\uff75\033\uff75\034\uff75\035\uff75\036" +
    "\uff75\037\uff75\044\uff75\045\uff75\052\uff75\055\uff75\056\uff75" +
    "\001\002\000\046\003\uff7d\010\uff7d\012\uff7d\013\uff7d\014" +
    "\uff7d\022\uff7d\023\uff7d\026\uff7d\033\uff7d\034\uff7d\035\uff7d" +
    "\036\uff7d\037\uff7d\044\uff7d\045\uff7d\052\uff7d\055\uff7d\056" +
    "\uff7d\001\002\000\046\003\uffac\010\uffac\012\uffac\013\uffac" +
    "\014\uffac\022\uffac\023\uffac\026\uffac\033\uffac\034\uffac\035" +
    "\uffac\036\uffac\037\uffac\044\uffac\045\uffac\052\uffac\055\uffac" +
    "\056\uffac\001\002\000\050\003\uff71\006\027\010\uff71\012" +
    "\uff71\013\uff71\014\uff71\022\uff71\023\uff71\026\uff71\033\uff71" +
    "\034\uff71\035\uff71\036\uff71\037\uff71\044\uff71\045\uff71\052" +
    "\uff71\055\uff71\056\uff71\001\002\000\050\003\uffa0\006\027" +
    "\010\uffa0\012\uffa0\013\uffa0\014\uffa0\022\uffa0\023\uffa0\026" +
    "\uffa0\033\uffa0\034\uffa0\035\uffa0\036\uffa0\037\uffa0\044\uffa0" +
    "\045\uffa0\052\uffa0\055\uffa0\056\uffa0\001\002\000\046\003" +
    "\uffa8\010\uffa8\012\uffa8\013\uffa8\014\uffa8\022\uffa8\023\uffa8" +
    "\026\uffa8\033\uffa8\034\uffa8\035\uffa8\036\uffa8\037\uffa8\044" +
    "\uffa8\045\uffa8\052\uffa8\055\uffa8\056\uffa8\001\002\000\046" +
    "\003\uff79\010\uff79\012\uff79\013\uff79\014\uff79\022\uff79\023" +
    "\uff79\026\uff79\033\uff79\034\uff79\035\uff79\036\uff79\037\uff79" +
    "\044\uff79\045\uff79\052\uff79\055\uff79\056\uff79\001\002\000" +
    "\004\032\310\001\002\000\050\003\uff94\006\027\010\uff94" +
    "\012\uff94\013\uff94\014\uff94\022\uff94\023\uff94\026\uff94\033" +
    "\uff94\034\uff94\035\uff94\036\uff94\037\uff94\044\uff94\045\uff94" +
    "\052\uff94\055\uff94\056\uff94\001\002\000\046\003\uff9c\010" +
    "\uff9c\012\uff9c\013\uff9c\014\uff9c\022\uff9c\023\uff9c\026\uff9c" +
    "\033\uff9c\034\uff9c\035\uff9c\036\uff9c\037\uff9c\044\uff9c\045" +
    "\uff9c\052\uff9c\055\uff9c\056\uff9c\001\002\000\050\003\uff90" +
    "\006\027\010\uff90\012\uff90\013\uff90\014\uff90\022\uff90\023" +
    "\uff90\026\uff90\033\uff90\034\uff90\035\uff90\036\uff90\037\uff90" +
    "\044\uff90\045\uff90\052\uff90\055\uff90\056\uff90\001\002\000" +
    "\046\003\uff98\010\uff98\012\uff98\013\uff98\014\uff98\022\uff98" +
    "\023\uff98\026\uff98\033\uff98\034\uff98\035\uff98\036\uff98\037" +
    "\uff98\044\uff98\045\uff98\052\uff98\055\uff98\056\uff98\001\002" +
    "\000\004\033\066\001\002\000\006\016\131\032\315\001" +
    "\002\000\004\032\317\001\002\000\050\003\uff82\006\027" +
    "\010\uff82\012\uff82\013\uff82\014\uff82\022\uff82\023\uff82\026" +
    "\uff82\033\uff82\034\uff82\035\uff82\036\uff82\037\uff82\044\uff82" +
    "\045\uff82\052\uff82\055\uff82\056\uff82\001\002\000\046\003" +
    "\uff86\010\uff86\012\uff86\013\uff86\014\uff86\022\uff86\023\uff86" +
    "\026\uff86\033\uff86\034\uff86\035\uff86\036\uff86\037\uff86\044" +
    "\uff86\045\uff86\052\uff86\055\uff86\056\uff86\001\002\000\050" +
    "\003\uff80\006\027\010\uff80\012\uff80\013\uff80\014\uff80\022" +
    "\uff80\023\uff80\026\uff80\033\uff80\034\uff80\035\uff80\036\uff80" +
    "\037\uff80\044\uff80\045\uff80\052\uff80\055\uff80\056\uff80\001" +
    "\002\000\046\003\uff84\010\uff84\012\uff84\013\uff84\014\uff84" +
    "\022\uff84\023\uff84\026\uff84\033\uff84\034\uff84\035\uff84\036" +
    "\uff84\037\uff84\044\uff84\045\uff84\052\uff84\055\uff84\056\uff84" +
    "\001\002\000\006\016\131\032\323\001\002\000\004\032" +
    "\325\001\002\000\050\003\uff83\006\027\010\uff83\012\uff83" +
    "\013\uff83\014\uff83\022\uff83\023\uff83\026\uff83\033\uff83\034" +
    "\uff83\035\uff83\036\uff83\037\uff83\044\uff83\045\uff83\052\uff83" +
    "\055\uff83\056\uff83\001\002\000\046\003\uff87\010\uff87\012" +
    "\uff87\013\uff87\014\uff87\022\uff87\023\uff87\026\uff87\033\uff87" +
    "\034\uff87\035\uff87\036\uff87\037\uff87\044\uff87\045\uff87\052" +
    "\uff87\055\uff87\056\uff87\001\002\000\050\003\uff81\006\027" +
    "\010\uff81\012\uff81\013\uff81\014\uff81\022\uff81\023\uff81\026" +
    "\uff81\033\uff81\034\uff81\035\uff81\036\uff81\037\uff81\044\uff81" +
    "\045\uff81\052\uff81\055\uff81\056\uff81\001\002\000\046\003" +
    "\uff85\010\uff85\012\uff85\013\uff85\014\uff85\022\uff85\023\uff85" +
    "\026\uff85\033\uff85\034\uff85\035\uff85\036\uff85\037\uff85\044" +
    "\uff85\045\uff85\052\uff85\055\uff85\056\uff85\001\002\000\006" +
    "\033\066\061\330\001\002\000\004\033\066\001\002\000" +
    "\006\016\131\032\332\001\002\000\046\003\uff8b\010\uff8b" +
    "\012\uff8b\013\uff8b\014\uff8b\022\uff8b\023\uff8b\026\uff8b\033" +
    "\uff8b\034\uff8b\035\uff8b\036\uff8b\037\uff8b\044\uff8b\045\uff8b" +
    "\052\uff8b\055\uff8b\056\uff8b\001\002\000\006\016\131\032" +
    "\347\001\002\000\010\003\336\016\131\032\337\001\002" +
    "\000\006\003\342\032\343\001\002\000\050\003\uff77\006" +
    "\027\010\uff77\012\uff77\013\uff77\014\uff77\022\uff77\023\uff77" +
    "\026\uff77\033\uff77\034\uff77\035\uff77\036\uff77\037\uff77\044" +
    "\uff77\045\uff77\052\uff77\055\uff77\056\uff77\001\002\000\050" +
    "\003\uffa6\006\027\010\uffa6\012\uffa6\013\uffa6\014\uffa6\022" +
    "\uffa6\023\uffa6\026\uffa6\033\uffa6\034\uffa6\035\uffa6\036\uffa6" +
    "\037\uffa6\044\uffa6\045\uffa6\052\uffa6\055\uffa6\056\uffa6\001" +
    "\002\000\046\003\uffae\010\uffae\012\uffae\013\uffae\014\uffae" +
    "\022\uffae\023\uffae\026\uffae\033\uffae\034\uffae\035\uffae\036" +
    "\uffae\037\uffae\044\uffae\045\uffae\052\uffae\055\uffae\056\uffae" +
    "\001\002\000\046\003\uff7f\010\uff7f\012\uff7f\013\uff7f\014" +
    "\uff7f\022\uff7f\023\uff7f\026\uff7f\033\uff7f\034\uff7f\035\uff7f" +
    "\036\uff7f\037\uff7f\044\uff7f\045\uff7f\052\uff7f\055\uff7f\056" +
    "\uff7f\001\002\000\050\003\uff73\006\027\010\uff73\012\uff73" +
    "\013\uff73\014\uff73\022\uff73\023\uff73\026\uff73\033\uff73\034" +
    "\uff73\035\uff73\036\uff73\037\uff73\044\uff73\045\uff73\052\uff73" +
    "\055\uff73\056\uff73\001\002\000\050\003\uffa2\006\027\010" +
    "\uffa2\012\uffa2\013\uffa2\014\uffa2\022\uffa2\023\uffa2\026\uffa2" +
    "\033\uffa2\034\uffa2\035\uffa2\036\uffa2\037\uffa2\044\uffa2\045" +
    "\uffa2\052\uffa2\055\uffa2\056\uffa2\001\002\000\046\003\uffaa" +
    "\010\uffaa\012\uffaa\013\uffaa\014\uffaa\022\uffaa\023\uffaa\026" +
    "\uffaa\033\uffaa\034\uffaa\035\uffaa\036\uffaa\037\uffaa\044\uffaa" +
    "\045\uffaa\052\uffaa\055\uffaa\056\uffaa\001\002\000\046\003" +
    "\uff7b\010\uff7b\012\uff7b\013\uff7b\014\uff7b\022\uff7b\023\uff7b" +
    "\026\uff7b\033\uff7b\034\uff7b\035\uff7b\036\uff7b\037\uff7b\044" +
    "\uff7b\045\uff7b\052\uff7b\055\uff7b\056\uff7b\001\002\000\004" +
    "\032\351\001\002\000\050\003\uff96\006\027\010\uff96\012" +
    "\uff96\013\uff96\014\uff96\022\uff96\023\uff96\026\uff96\033\uff96" +
    "\034\uff96\035\uff96\036\uff96\037\uff96\044\uff96\045\uff96\052" +
    "\uff96\055\uff96\056\uff96\001\002\000\046\003\uff9e\010\uff9e" +
    "\012\uff9e\013\uff9e\014\uff9e\022\uff9e\023\uff9e\026\uff9e\033" +
    "\uff9e\034\uff9e\035\uff9e\036\uff9e\037\uff9e\044\uff9e\045\uff9e" +
    "\052\uff9e\055\uff9e\056\uff9e\001\002\000\050\003\uff92\006" +
    "\027\010\uff92\012\uff92\013\uff92\014\uff92\022\uff92\023\uff92" +
    "\026\uff92\033\uff92\034\uff92\035\uff92\036\uff92\037\uff92\044" +
    "\uff92\045\uff92\052\uff92\055\uff92\056\uff92\001\002\000\046" +
    "\003\uff9a\010\uff9a\012\uff9a\013\uff9a\014\uff9a\022\uff9a\023" +
    "\uff9a\026\uff9a\033\uff9a\034\uff9a\035\uff9a\036\uff9a\037\uff9a" +
    "\044\uff9a\045\uff9a\052\uff9a\055\uff9a\056\uff9a\001\002\000" +
    "\006\002\uffeb\040\017\001\002\000\006\026\374\045\024" +
    "\001\002\000\004\026\372\001\002\000\010\026\357\044" +
    "\032\045\024\001\002\000\006\002\uffea\040\017\001\002" +
    "\000\006\026\364\045\024\001\002\000\004\026\362\001" +
    "\002\000\006\002\uffe6\040\017\001\002\000\004\002\ufff6" +
    "\001\002\000\006\002\uffe7\040\017\001\002\000\004\026" +
    "\366\001\002\000\006\002\uffe4\040\017\001\002\000\004" +
    "\002\ufff4\001\002\000\004\002\ufff7\001\002\000\004\002" +
    "\ufffa\001\002\000\006\002\uffe8\040\017\001\002\000\004" +
    "\002\ufff8\001\002\000\006\002\uffe9\040\017\001\002\000" +
    "\004\026\376\001\002\000\006\002\uffe5\040\017\001\002" +
    "\000\004\002\ufff5\001\002\000\004\002\ufff9\001\002\000" +
    "\004\002\ufffb\001\002\000\006\002\uffdf\040\017\001\002" +
    "\000\004\026\u0104\001\002\000\006\002\uffde\040\017\001" +
    "\002\000\004\002\uffee\001\002\000\004\002\uffef\001\002" +
    "\000\004\023\u01f9\001\002\000\006\003\u0145\025\u0144\001" +
    "\002\000\006\003\u010b\023\u010a\001\002\000\010\003\u0133" +
    "\006\u010e\024\u0135\001\002\000\010\003\u010c\006\u010e\024" +
    "\u010f\001\002\000\012\003\uff23\024\uff23\033\u012f\047\u012e" +
    "\001\002\000\004\024\u012a\001\002\000\006\003\u0124\033" +
    "\u0125\001\002\000\014\003\uff4e\025\uff4e\046\u0113\057\u0112" +
    "\061\u0111\001\002\000\006\003\uff4c\025\uff4c\001\002\000" +
    "\014\003\uff1f\025\uff1f\046\u0113\057\uff1f\061\u0111\001\002" +
    "\000\006\003\u0118\023\u0117\001\002\000\014\003\uff20\025" +
    "\uff20\046\u0113\057\uff20\061\u0111\001\002\000\010\003\uff4d" +
    "\025\uff4d\057\u0112\001\002\000\006\003\uff4b\025\uff4b\001" +
    "\002\000\010\003\uff22\025\uff22\057\uff22\001\002\000\006" +
    "\006\u011c\024\u011d\001\002\000\004\006\u0119\001\002\000" +
    "\004\033\u011a\001\002\000\004\024\u011b\001\002\000\006" +
    "\003\uff2e\025\uff2e\001\002\000\006\003\u011e\033\u011f\001" +
    "\002\000\006\003\uff2b\025\uff2b\001\002\000\004\024\u0122" +
    "\001\002\000\006\003\u0120\024\u0121\001\002\000\006\003" +
    "\uff2c\025\uff2c\001\002\000\006\003\uff2f\025\uff2f\001\002" +
    "\000\006\003\uff2d\025\uff2d\001\002\000\010\003\uff21\025" +
    "\uff21\057\uff21\001\002\000\010\003\uff24\024\uff24\047\u0128" +
    "\001\002\000\010\003\uff29\024\uff29\047\u0126\001\002\000" +
    "\006\003\u010c\006\u010e\001\002\000\006\003\uff2a\024\uff2a" +
    "\001\002\000\006\003\u010c\006\u010e\001\002\000\006\003" +
    "\uff25\024\uff25\001\002\000\014\003\uff5e\025\uff5e\046\u0113" +
    "\057\u0112\061\u0111\001\002\000\006\003\uff5c\025\uff5c\001" +
    "\002\000\010\003\uff5d\025\uff5d\057\u0112\001\002\000\006" +
    "\003\uff5b\025\uff5b\001\002\000\006\003\u010c\006\u010e\001" +
    "\002\000\010\003\uff26\024\uff26\047\u0130\001\002\000\006" +
    "\003\u010c\006\u010e\001\002\000\006\003\uff28\024\uff28\001" +
    "\002\000\006\003\uff27\024\uff27\001\002\000\020\003\uff23" +
    "\024\uff23\033\u012f\046\u0113\047\u012e\057\u0112\061\u0111\001" +
    "\002\000\006\003\u0139\024\u013a\001\002\000\014\003\uff56" +
    "\025\uff56\046\u0113\057\u0112\061\u0111\001\002\000\006\003" +
    "\uff54\025\uff54\001\002\000\010\003\uff55\025\uff55\057\u0112" +
    "\001\002\000\006\003\uff53\025\uff53\001\002\000\014\003" +
    "\uff5a\025\uff5a\046\u0113\057\u0112\061\u0111\001\002\000\014" +
    "\003\uff66\025\uff66\046\u0113\057\u0112\061\u0111\001\002\000" +
    "\006\003\uff64\025\uff64\001\002\000\010\003\uff65\025\uff65" +
    "\057\u0112\001\002\000\006\003\uff63\025\uff63\001\002\000" +
    "\006\003\uff58\025\uff58\001\002\000\010\003\uff59\025\uff59" +
    "\057\u0112\001\002\000\006\003\uff57\025\uff57\001\002\000" +
    "\006\003\uff49\025\uff49\001\002\000\010\003\uff4a\025\uff4a" +
    "\057\u0112\001\002\000\006\003\uff48\025\uff48\001\002\000" +
    "\044\003\u01e9\006\027\010\u014e\012\u0150\013\u0153\014\u0146" +
    "\022\137\023\140\026\u01e7\033\143\034\152\035\135\036" +
    "\136\037\150\052\133\055\146\056\u014f\001\002\000\042" +
    "\006\027\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023" +
    "\140\026\u014a\033\143\034\152\035\135\036\136\037\150" +
    "\052\133\055\146\056\u014f\001\002\000\006\003\u01ca\023" +
    "\u01c9\001\002\000\042\003\ufef6\010\ufef6\012\ufef6\013\ufef6" +
    "\014\ufef6\022\ufef6\023\ufef6\026\ufef6\033\ufef6\034\ufef6\035" +
    "\ufef6\036\ufef6\037\ufef6\052\ufef6\055\ufef6\056\ufef6\001\002" +
    "\000\004\026\u01c7\001\002\000\042\003\ufef7\010\ufef7\012" +
    "\ufef7\013\ufef7\014\ufef7\022\ufef7\023\ufef7\026\ufef7\033\ufef7" +
    "\034\ufef7\035\ufef7\036\ufef7\037\ufef7\052\ufef7\055\ufef7\056" +
    "\ufef7\001\002\000\006\026\uff38\045\024\001\002\000\042" +
    "\003\ufef8\010\ufef8\012\ufef8\013\ufef8\014\ufef8\022\ufef8\023" +
    "\ufef8\026\ufef8\033\ufef8\034\ufef8\035\ufef8\036\ufef8\037\ufef8" +
    "\052\ufef8\055\ufef8\056\ufef8\001\002\000\040\010\u014e\012" +
    "\u0150\013\u0153\014\u0146\022\137\023\140\026\u01c2\033\143" +
    "\034\152\035\135\036\136\037\150\052\133\055\146\056" +
    "\u014f\001\002\000\042\003\ufef5\010\ufef5\012\ufef5\013\ufef5" +
    "\014\ufef5\022\ufef5\023\ufef5\026\ufef5\033\ufef5\034\ufef5\035" +
    "\ufef5\036\ufef5\037\ufef5\052\ufef5\055\ufef5\056\ufef5\001\002" +
    "\000\006\003\u019d\023\u019c\001\002\000\024\022\137\023" +
    "\140\033\143\034\152\035\135\036\136\037\150\052\133" +
    "\055\146\001\002\000\006\003\u017b\025\u017a\001\002\000" +
    "\042\003\uff1b\010\u014e\012\u0150\013\u0153\014\u0146\022\137" +
    "\023\140\026\uff1b\033\143\034\152\035\135\036\136\037" +
    "\150\052\133\055\146\056\u014f\001\002\000\042\003\ufef4" +
    "\010\ufef4\012\ufef4\013\ufef4\014\ufef4\022\ufef4\023\ufef4\026" +
    "\ufef4\033\ufef4\034\ufef4\035\ufef4\036\ufef4\037\ufef4\052\ufef4" +
    "\055\ufef4\056\ufef4\001\002\000\006\003\u0158\023\u0157\001" +
    "\002\000\014\017\156\032\u0155\034\154\035\155\060\157" +
    "\001\002\000\042\003\uff1c\010\u014e\012\u0150\013\u0153\014" +
    "\u0146\022\137\023\140\026\uff1c\033\143\034\152\035\135" +
    "\036\136\037\150\052\133\055\146\056\u014f\001\002\000" +
    "\006\003\uff1e\026\uff1e\001\002\000\024\022\137\023\140" +
    "\033\143\034\152\035\135\036\136\037\150\052\133\055" +
    "\146\001\002\000\004\024\u0159\001\002\000\004\025\u015a" +
    "\001\002\000\044\010\u014e\012\u0150\013\u0153\014\u0146\022" +
    "\137\023\140\026\u0160\033\143\034\152\035\135\036\136" +
    "\037\150\052\133\053\u015e\054\u015b\055\146\056\u0164\001" +
    "\002\000\004\032\u016e\001\002\000\044\010\ufef0\012\ufef0" +
    "\013\ufef0\014\ufef0\022\ufef0\023\ufef0\026\ufef0\033\ufef0\034" +
    "\ufef0\035\ufef0\036\ufef0\037\ufef0\052\ufef0\053\ufef0\054\ufef0" +
    "\055\ufef0\056\ufef0\001\002\000\044\010\u014e\012\u0150\013" +
    "\u0153\014\u0146\022\137\023\140\026\ufee7\033\143\034\152" +
    "\035\135\036\136\037\150\052\133\053\u015e\054\u015b\055" +
    "\146\056\u0164\001\002\000\004\032\u016c\001\002\000\044" +
    "\010\ufef1\012\ufef1\013\ufef1\014\ufef1\022\ufef1\023\ufef1\026" +
    "\ufef1\033\ufef1\034\ufef1\035\ufef1\036\ufef1\037\ufef1\052\ufef1" +
    "\053\ufef1\054\ufef1\055\ufef1\056\ufef1\001\002\000\046\003" +
    "\ufed3\010\ufed3\012\ufed3\013\ufed3\014\ufed3\022\ufed3\023\ufed3" +
    "\026\ufed3\033\ufed3\034\ufed3\035\ufed3\036\ufed3\037\ufed3\052" +
    "\ufed3\053\ufed3\054\ufed3\055\ufed3\056\ufed3\001\002\000\004" +
    "\026\u016b\001\002\000\044\010\ufef2\012\ufef2\013\ufef2\014" +
    "\ufef2\022\ufef2\023\ufef2\026\ufef2\033\ufef2\034\ufef2\035\ufef2" +
    "\036\ufef2\037\ufef2\052\ufef2\053\ufef2\054\ufef2\055\ufef2\056" +
    "\ufef2\001\002\000\044\010\ufeef\012\ufeef\013\ufeef\014\ufeef" +
    "\022\ufeef\023\ufeef\026\ufeef\033\ufeef\034\ufeef\035\ufeef\036" +
    "\ufeef\037\ufeef\052\ufeef\053\ufeef\054\ufeef\055\ufeef\056\ufeef" +
    "\001\002\000\024\022\137\023\140\033\143\034\152\035" +
    "\135\036\136\037\150\052\133\055\146\001\002\000\044" +
    "\010\ufeee\012\ufeee\013\ufeee\014\ufeee\022\ufeee\023\ufeee\026" +
    "\ufeee\033\ufeee\034\ufeee\035\ufeee\036\ufeee\037\ufeee\052\ufeee" +
    "\053\ufeee\054\ufeee\055\ufeee\056\ufeee\001\002\000\014\017" +
    "\156\032\u0167\034\154\035\155\060\157\001\002\000\044" +
    "\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140\026" +
    "\ufee8\033\143\034\152\035\135\036\136\037\150\052\133" +
    "\053\u015e\054\u015b\055\146\056\u0164\001\002\000\004\026" +
    "\ufeea\001\002\000\014\017\156\032\u016a\034\154\035\155" +
    "\060\157\001\002\000\044\010\ufeeb\012\ufeeb\013\ufeeb\014" +
    "\ufeeb\022\ufeeb\023\ufeeb\026\ufeeb\033\ufeeb\034\ufeeb\035\ufeeb" +
    "\036\ufeeb\037\ufeeb\052\ufeeb\053\ufeeb\054\ufeeb\055\ufeeb\056" +
    "\ufeeb\001\002\000\046\003\ufed4\010\ufed4\012\ufed4\013\ufed4" +
    "\014\ufed4\022\ufed4\023\ufed4\026\ufed4\033\ufed4\034\ufed4\035" +
    "\ufed4\036\ufed4\037\ufed4\052\ufed4\053\ufed4\054\ufed4\055\ufed4" +
    "\056\ufed4\001\002\000\044\010\ufeed\012\ufeed\013\ufeed\014" +
    "\ufeed\022\ufeed\023\ufeed\026\ufeed\033\ufeed\034\ufeed\035\ufeed" +
    "\036\ufeed\037\ufeed\052\ufeed\053\ufeed\054\ufeed\055\ufeed\056" +
    "\ufeed\001\002\000\004\026\ufee9\001\002\000\044\010\ufeec" +
    "\012\ufeec\013\ufeec\014\ufeec\022\ufeec\023\ufeec\026\ufeec\033" +
    "\ufeec\034\ufeec\035\ufeec\036\ufeec\037\ufeec\052\ufeec\053\ufeec" +
    "\054\ufeec\055\ufeec\056\ufeec\001\002\000\014\017\156\024" +
    "\u0170\034\154\035\155\060\157\001\002\000\006\003\u0172" +
    "\025\u0171\001\002\000\044\010\u014e\012\u0150\013\u0153\014" +
    "\u0146\022\137\023\140\026\u0176\033\143\034\152\035\135" +
    "\036\136\037\150\052\133\053\u015e\054\u015b\055\146\056" +
    "\u0164\001\002\000\044\010\u014e\012\u0150\013\u0153\014\u0146" +
    "\022\137\023\140\026\u0173\033\143\034\152\035\135\036" +
    "\136\037\150\052\133\053\u015e\054\u015b\055\146\056\u0164" +
    "\001\002\000\046\003\ufed1\010\ufed1\012\ufed1\013\ufed1\014" +
    "\ufed1\022\ufed1\023\ufed1\026\ufed1\033\ufed1\034\ufed1\035\ufed1" +
    "\036\ufed1\037\ufed1\052\ufed1\053\ufed1\054\ufed1\055\ufed1\056" +
    "\ufed1\001\002\000\004\026\u0175\001\002\000\046\003\ufed2" +
    "\010\ufed2\012\ufed2\013\ufed2\014\ufed2\022\ufed2\023\ufed2\026" +
    "\ufed2\033\ufed2\034\ufed2\035\ufed2\036\ufed2\037\ufed2\052\ufed2" +
    "\053\ufed2\054\ufed2\055\ufed2\056\ufed2\001\002\000\046\003" +
    "\ufed5\010\ufed5\012\ufed5\013\ufed5\014\ufed5\022\ufed5\023\ufed5" +
    "\026\ufed5\033\ufed5\034\ufed5\035\ufed5\036\ufed5\037\ufed5\052" +
    "\ufed5\053\ufed5\054\ufed5\055\ufed5\056\ufed5\001\002\000\004" +
    "\026\u0178\001\002\000\046\003\ufed6\010\ufed6\012\ufed6\013" +
    "\ufed6\014\ufed6\022\ufed6\023\ufed6\026\ufed6\033\ufed6\034\ufed6" +
    "\035\ufed6\036\ufed6\037\ufed6\052\ufed6\053\ufed6\054\ufed6\055" +
    "\ufed6\056\ufed6\001\002\000\006\003\uff1d\026\uff1d\001\002" +
    "\000\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023" +
    "\140\026\u0189\033\143\034\152\035\135\036\136\037\150" +
    "\052\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000" +
    "\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140" +
    "\026\u017c\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000\004" +
    "\013\u0184\001\002\000\004\026\u017e\001\002\000\004\013" +
    "\u017f\001\002\000\004\023\u0180\001\002\000\024\022\137" +
    "\023\140\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\055\146\001\002\000\014\017\156\024\u0182\034\154" +
    "\035\155\060\157\001\002\000\004\032\u0183\001\002\000" +
    "\046\003\ufece\010\ufece\012\ufece\013\ufece\014\ufece\022\ufece" +
    "\023\ufece\026\ufece\033\ufece\034\ufece\035\ufece\036\ufece\037" +
    "\ufece\052\ufece\053\ufece\054\ufece\055\ufece\056\ufece\001\002" +
    "\000\004\023\u0185\001\002\000\024\022\137\023\140\033" +
    "\143\034\152\035\135\036\136\037\150\052\133\055\146" +
    "\001\002\000\014\017\156\024\u0187\034\154\035\155\060" +
    "\157\001\002\000\004\032\u0188\001\002\000\046\003\ufecd" +
    "\010\ufecd\012\ufecd\013\ufecd\014\ufecd\022\ufecd\023\ufecd\026" +
    "\ufecd\033\ufecd\034\ufecd\035\ufecd\036\ufecd\037\ufecd\052\ufecd" +
    "\053\ufecd\054\ufecd\055\ufecd\056\ufecd\001\002\000\006\003" +
    "\u0193\013\u0194\001\002\000\004\026\u018b\001\002\000\006" +
    "\003\u018d\013\u018c\001\002\000\004\023\u018f\001\002\000" +
    "\004\032\u018e\001\002\000\046\003\ufecc\010\ufecc\012\ufecc" +
    "\013\ufecc\014\ufecc\022\ufecc\023\ufecc\026\ufecc\033\ufecc\034" +
    "\ufecc\035\ufecc\036\ufecc\037\ufecc\052\ufecc\053\ufecc\054\ufecc" +
    "\055\ufecc\056\ufecc\001\002\000\024\022\137\023\140\033" +
    "\143\034\152\035\135\036\136\037\150\052\133\055\146" +
    "\001\002\000\014\017\156\024\u0191\034\154\035\155\060" +
    "\157\001\002\000\004\032\u0192\001\002\000\046\003\ufed0" +
    "\010\ufed0\012\ufed0\013\ufed0\014\ufed0\022\ufed0\023\ufed0\026" +
    "\ufed0\033\ufed0\034\ufed0\035\ufed0\036\ufed0\037\ufed0\052\ufed0" +
    "\053\ufed0\054\ufed0\055\ufed0\056\ufed0\001\002\000\004\032" +
    "\u0199\001\002\000\004\023\u0195\001\002\000\024\022\137" +
    "\023\140\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\055\146\001\002\000\014\017\156\024\u0197\034\154" +
    "\035\155\060\157\001\002\000\004\032\u0198\001\002\000" +
    "\046\003\ufecf\010\ufecf\012\ufecf\013\ufecf\014\ufecf\022\ufecf" +
    "\023\ufecf\026\ufecf\033\ufecf\034\ufecf\035\ufecf\036\ufecf\037" +
    "\ufecf\052\ufecf\053\ufecf\054\ufecf\055\ufecf\056\ufecf\001\002" +
    "\000\046\003\ufecb\010\ufecb\012\ufecb\013\ufecb\014\ufecb\022" +
    "\ufecb\023\ufecb\026\ufecb\033\ufecb\034\ufecb\035\ufecb\036\ufecb" +
    "\037\ufecb\052\ufecb\053\ufecb\054\ufecb\055\ufecb\056\ufecb\001" +
    "\002\000\014\017\156\032\u019b\034\154\035\155\060\157" +
    "\001\002\000\042\003\ufef3\010\ufef3\012\ufef3\013\ufef3\014" +
    "\ufef3\022\ufef3\023\ufef3\026\ufef3\033\ufef3\034\ufef3\035\ufef3" +
    "\036\ufef3\037\ufef3\052\ufef3\055\ufef3\056\ufef3\001\002\000" +
    "\024\022\137\023\140\033\143\034\152\035\135\036\136" +
    "\037\150\052\133\055\146\001\002\000\004\024\u019e\001" +
    "\002\000\004\025\u019f\001\002\000\044\010\u014e\012\u0150" +
    "\013\u0153\014\u0146\022\137\023\140\026\u01a0\033\143\034" +
    "\152\035\135\036\136\037\150\052\133\053\u015e\054\u015b" +
    "\055\146\056\u0164\001\002\000\050\003\ufee2\010\ufee2\011" +
    "\u01a8\012\ufee2\013\ufee2\014\ufee2\022\ufee2\023\ufee2\026\ufee2" +
    "\033\ufee2\034\ufee2\035\ufee2\036\ufee2\037\ufee2\052\ufee2\053" +
    "\ufee2\054\ufee2\055\ufee2\056\ufee2\001\002\000\004\026\u01a2" +
    "\001\002\000\050\003\ufee3\010\ufee3\011\u01a3\012\ufee3\013" +
    "\ufee3\014\ufee3\022\ufee3\023\ufee3\026\ufee3\033\ufee3\034\ufee3" +
    "\035\ufee3\036\ufee3\037\ufee3\052\ufee3\053\ufee3\054\ufee3\055" +
    "\ufee3\056\ufee3\001\002\000\004\025\u01a4\001\002\000\044" +
    "\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140\026" +
    "\u01a6\033\143\034\152\035\135\036\136\037\150\052\133" +
    "\053\u015e\054\u015b\055\146\056\u0164\001\002\000\004\026" +
    "\u01a7\001\002\000\046\003\ufed9\010\ufed9\012\ufed9\013\ufed9" +
    "\014\ufed9\022\ufed9\023\ufed9\026\ufed9\033\ufed9\034\ufed9\035" +
    "\ufed9\036\ufed9\037\ufed9\052\ufed9\053\ufed9\054\ufed9\055\ufed9" +
    "\056\ufed9\001\002\000\046\003\ufeda\010\ufeda\012\ufeda\013" +
    "\ufeda\014\ufeda\022\ufeda\023\ufeda\026\ufeda\033\ufeda\034\ufeda" +
    "\035\ufeda\036\ufeda\037\ufeda\052\ufeda\053\ufeda\054\ufeda\055" +
    "\ufeda\056\ufeda\001\002\000\004\025\u01a9\001\002\000\044" +
    "\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140\026" +
    "\u01aa\033\143\034\152\035\135\036\136\037\150\052\133" +
    "\053\u015e\054\u015b\055\146\056\u0164\001\002\000\046\003" +
    "\ufed7\010\ufed7\012\ufed7\013\ufed7\014\ufed7\022\ufed7\023\ufed7" +
    "\026\ufed7\033\ufed7\034\ufed7\035\ufed7\036\ufed7\037\ufed7\052" +
    "\ufed7\053\ufed7\054\ufed7\055\ufed7\056\ufed7\001\002\000\004" +
    "\026\u01ac\001\002\000\046\003\ufed8\010\ufed8\012\ufed8\013" +
    "\ufed8\014\ufed8\022\ufed8\023\ufed8\026\ufed8\033\ufed8\034\ufed8" +
    "\035\ufed8\036\ufed8\037\ufed8\052\ufed8\053\ufed8\054\ufed8\055" +
    "\ufed8\056\ufed8\001\002\000\014\017\156\024\u01ae\034\154" +
    "\035\155\060\157\001\002\000\006\003\u01b0\025\u01af\001" +
    "\002\000\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137" +
    "\023\140\026\u01b4\033\143\034\152\035\135\036\136\037" +
    "\150\052\133\053\u015e\054\u015b\055\146\056\u0164\001\002" +
    "\000\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023" +
    "\140\026\u01b1\033\143\034\152\035\135\036\136\037\150" +
    "\052\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000" +
    "\046\003\ufee0\010\ufee0\012\ufee0\013\ufee0\014\ufee0\022\ufee0" +
    "\023\ufee0\026\ufee0\033\ufee0\034\ufee0\035\ufee0\036\ufee0\037" +
    "\ufee0\052\ufee0\053\ufee0\054\ufee0\055\ufee0\056\ufee0\001\002" +
    "\000\004\026\u01b3\001\002\000\046\003\ufee1\010\ufee1\012" +
    "\ufee1\013\ufee1\014\ufee1\022\ufee1\023\ufee1\026\ufee1\033\ufee1" +
    "\034\ufee1\035\ufee1\036\ufee1\037\ufee1\052\ufee1\053\ufee1\054" +
    "\ufee1\055\ufee1\056\ufee1\001\002\000\050\003\ufee4\010\ufee4" +
    "\011\u01bc\012\ufee4\013\ufee4\014\ufee4\022\ufee4\023\ufee4\026" +
    "\ufee4\033\ufee4\034\ufee4\035\ufee4\036\ufee4\037\ufee4\052\ufee4" +
    "\053\ufee4\054\ufee4\055\ufee4\056\ufee4\001\002\000\004\026" +
    "\u01b6\001\002\000\050\003\ufee5\010\ufee5\011\u01b7\012\ufee5" +
    "\013\ufee5\014\ufee5\022\ufee5\023\ufee5\026\ufee5\033\ufee5\034" +
    "\ufee5\035\ufee5\036\ufee5\037\ufee5\052\ufee5\053\ufee5\054\ufee5" +
    "\055\ufee5\056\ufee5\001\002\000\004\025\u01b8\001\002\000" +
    "\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140" +
    "\026\u01b9\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000\046" +
    "\003\ufedd\010\ufedd\012\ufedd\013\ufedd\014\ufedd\022\ufedd\023" +
    "\ufedd\026\ufedd\033\ufedd\034\ufedd\035\ufedd\036\ufedd\037\ufedd" +
    "\052\ufedd\053\ufedd\054\ufedd\055\ufedd\056\ufedd\001\002\000" +
    "\004\026\u01bb\001\002\000\046\003\ufede\010\ufede\012\ufede" +
    "\013\ufede\014\ufede\022\ufede\023\ufede\026\ufede\033\ufede\034" +
    "\ufede\035\ufede\036\ufede\037\ufede\052\ufede\053\ufede\054\ufede" +
    "\055\ufede\056\ufede\001\002\000\004\025\u01bd\001\002\000" +
    "\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140" +
    "\026\u01be\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000\046" +
    "\003\ufedb\010\ufedb\012\ufedb\013\ufedb\014\ufedb\022\ufedb\023" +
    "\ufedb\026\ufedb\033\ufedb\034\ufedb\035\ufedb\036\ufedb\037\ufedb" +
    "\052\ufedb\053\ufedb\054\ufedb\055\ufedb\056\ufedb\001\002\000" +
    "\004\026\u01c0\001\002\000\046\003\ufedc\010\ufedc\012\ufedc" +
    "\013\ufedc\014\ufedc\022\ufedc\023\ufedc\026\ufedc\033\ufedc\034" +
    "\ufedc\035\ufedc\036\ufedc\037\ufedc\052\ufedc\053\ufedc\054\ufedc" +
    "\055\ufedc\056\ufedc\001\002\000\004\026\u01c4\001\002\000" +
    "\006\026\uff3b\045\024\001\002\000\004\026\uff3f\001\002" +
    "\000\006\026\uff3a\045\024\001\002\000\004\026\uff3e\001" +
    "\002\000\004\026\uff3c\001\002\000\006\026\uff39\045\024" +
    "\001\002\000\004\026\uff3d\001\002\000\010\006\u01d3\033" +
    "\143\052\133\001\002\000\004\024\u01cb\001\002\000\004" +
    "\025\u01cc\001\002\000\044\010\u014e\012\u0150\013\u0153\014" +
    "\u0146\022\137\023\140\026\u01cd\033\143\034\152\035\135" +
    "\036\136\037\150\052\133\053\u015e\054\u015b\055\146\056" +
    "\u0164\001\002\000\046\003\ufec7\010\ufec7\012\ufec7\013\ufec7" +
    "\014\ufec7\022\ufec7\023\ufec7\026\ufec7\033\ufec7\034\ufec7\035" +
    "\ufec7\036\ufec7\037\ufec7\052\ufec7\053\ufec7\054\ufec7\055\ufec7" +
    "\056\ufec7\001\002\000\004\026\u01cf\001\002\000\046\003" +
    "\ufec8\010\ufec8\012\ufec8\013\ufec8\014\ufec8\022\ufec8\023\ufec8" +
    "\026\ufec8\033\ufec8\034\ufec8\035\ufec8\036\ufec8\037\ufec8\052" +
    "\ufec8\053\ufec8\054\ufec8\055\ufec8\056\ufec8\001\002\000\004" +
    "\024\u01dd\001\002\000\004\032\u01d9\001\002\000\006\016" +
    "\164\021\163\001\002\000\004\033\u01d4\001\002\000\004" +
    "\016\u01d5\001\002\000\024\022\137\023\140\033\143\034" +
    "\152\035\135\036\136\037\150\052\133\055\146\001\002" +
    "\000\014\017\156\032\uff0f\034\154\035\155\060\157\001" +
    "\002\000\024\022\137\023\140\033\143\034\152\035\135" +
    "\036\136\037\150\052\133\055\146\001\002\000\014\017" +
    "\156\032\uff10\034\154\035\155\060\157\001\002\000\024" +
    "\022\137\023\140\033\143\034\152\035\135\036\136\037" +
    "\150\052\133\055\146\001\002\000\014\017\156\032\u01db" +
    "\034\154\035\155\060\157\001\002\000\024\022\137\023" +
    "\140\033\143\034\152\035\135\036\136\037\150\052\133" +
    "\055\146\001\002\000\014\017\156\024\ufec4\034\154\035" +
    "\155\060\157\001\002\000\006\003\u01df\025\u01de\001\002" +
    "\000\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023" +
    "\140\026\u01e3\033\143\034\152\035\135\036\136\037\150" +
    "\052\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000" +
    "\044\010\u014e\012\u0150\013\u0153\014\u0146\022\137\023\140" +
    "\026\u01e0\033\143\034\152\035\135\036\136\037\150\052" +
    "\133\053\u015e\054\u015b\055\146\056\u0164\001\002\000\046" +
    "\003\ufec5\010\ufec5\012\ufec5\013\ufec5\014\ufec5\022\ufec5\023" +
    "\ufec5\026\ufec5\033\ufec5\034\ufec5\035\ufec5\036\ufec5\037\ufec5" +
    "\052\ufec5\053\ufec5\054\ufec5\055\ufec5\056\ufec5\001\002\000" +
    "\004\026\u01e2\001\002\000\046\003\ufec6\010\ufec6\012\ufec6" +
    "\013\ufec6\014\ufec6\022\ufec6\023\ufec6\026\ufec6\033\ufec6\034" +
    "\ufec6\035\ufec6\036\ufec6\037\ufec6\052\ufec6\053\ufec6\054\ufec6" +
    "\055\ufec6\056\ufec6\001\002\000\046\003\ufec9\010\ufec9\012" +
    "\ufec9\013\ufec9\014\ufec9\022\ufec9\023\ufec9\026\ufec9\033\ufec9" +
    "\034\ufec9\035\ufec9\036\ufec9\037\ufec9\052\ufec9\053\ufec9\054" +
    "\ufec9\055\ufec9\056\ufec9\001\002\000\004\026\u01e5\001\002" +
    "\000\046\003\ufeca\010\ufeca\012\ufeca\013\ufeca\014\ufeca\022" +
    "\ufeca\023\ufeca\026\ufeca\033\ufeca\034\ufeca\035\ufeca\036\ufeca" +
    "\037\ufeca\052\ufeca\053\ufeca\054\ufeca\055\ufeca\056\ufeca\001" +
    "\002\000\006\003\u01f6\026\u01f5\001\002\000\006\026\uff40" +
    "\045\024\001\002\000\042\003\u01ed\010\u014e\012\u0150\013" +
    "\u0153\014\u0146\022\137\023\140\026\u01ec\033\143\034\152" +
    "\035\135\036\136\037\150\052\133\055\146\056\u014f\001" +
    "\002\000\006\026\uff30\045\024\001\002\000\004\026\uff34" +
    "\001\002\000\006\003\u01f1\026\u01f0\001\002\000\006\026" +
    "\uff43\045\024\001\002\000\006\026\uff33\045\024\001\002" +
    "\000\004\026\uff37\001\002\000\004\026\uff47\001\002\000" +
    "\006\026\uff42\045\024\001\002\000\006\026\uff32\045\024" +
    "\001\002\000\004\026\uff36\001\002\000\004\026\uff46\001" +
    "\002\000\004\026\uff44\001\002\000\006\026\uff41\045\024" +
    "\001\002\000\006\026\uff31\045\024\001\002\000\004\026" +
    "\uff35\001\002\000\004\026\uff45\001\002\000\010\003\u010c" +
    "\006\u010e\024\u01fb\001\002\000\004\024\u01ff\001\002\000" +
    "\014\003\uff52\025\uff52\046\u0113\057\u0112\061\u0111\001\002" +
    "\000\006\003\uff50\025\uff50\001\002\000\010\003\uff51\025" +
    "\uff51\057\u0112\001\002\000\006\003\uff4f\025\uff4f\001\002" +
    "\000\014\003\uff62\025\uff62\046\u0113\057\u0112\061\u0111\001" +
    "\002\000\006\003\uff60\025\uff60\001\002\000\010\003\uff61" +
    "\025\uff61\057\u0112\001\002\000\006\003\uff5f\025\uff5f\001" +
    "\002\000\014\006\027\026\u0207\041\031\044\032\045\024" +
    "\001\002\000\006\026\u022e\045\024\001\002\000\012\006" +
    "\027\026\u0217\044\032\045\024\001\002\000\010\026\u020c" +
    "\044\032\045\024\001\002\000\006\002\uffcc\040\017\001" +
    "\002\000\004\026\u0209\001\002\000\006\002\uffbd\040\017" +
    "\001\002\000\004\002\uffcd\001\002\000\004\002\uffdc\001" +
    "\002\000\006\002\uffc3\040\017\001\002\000\006\026\u0211" +
    "\045\024\001\002\000\004\026\u020f\001\002\000\006\002" +
    "\uffc1\040\017\001\002\000\004\002\uffd1\001\002\000\006" +
    "\002\uffc2\040\017\001\002\000\004\026\u0213\001\002\000" +
    "\006\002\uffc0\040\017\001\002\000\004\002\uffd0\001\002" +
    "\000\004\002\uffd2\001\002\000\004\002\uffd3\001\002\000" +
    "\006\002\uffcb\040\017\001\002\000\006\026\u0228\045\024" +
    "\001\002\000\004\026\u0226\001\002\000\010\026\u021b\044" +
    "\032\045\024\001\002\000\006\002\uffca\040\017\001\002" +
    "\000\006\026\u0220\045\024\001\002\000\004\026\u021e\001" +
    "\002\000\006\002\uffc6\040\017\001\002\000\004\002\uffd6" +
    "\001\002\000\006\002\uffc7\040\017\001\002\000\004\026" +
    "\u0222\001\002\000\006\002\uffc4\040\017\001\002\000\004" +
    "\002\uffd4\001\002\000\004\002\uffd7\001\002\000\004\002" +
    "\uffda\001\002\000\006\002\uffc8\040\017\001\002\000\004" +
    "\002\uffd8\001\002\000\006\002\uffc9\040\017\001\002\000" +
    "\004\026\u022a\001\002\000\006\002\uffc5\040\017\001\002" +
    "\000\004\002\uffd5\001\002\000\004\002\uffd9\001\002\000" +
    "\004\002\uffdb\001\002\000\006\002\uffbf\040\017\001\002" +
    "\000\004\026\u0230\001\002\000\006\002\uffbe\040\017\001" +
    "\002\000\004\002\uffce\001\002\000\004\002\uffcf\001\002" +
    "\000\004\002\ufffd\001\002\000\004\032\u0235\001\002\000" +
    "\004\040\017\001\002\000\004\002\000\001\002\000\004" +
    "\040\017\001\002\000\004\002\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0236\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\017\001\001\000\004" +
    "\003\u0232\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\022\025\023\027" +
    "\025\024\027\033\001\001\000\004\033\u0107\001\001\000" +
    "\004\027\u0102\001\001\000\010\023\355\025\353\027\354" +
    "\001\001\000\004\010\124\001\001\000\006\025\107\027" +
    "\110\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\036\001\001\000\002\001\001\000\004\003\035\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\046\001\001\000\004\023" +
    "\043\001\001\000\002\001\001\000\004\025\045\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\052\001" +
    "\001\000\004\025\051\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\054\001\001\000\002\001\001\000" +
    "\004\025\056\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\074\001\001\000\004\010" +
    "\064\001\001\000\004\022\072\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\067\001\001\000\002\001" +
    "\001\000\004\022\071\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\077\001\001\000\002\001\001\000" +
    "\004\022\076\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\102\001\001\000\004\022\105\001\001\000" +
    "\002\001\001\000\004\022\104\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\120\001\001\000\004\027" +
    "\114\001\001\000\002\001\001\000\004\003\112\001\001" +
    "\000\002\001\001\000\004\003\117\001\001\000\002\001" +
    "\001\000\004\003\116\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\333\001\001\000" +
    "\004\024\246\001\001\000\002\001\001\000\004\024\125" +
    "\001\001\000\002\001\001\000\004\023\214\001\001\000" +
    "\004\023\213\001\001\000\022\004\131\013\140\026\141" +
    "\034\143\037\150\041\144\043\146\045\133\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\044\205\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\004\131\013\140\026\141\034\143\037\177\041\144" +
    "\043\146\045\133\001\001\000\020\004\131\013\140\026" +
    "\141\034\143\041\144\043\176\045\133\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\044" +
    "\161\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\152\001\001\000\002\001\001\000" +
    "\020\004\131\013\140\026\141\034\143\041\144\043\160" +
    "\045\133\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\004\131\013\140\026\141\034\143\041\144\043\157" +
    "\045\133\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\004\131\013\140\026\141\034\143" +
    "\041\144\043\164\045\133\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\004\131\013\140" +
    "\026\141\034\143\036\167\037\170\041\144\043\146\045" +
    "\133\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\152\001\001\000\024\004\131\013\140\026\141\034" +
    "\143\036\172\037\170\041\144\043\146\045\133\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\026\141\041" +
    "\175\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\152\001\001\000\002\001\001\000\022\004\131\013" +
    "\140\026\141\034\143\037\202\041\144\043\146\045\133" +
    "\001\001\000\004\012\152\001\001\000\020\004\131\013" +
    "\140\026\141\034\143\041\144\043\204\045\133\001\001" +
    "\000\002\001\001\000\020\004\131\013\140\026\141\034" +
    "\143\041\144\043\206\045\133\001\001\000\002\001\001" +
    "\000\024\004\131\013\140\026\141\034\143\036\211\037" +
    "\170\041\144\043\146\045\133\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\220\001\001\000\004\023\217" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\312\001\001\000\004\010\225\001\001\000\004\010\272" +
    "\001\001\000\004\024\237\001\001\000\004\024\226\001" +
    "\001\000\002\001\001\000\004\023\232\001\001\000\004" +
    "\023\231\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\236\001\001\000\004\023\235\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\241\001\001\000\002\001\001\000\004\023\243\001\001" +
    "\000\002\001\001\000\004\010\124\001\001\000\004\024" +
    "\246\001\001\000\002\001\001\000\004\010\253\001\001" +
    "\000\004\023\251\001\001\000\002\001\001\000\004\010" +
    "\261\001\001\000\004\024\254\001\001\000\002\001\001" +
    "\000\004\023\256\001\001\000\002\001\001\000\004\023" +
    "\260\001\001\000\002\001\001\000\004\024\262\001\001" +
    "\000\002\001\001\000\004\023\264\001\001\000\002\001" +
    "\001\000\004\023\266\001\001\000\002\001\001\000\004" +
    "\023\270\001\001\000\002\001\001\000\004\024\304\001" +
    "\001\000\004\024\273\001\001\000\002\001\001\000\004" +
    "\023\277\001\001\000\004\023\276\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\023\303\001\001\000\004" +
    "\023\302\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\306\001\001\000\002\001\001" +
    "\000\004\023\310\001\001\000\002\001\001\000\004\010" +
    "\320\001\001\000\004\024\313\001\001\000\002\001\001" +
    "\000\004\023\315\001\001\000\002\001\001\000\004\023" +
    "\317\001\001\000\002\001\001\000\004\024\321\001\001" +
    "\000\002\001\001\000\004\023\323\001\001\000\002\001" +
    "\001\000\004\023\325\001\001\000\002\001\001\000\004" +
    "\010\253\001\001\000\004\010\330\001\001\000\004\024" +
    "\262\001\001\000\002\001\001\000\004\024\345\001\001" +
    "\000\004\024\334\001\001\000\002\001\001\000\004\023" +
    "\340\001\001\000\004\023\337\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\344\001\001\000\004\023" +
    "\343\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\347\001\001\000\002\001\001\000" +
    "\004\023\351\001\001\000\002\001\001\000\004\003\u0100" +
    "\001\001\000\004\027\374\001\001\000\002\001\001\000" +
    "\006\025\357\027\360\001\001\000\004\003\370\001\001" +
    "\000\004\027\364\001\001\000\002\001\001\000\004\003" +
    "\362\001\001\000\002\001\001\000\004\003\367\001\001" +
    "\000\002\001\001\000\004\003\366\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\372" +
    "\001\001\000\002\001\001\000\004\003\377\001\001\000" +
    "\002\001\001\000\004\003\376\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\u0105\001" +
    "\001\000\002\001\001\000\004\003\u0104\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u0133\001\001\000\004" +
    "\011\u010c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\030\u0113\031\u010f\001\001\000\002" +
    "\001\001\000\004\030\u0122\001\001\000\002\001\001\000" +
    "\004\030\u0115\001\001\000\004\031\u0114\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\u0126\001\001\000\002\001\001\000\004" +
    "\011\u0128\001\001\000\002\001\001\000\006\030\u012b\031" +
    "\u012a\001\001\000\002\001\001\000\004\031\u012c\001\001" +
    "\000\002\001\001\000\004\011\u0131\001\001\000\002\001" +
    "\001\000\004\011\u0130\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\030\u0141\031\u0140\001\001\000\002\001" +
    "\001\000\006\030\u0136\031\u0135\001\001\000\002\001\001" +
    "\000\004\031\u0137\001\001\000\002\001\001\000\006\030" +
    "\u013e\031\u013d\001\001\000\006\030\u013b\031\u013a\001\001" +
    "\000\002\001\001\000\004\031\u013c\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\031\u013f\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\u0142\001\001\000" +
    "\002\001\001\000\042\004\131\006\u0148\007\u014a\013\140" +
    "\014\u0146\015\u014c\016\u0151\023\u01e7\026\141\032\u01e5\034" +
    "\143\037\u0153\040\u0150\041\144\043\146\045\133\001\001" +
    "\000\042\004\131\006\u0148\007\u014a\013\140\014\u0146\015" +
    "\u014c\016\u0151\023\u014b\026\141\032\u0147\034\143\037\u0153" +
    "\040\u0150\041\144\043\146\045\133\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\u01c5\001\001\000\002\001\001\000\040\004" +
    "\131\006\u0148\007\u014a\013\140\014\u0146\015\u014c\016\u0151" +
    "\026\141\032\u01c0\034\143\037\u0153\040\u0150\041\144\043" +
    "\146\045\133\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\004\131\013\140\026\141\034\143\037\u0199\041" +
    "\144\043\146\045\133\001\001\000\002\001\001\000\040" +
    "\004\131\006\u0148\007\u014a\013\140\014\u0146\015\u014c\016" +
    "\u0151\026\141\032\u0178\034\143\037\u0153\040\u0150\041\144" +
    "\043\146\045\133\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\152\001\001\000\040\004\131\006\u0148" +
    "\007\u014a\013\140\014\u0146\015\u014c\016\u0151\026\141\032" +
    "\u0155\034\143\037\u0153\040\u0150\041\144\043\146\045\133" +
    "\001\001\000\002\001\001\000\022\004\131\013\140\026" +
    "\141\034\143\037\u016e\041\144\043\146\045\133\001\001" +
    "\000\002\001\001\000\002\001\001\000\040\004\131\006" +
    "\u015e\007\u0161\013\140\014\u015b\015\u0162\016\u0164\020\u015c" +
    "\026\141\034\143\037\u0165\041\144\042\u0160\043\146\045" +
    "\133\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\004\131\006\u015e\007\u0161\013\140\014\u015b\015\u0162\016" +
    "\u0164\020\u015c\026\141\034\143\037\u0165\041\144\042\u016c" +
    "\043\146\045\133\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\004\131\013\140\026\141\034" +
    "\143\037\u0168\041\144\043\146\045\133\001\001\000\002" +
    "\001\001\000\004\012\152\001\001\000\040\004\131\006" +
    "\u015e\007\u0161\013\140\014\u015b\015\u0162\016\u0164\020\u015c" +
    "\026\141\034\143\037\u0165\041\144\042\u0167\043\146\045" +
    "\133\001\001\000\002\001\001\000\004\012\152\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\012\152\001\001" +
    "\000\002\001\001\000\040\004\131\006\u015e\007\u0161\013" +
    "\140\014\u015b\015\u0162\016\u0164\020\u015c\026\141\034\143" +
    "\037\u0165\041\144\042\u0176\043\146\045\133\001\001\000" +
    "\040\004\131\006\u015e\007\u0161\013\140\014\u015b\015\u0162" +
    "\016\u0164\020\u015c\026\141\034\143\037\u0165\041\144\042" +
    "\u0173\043\146\045\133\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\004\131" +
    "\006\u015e\007\u0161\013\140\014\u015b\015\u0162\016\u0164\020" +
    "\u015c\026\141\034\143\037\u0165\041\144\042\u0189\043\146" +
    "\045\133\001\001\000\040\004\131\006\u015e\007\u0161\013" +
    "\140\014\u015b\015\u0162\016\u0164\020\u015c\026\141\034\143" +
    "\037\u0165\041\144\042\u017c\043\146\045\133\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\004\131\013\140\026\141\034\143\037" +
    "\u0180\041\144\043\146\045\133\001\001\000\004\012\152" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\004\131\013\140\026\141\034\143\037\u0185" +
    "\041\144\043\146\045\133\001\001\000\004\012\152\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\004\131\013\140" +
    "\026\141\034\143\037\u018f\041\144\043\146\045\133\001" +
    "\001\000\004\012\152\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\004" +
    "\131\013\140\026\141\034\143\037\u0195\041\144\043\146" +
    "\045\133\001\001\000\004\012\152\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\012\152" +
    "\001\001\000\002\001\001\000\022\004\131\013\140\026" +
    "\141\034\143\037\u01ac\041\144\043\146\045\133\001\001" +
    "\000\002\001\001\000\002\001\001\000\040\004\131\006" +
    "\u015e\007\u0161\013\140\014\u015b\015\u0162\016\u0164\020\u015c" +
    "\026\141\034\143\037\u0165\041\144\042\u01a0\043\146\045" +
    "\133\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\004\131\006\u015e\007" +
    "\u0161\013\140\014\u015b\015\u0162\016\u0164\020\u015c\026\141" +
    "\034\143\037\u0165\041\144\042\u01a4\043\146\045\133\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\040\004\131\006\u015e\007\u0161\013" +
    "\140\014\u015b\015\u0162\016\u0164\020\u015c\026\141\034\143" +
    "\037\u0165\041\144\042\u01aa\043\146\045\133\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\152\001\001\000\002\001\001\000\040\004\131\006" +
    "\u015e\007\u0161\013\140\014\u015b\015\u0162\016\u0164\020\u015c" +
    "\026\141\034\143\037\u0165\041\144\042\u01b4\043\146\045" +
    "\133\001\001\000\040\004\131\006\u015e\007\u0161\013\140" +
    "\014\u015b\015\u0162\016\u0164\020\u015c\026\141\034\143\037" +
    "\u0165\041\144\042\u01b1\043\146\045\133\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\040\004\131\006\u015e\007\u0161\013\140\014\u015b\015" +
    "\u0162\016\u0164\020\u015c\026\141\034\143\037\u0165\041\144" +
    "\042\u01b9\043\146\045\133\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\004\131\006\u015e\007\u0161\013\140\014\u015b\015\u0162\016" +
    "\u0164\020\u015c\026\141\034\143\037\u0165\041\144\042\u01be" +
    "\043\146\045\133\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u01c2" +
    "\001\001\000\002\001\001\000\004\027\u01c4\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\027\u01c7\001\001" +
    "\000\002\001\001\000\012\021\u01cf\026\141\035\u01d0\041" +
    "\u01d1\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\004\131\006\u015e\007\u0161\013\140\014\u015b\015\u0162\016" +
    "\u0164\020\u015c\026\141\034\143\037\u0165\041\144\042\u01cd" +
    "\043\146\045\133\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\u01d6\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\004\131\013\140\026\141\034\143\037\u01d5" +
    "\041\144\043\146\045\133\001\001\000\004\012\152\001" +
    "\001\000\022\004\131\013\140\026\141\034\143\037\u01d7" +
    "\041\144\043\146\045\133\001\001\000\004\012\152\001" +
    "\001\000\022\004\131\013\140\026\141\034\143\037\u01d9" +
    "\041\144\043\146\045\133\001\001\000\004\012\152\001" +
    "\001\000\022\004\131\013\140\026\141\034\143\037\u01db" +
    "\041\144\043\146\045\133\001\001\000\004\012\152\001" +
    "\001\000\002\001\001\000\040\004\131\006\u015e\007\u0161" +
    "\013\140\014\u015b\015\u0162\016\u0164\020\u015c\026\141\034" +
    "\143\037\u0165\041\144\042\u01e3\043\146\045\133\001\001" +
    "\000\040\004\131\006\u015e\007\u0161\013\140\014\u015b\015" +
    "\u0162\016\u0164\020\u015c\026\141\034\143\037\u0165\041\144" +
    "\042\u01e0\043\146\045\133\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\027" +
    "\u01f3\001\001\000\040\004\131\006\u0148\007\u014a\013\140" +
    "\014\u0146\015\u014c\016\u0151\026\141\032\u01ea\034\143\037" +
    "\u0153\040\u0150\041\144\043\146\045\133\001\001\000\004" +
    "\027\u01e9\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\u01ee\001\001\000\004\027\u01ed\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\u01f2\001\001\000" +
    "\004\027\u01f1\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u01f7\001\001\000\004\027" +
    "\u01f6\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\u01f9\001\001\000\002\001\001\000\006\030\u01fc\031" +
    "\u01fb\001\001\000\002\001\001\000\004\031\u01fd\001\001" +
    "\000\002\001\001\000\006\030\u0200\031\u01ff\001\001\000" +
    "\002\001\001\000\004\031\u0201\001\001\000\002\001\001" +
    "\000\012\022\u0204\023\u0205\025\u0203\027\u0207\001\001\000" +
    "\004\027\u022e\001\001\000\010\023\u0219\025\u0217\027\u0218" +
    "\001\001\000\006\025\u020c\027\u020d\001\001\000\004\003" +
    "\u020a\001\001\000\002\001\001\000\004\003\u0209\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\u0215\001" +
    "\001\000\004\027\u0211\001\001\000\002\001\001\000\004" +
    "\003\u020f\001\001\000\002\001\001\000\004\003\u0214\001" +
    "\001\000\002\001\001\000\004\003\u0213\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\u022c\001\001\000\004\027\u0228\001\001\000\002\001\001" +
    "\000\006\025\u021b\027\u021c\001\001\000\004\003\u0224\001" +
    "\001\000\004\027\u0220\001\001\000\002\001\001\000\004" +
    "\003\u021e\001\001\000\002\001\001\000\004\003\u0223\001" +
    "\001\000\002\001\001\000\004\003\u0222\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\u0226\001\001\000\002\001\001\000\004\003\u022b\001\001" +
    "\000\002\001\001\000\004\003\u022a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\u0231" +
    "\001\001\000\002\001\001\000\004\003\u0230\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u0235\001\001\000\002\001\001\000" +
    "\004\003\u0237\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  public ArrayList<Symbol> errores = new ArrayList<>();
  public ArrayList<String> erroresStr = new ArrayList<>();
  
  public void syntax_error(Symbol s) {
    System.out.println("ERROR EN " + s.value + " " + Integer.toString(s.right + 1) + ": " + Integer.toString(s.left + 1) );
    String cadena = "";
    for (int i = this.stack.size() - 1; i > 0; i--) {
      Symbol sp = this.stack.get(i);
       
      System.out.println(sp.value + " " + Integer.toString(sp.right + 1) + ": " + Integer.toString(sp.left + 1) );
      cadena = sp.value + " " + cadena;
      System.out.println(cadena );
        if(sym.T_dato == sp.sym){
              for(int j = i-1; j > 0; j--){                
                  sp = this.stack.get(j);
                  cadena = ((sp.value == null) ? ".." :  sp.value)+ " " + cadena;
                  if ("struct".equals(sp.value)) {
                      cadena += "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Variable_Struct");
                      break;
                  }
                  if("(".equals(sp.value)){
                      for(int k = j-1; k > 0; k--){ 
                          sp = this.stack.get(k);
                          cadena = sp.value + " " + cadena;
                          if ("function".equals(sp.value)) {
                              cadena += "~" + s.value + "~ ...";
                              Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                              errores.add(sp2);
                              erroresStr.add("Parametro_Function");
                              break;
                          }
                          if ("returns".equals(sp.value)) {
                              cadena += "~" + s.value + "~ ...";
                              Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                              errores.add(sp2);
                              erroresStr.add("Returns_Function");
                              break;
                          }
                      }
                      break;
                  }
                  if ("returns".equals(sp.value)) {
                            System.out.println("Wh");
                              cadena += "~" + s.value + "~ ...";
                              Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                              errores.add(sp2);
                              erroresStr.add("Returns_Function");
                              break;
                          }

                  if ("contract".equals(sp.value)){
                      cadena += "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Variable_Contract");
                      break;
                  }
                  if ("function".equals(sp.value)){
                      cadena += "~" + s.value + "~ ...";
                      Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
                      errores.add(sp2);
                      erroresStr.add("Variable_Function");
                      break;
                  }
              }
              break;  
        }
        if ("returns".equals(sp.value)) {
          cadena += "~" + s.value + "~ ...";
          Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
          errores.add(sp2);
          erroresStr.add("Returns_Function");
          break;
        }
      if ("enum".equals(sp.value)) {
        System.out.println("Soy un error de enum xd");
        //System.out.println("Soy un error de enum xd");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Enum"+" (" + Integer.toString(sp.right+1) + ")");
        break;
      }
      if ("struct".equals(sp.value)) {
        //System.out.println("Soy un error de struct chama");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Struct");
        break;
      }
      if ("function".equals(sp.value)) {
        System.out.println("Soy un error de function chama");
        cadena += "~" + s.value + "~ ...";
        System.out.println(cadena);
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Function");
        break;
      }
      if ("pragma".equals(sp.value)) {
        //System.out.println("Soy un error de inicio");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Inicio");
        break;
      }
      if (";".equals(sp.value)) {
        //System.out.println("Soy un error de Expresion");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Expresion");
        break;
      }
      if ("contract".equals(sp.value)) {
        //System.out.println("Soy un error de inicio");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Inicio");
        break;
      }
      if ("if".equals(sp.value)) {
        //System.out.println("Soy un error de if");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);

        errores.add(sp2);
        erroresStr.add("If");
        

        break;
      }
      if ("for".equals(sp.value)) {
        //System.out.println("Soy un error de for");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("For");

        break;
      }
      if ("while".equals(sp.value)) {
        //System.out.println("Soy un error de while");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("While");

        break;
      }
      if ("do".equals(sp.value)) {
        //System.out.println("Soy un error de do");
        cadena += "~" + s.value + "~ ...";
        //if (this.lookahead != null) for (Symbol x : this.lookahead) System.out.println(x.value);
        Symbol sp2 = new Symbol(s.sym, s.left, s.right, cadena);
        errores.add(sp2);
        erroresStr.add("Do");

        break;
      }
        }
  }
  @Override
  public int error_sync_size() {
    return 2;
  }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // SENTENCIA_FOR ::= ASIGNACION_COMPLEJA P_coma EXPRESION P_coma EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA_FOR",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // FOR ::= For error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // FOR ::= For error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FOR",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // DO_WHILE ::= Do Llave_a Llave_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // DO_WHILE ::= Do Llave_a CUERPO_EC Llave_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // DO_WHILE ::= Do error Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // DO_WHILE ::= Do error CUERPO_EC Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // DO_WHILE ::= Do Llave_a Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // DO_WHILE ::= Do Llave_a CUERPO_EC Llave_c While Parentesis_a EXPRESION Parentesis_c P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DO_WHILE",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // WHILE ::= While error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // WHILE ::= While error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // WHILE ::= While Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("WHILE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // IF_ELSE ::= If error Parentesis_c Llave_a Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // IF_ELSE ::= If error Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // IF_ELSE ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // IF_ELSE ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // IF_ELSE ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c Else Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF_ELSE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // EXPRESION_BOOLEANA ::= P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_BOOLEANA",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // IF ::= If Parentesis_a EXPRESION Parentesis_c error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // IF ::= If Parentesis_a EXPRESION Parentesis_c error CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // IF ::= If error Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // IF ::= If error Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // IF ::= If Parentesis_a EXPRESION Parentesis_c Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // IF ::= If Parentesis_a EXPRESION Parentesis_c Llave_a CUERPO_EC Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IF",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // OP_TERNARIO ::= Parentesis_a EXPRESION Parentesis_c Pregunta EXPRESION Dos_Puntos EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_TERNARIO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // CUERPO_EC ::= SENTENCIA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // CUERPO_EC ::= EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // CUERPO_EC ::= SENTENCIA CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // CUERPO_EC ::= EXPRESION P_coma CUERPO_EC 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO_EC",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // SENTENCIA ::= Return EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // SENTENCIA ::= Continue P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // SENTENCIA ::= Break P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // SENTENCIA ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // SENTENCIA ::= DO_WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // SENTENCIA ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // SENTENCIA ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // SENTENCIA ::= IF_ELSE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SENTENCIA",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // ESTRUCTURA_CONTROL ::= Return EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // ESTRUCTURA_CONTROL ::= FOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // ESTRUCTURA_CONTROL ::= DO_WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // ESTRUCTURA_CONTROL ::= WHILE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // ESTRUCTURA_CONTROL ::= IF 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // ESTRUCTURA_CONTROL ::= IF_ELSE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA_CONTROL",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // OP_UNARIO ::= Not 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // OP_UNARIO ::= Menos 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // OP_UNARIO ::= Mas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_UNARIO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // OP_ARITMETICO ::= Menos 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // OP_ARITMETICO ::= Mas 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // OP_ARITMETICO ::= Op_Aritmetico 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("OP_ARITMETICO",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // EXPRESION_TERM ::= IDENTIFICADOR_CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // EXPRESION_TERM ::= LITERAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // EXPRESION_TERM ::= OP_TERNARIO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // EXPRESION_TERM ::= ASIGNACION_BASICA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // EXPRESION_TERM ::= OP_UNARIO EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // EXPRESION_TERM ::= Parentesis_a EXPRESION Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION_TERM",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // EXPRESION ::= EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // EXPRESION ::= EXPRESION Op_logico EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // EXPRESION ::= EXPRESION OP_ARITMETICO EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EXPRESION",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LITERAL ::= Op_booleano 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // LITERAL ::= String 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // LITERAL ::= Numero 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LITERAL",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // ARGUMENTOS ::= EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARGUMENTOS",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // ARGUMENTOS ::= EXPRESION Coma ARGUMENTOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARGUMENTOS",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // ATRIBUCION_IGUAL ::= Igual 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATRIBUCION_IGUAL",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // ATRIBUCION_IGUAL ::= Op_atribucion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ATRIBUCION_IGUAL",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // ASIGNACION_COMPLEJA ::= T_dato Identificador Igual EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_COMPLEJA",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // ASIGNACION_COMPLEJA ::= IDENTIFICADOR_CUERPO ATRIBUCION_IGUAL EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_COMPLEJA",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // ASIGNACION_BASICA ::= LITERAL ATRIBUCION_IGUAL EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_BASICA",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // ASIGNACION_BASICA ::= IDENTIFICADOR_CUERPO ATRIBUCION_IGUAL EXPRESION_TERM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION_BASICA",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // IDENTIFICADOR_CUERPO ::= IDENTIFICADOR_COMPLEJO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_CUERPO",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // IDENTIFICADOR_CUERPO ::= IDENTIFICADOR_COMPLEJO Punto IDENTIFICADOR_CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_CUERPO",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // IDENTIFICADOR_COMPLEJO ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // IDENTIFICADOR_COMPLEJO ::= Identificador Parentesis_a ARGUMENTOS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // IDENTIFICADOR_COMPLEJO ::= Identificador Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // IDENTIFICADOR_COMPLEJO ::= This 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // IDENTIFICADOR_COMPLEJO ::= This Parentesis_a ARGUMENTOS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // IDENTIFICADOR_COMPLEJO ::= This Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IDENTIFICADOR_COMPLEJO",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // CUERPO ::= ESTRUCTURA_CONTROL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // CUERPO ::= EXPRESION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // CUERPO ::= ESTRUCTURA_CONTROL CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // CUERPO ::= EXPRESION P_coma CUERPO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CUERPO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // MODIFICADORES ::= Visibilidad 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // MODIFICADORES ::= Modificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // MODIFICADORES ::= Visibilidad MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // MODIFICADORES ::= Modificador MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MODIFICADORES",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // PARAMETROS ::= error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // PARAMETROS ::= T_dato error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // PARAMETROS ::= T_dato error Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // PARAMETROS ::= error Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // PARAMETROS ::= error Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // PARAMETROS ::= error Identificador Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // PARAMETROS ::= T_dato Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // PARAMETROS ::= T_dato Identificador Coma PARAMETROS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARAMETROS",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // RETURNS ::= Returns Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // RETURNS ::= Returns Parentesis_a T_dato Identificador error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // RETURNS ::= Returns Parentesis_a T_dato error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // RETURNS ::= Returns error T_dato Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // RETURNS ::= Returns Parentesis_a T_dato Identificador Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("RETURNS",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // FUNCION ::= Function FUNCION_HEADER Llave_a error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // FUNCION ::= Function FUNCION_HEADER Llave_a CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES CUERPO error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // FUNCION ::= Function FUNCION_HEADER Llave_a error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // FUNCION ::= Function FUNCION_HEADER Llave_a CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES CUERPO error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES error FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // FUNCION ::= Function FUNCION_HEADER error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // FUNCION ::= Function FUNCION_HEADER error CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // FUNCION ::= Function FUNCION_HEADER error VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // FUNCION ::= Function FUNCION_HEADER error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // FUNCION ::= Function FUNCION_HEADER error Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // FUNCION ::= Function FUNCION_HEADER error CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // FUNCION ::= Function FUNCION_HEADER error VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // FUNCION ::= Function FUNCION_HEADER error VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // FUNCION ::= Function FUNCION_HEADER Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // FUNCION ::= Function FUNCION_HEADER Llave_a CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // FUNCION ::= Function FUNCION_HEADER Llave_a Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // FUNCION ::= Function FUNCION_HEADER Llave_a CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES CUERPO Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // FUNCION ::= Function FUNCION_HEADER Llave_a VARIABLES Llave_c FUNCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // FUNCION_HEADER ::= Identificador Parentesis_a error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // FUNCION_HEADER ::= Identificador Parentesis_a error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // FUNCION_HEADER ::= Identificador Parentesis_a error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // FUNCION_HEADER ::= Identificador error Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // FUNCION_HEADER ::= Identificador error Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // FUNCION_HEADER ::= Identificador error Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // FUNCION_HEADER ::= Identificador error Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // FUNCION_HEADER ::= error Parentesis_a Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // FUNCION_HEADER ::= error Parentesis_a Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // FUNCION_HEADER ::= error Parentesis_a Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // FUNCION_HEADER ::= error Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // FUNCION_HEADER ::= Identificador Parentesis_a Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // FUNCION_HEADER ::= Identificador Parentesis_a Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // FUNCION_HEADER ::= Identificador Parentesis_a Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // FUNCION_HEADER ::= Identificador Parentesis_a Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS error MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS error RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS error MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // FUNCION_HEADER ::= Identificador error PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // FUNCION_HEADER ::= Identificador error PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // FUNCION_HEADER ::= Identificador error PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // FUNCION_HEADER ::= Identificador error PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // FUNCION_HEADER ::= error Parentesis_a PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // FUNCION_HEADER ::= error Parentesis_a PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // FUNCION_HEADER ::= error Parentesis_a PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // FUNCION_HEADER ::= error Parentesis_a PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS Parentesis_c MODIFICADORES RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS Parentesis_c RETURNS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS Parentesis_c MODIFICADORES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // FUNCION_HEADER ::= Identificador Parentesis_a PARAMETROS Parentesis_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FUNCION_HEADER",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES error ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ESTRUCTURA ::= Struct Identificador error VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // ESTRUCTURA ::= Struct error Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // ESTRUCTURA ::= Struct Identificador error VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // ESTRUCTURA ::= Struct error Llave_a VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // ESTRUCTURA ::= Struct Identificador Llave_a VARIABLES Llave_c ESTRUCTURA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ESTRUCTURA",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // ASIGNACION ::= Igual EXPRESION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ASIGNACION",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // VARIABLES ::= T_dato LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // VARIABLES ::= T_dato LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // VARIABLES ::= T_dato Visibilidad LISTA error 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // VARIABLES ::= T_dato LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // VARIABLES ::= T_dato LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // VARIABLES ::= T_dato Visibilidad LISTA error VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // VARIABLES ::= T_dato Corchete_a error LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // VARIABLES ::= T_dato Corchete_a error LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // VARIABLES ::= T_dato Corchete_a error LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // VARIABLES ::= T_dato Corchete_a error LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // VARIABLES ::= T_dato Corchete_a error Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // VARIABLES ::= T_dato error Corchete_c LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // VARIABLES ::= T_dato error Corchete_c LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // VARIABLES ::= T_dato error Corchete_c LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // VARIABLES ::= T_dato error Corchete_c Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // VARIABLES ::= T_dato error Corchete_c LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // VARIABLES ::= T_dato Corchete_a Corchete_c error ASIGNACION P_coma T_dato error Corchete_c Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // VARIABLES ::= T_dato error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // VARIABLES ::= T_dato Visibilidad error ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // VARIABLES ::= T_dato Corchete_a Corchete_c error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // VARIABLES ::= T_dato error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // VARIABLES ::= T_dato Visibilidad error P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // VARIABLES ::= T_dato Corchete_a Corchete_c error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // VARIABLES ::= T_dato error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // VARIABLES ::= T_dato Visibilidad error ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // VARIABLES ::= T_dato Corchete_a Corchete_c error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // VARIABLES ::= T_dato error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // VARIABLES ::= T_dato Visibilidad error P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // VARIABLES ::= T_dato LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // VARIABLES ::= T_dato LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // VARIABLES ::= T_dato Visibilidad LISTA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // VARIABLES ::= T_dato LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // VARIABLES ::= T_dato Visibilidad LISTA ASIGNACION P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // VARIABLES ::= T_dato Corchete_a Corchete_c LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // VARIABLES ::= T_dato Corchete_a Corchete_c Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // VARIABLES ::= T_dato LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // VARIABLES ::= T_dato Visibilidad LISTA P_coma VARIABLES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VARIABLES",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // LISTA ::= Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // LISTA ::= Identificador Coma LISTA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTA",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ENUMERADOR ::= Enum Identificador error Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ENUMERADOR ::= Enum Identificador error LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ENUMERADOR ::= Enum error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ENUMERADOR ::= Enum error Llave_a LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ENUMERADOR ::= Enum Identificador error Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ENUMERADOR ::= Enum Identificador error LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ENUMERADOR ::= Enum error Llave_a Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ENUMERADOR ::= Enum error Llave_a LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ENUMERADOR ::= Enum Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ENUMERADOR ::= Enum Identificador Llave_a LISTA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ENUMERADOR ::= Enum Identificador Llave_a Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ENUMERADOR ::= Enum Identificador Llave_a LISTA Llave_c ENUMERADOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENUMERADOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // CONTRATO ::= Contract error Llave_a FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // CONTRATO ::= Contract error Llave_a ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CONTRATO ::= Contract error Llave_a ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CONTRATO ::= Contract error Llave_a VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CONTRATO ::= Contract error Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CONTRATO ::= Contract error Llave_a ENUMERADOR FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CONTRATO ::= Contract error Llave_a ENUMERADOR Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CONTRATO ::= Contract error Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CONTRATO ::= Contract error Llave_a FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CONTRATO ::= Contract error Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CONTRATO ::= Contract error Llave_a ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // CONTRATO ::= Contract error Llave_a VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // CONTRATO ::= Contract error Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // CONTRATO ::= Contract error Llave_a VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CONTRATO ::= Contract error Llave_a ENUMERADOR FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CONTRATO ::= Contract error Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CONTRATO ::= Contract error Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CONTRATO ::= Contract error Llave_a ENUMERADOR Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CONTRATO ::= Contract error Llave_a Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CONTRATO ::= Contract Identificador Llave_a FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONTRATO ::= Contract Identificador Llave_a VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONTRATO ::= Contract Identificador Llave_a VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CONTRATO ::= Contract Identificador Llave_a Llave_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTRATO ::= Contract Identificador Llave_a FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CONTRATO ::= Contract Identificador Llave_a ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONTRATO ::= Contract Identificador Llave_a VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CONTRATO ::= Contract Identificador Llave_a VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CONTRATO ::= Contract Identificador Llave_a VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR FUNCION Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR ESTRUCTURA Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR VARIABLES Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CONTRATO ::= Contract Identificador Llave_a ENUMERADOR Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CONTRATO ::= Contract Identificador Llave_a Llave_c CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTRATO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= Pragma Solidity Caret Numero Numero P_coma error CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= Pragma error P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= Pragma Solidity Caret Numero Numero P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= Pragma Solidity Numero Numero P_coma CONTRATO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

